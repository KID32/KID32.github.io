<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>朱海萍老师作业6</title>
      <link href="/2023/09/06/%E6%9C%B1%E6%B5%B7%E8%90%8D%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A6/"/>
      <url>/2023/09/06/%E6%9C%B1%E6%B5%B7%E8%90%8D%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A6/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h2 id="6-1-用指针实现两个数的交换"><a href="#6-1-用指针实现两个数的交换" class="headerlink" title="6.1 用指针实现两个数的交换"></a>6.1 用指针实现两个数的交换</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个函数void swap(int *p1,int *p2)。在主函数中输入两个整数，调用swap函数，并在主函数中输出交换后的整数。</p><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,56</span><br></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">56,3</span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//交换数字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span>&#123;</span><br><span class="line">    <span class="type">int</span> t = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i, j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;i, &amp;j);<span class="comment">//输入</span></span><br><span class="line">    swap(&amp;i, &amp;j);<span class="comment">//交换</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>, i, j);<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-2-编写一个函数，用指针作为参数，其功能为对整数数组中数进行排序"><a href="#6-2-编写一个函数，用指针作为参数，其功能为对整数数组中数进行排序" class="headerlink" title="6.2 编写一个函数，用指针作为参数，其功能为对整数数组中数进行排序"></a>6.2 编写一个函数，用指针作为参数，其功能为对整数数组中数进行排序</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个函数void fun(int *p, int n)，其功能为对整数数组p[5]中的数字进行排序。排序结果<strong>在主函数中输出</strong>。</p><p>注意：输出数字之间用一个空格分隔</p><h3 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">34 78 23 12 69</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">78 69 34 23 12</span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//交换数字</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span> *p1, <span class="type">int</span> *p2)</span>&#123;</span><br><span class="line">    <span class="type">int</span> t = *p1;</span><br><span class="line">    *p1 = *p2;</span><br><span class="line">    *p2 = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//自大到小排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">func</span><span class="params">(<span class="type">int</span> *p, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (p[i] &lt; p[j])&#123;</span><br><span class="line">                swap(&amp;p[i], &amp;p[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> p[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p[i]);</span><br><span class="line">    &#125;<span class="comment">//输入</span></span><br><span class="line">    func(p, <span class="number">5</span>);<span class="comment">//排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p[i]);</span><br><span class="line">    &#125;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-3-用指针实现数组循环右移"><a href="#6-3-用指针实现数组循环右移" class="headerlink" title="6.3 用指针实现数组循环右移"></a>6.3 用指针实现数组循环右移</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>若有n个数，循环右移一位指每个数移到相邻的右边一个位置，最右边的数移到最左边。如数1,2,3,4,5循环右移一位的结果为5,1,2,3,4；右移3位的结果为3,4,5,1,2。<br>编写函数，实现数组元素的循环右移k位，<strong>要求用指针实现</strong>。  </p><p>题目考察点：指针与一维数组  </p><p><strong>要求</strong>：主函数输入若干元素和右移位数，调用函数右移，在主函数中输出结果。元素个数不超过100,要求用指针实现。  </p><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h3><p>三行，第1行为数组长度n；第2行为若干用空格分隔的整数；第3行一个整数，表示右移的位数。  </p><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h3><p>一行，移位的结果，用一个空格隔开，末尾无空格。</p><h3 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5  </span><br><span class="line">1 2 3 4 5  </span><br><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 5 1 2</span><br></pre></td></tr></table></figure><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*void rotate_right_through_carry(int *array, int num, int offset)&#123;</span></span><br><span class="line"><span class="comment">    for(int i=0;i&lt;offset;i++)&#123;</span></span><br><span class="line"><span class="comment">        int t=array[num-1];</span></span><br><span class="line"><span class="comment">        for(int j=num-1;j&gt;0;j--)&#123;</span></span><br><span class="line"><span class="comment">            array[j]=array[j-1];</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        array[0]=t;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">rotate_right_through_carry</span><span class="params">(<span class="type">int</span> *<span class="built_in">array</span>, <span class="type">int</span> num, <span class="type">int</span> offset)</span>&#123; <span class="comment">// offset为右移位数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; offset; i++)&#123; <span class="comment">// 执行右移操作offset遍</span></span><br><span class="line">        <span class="built_in">array</span> += num - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> t = *<span class="built_in">array</span>; <span class="comment">// 指向最后一位</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = num - <span class="number">1</span>; j &gt; <span class="number">0</span>; j--)&#123;</span><br><span class="line">            *<span class="built_in">array</span> = *(<span class="built_in">array</span> - <span class="number">1</span>);</span><br><span class="line">            <span class="built_in">array</span>--;</span><br><span class="line">        &#125;</span><br><span class="line">        *<span class="built_in">array</span> = t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> num, <span class="built_in">array</span>[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, offset;</span><br><span class="line">    <span class="comment">//输入</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;offset);</span><br><span class="line">    rotate_right_through_carry(<span class="built_in">array</span>, num, offset);<span class="comment">//右移</span></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-4-用指针实现字符串中的整数识别"><a href="#6-4-用指针实现字符串中的整数识别" class="headerlink" title="6.4 用指针实现字符串中的整数识别"></a>6.4 用指针实现字符串中的整数识别</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一段文字，其中有若干整数。编写函数，找出其中的整数，存入一个数组中。函数原型为：<br><code>int findint(char *s,int *a);</code><br>其中s表示带数字的字符串，a表示存整数的数组，返回值为字符串中的整数个数。字符串中只有正整数。  </p><p>编写主函数，输入字符串，调用函数识别整数，<strong>逆序</strong>输出它们。例如，输入字符串“The Wandering Earth exhibition at the China Science and Technology Museum in Beijing, April 4, 2019.”识别数字，输出“2019,4”。  </p><p>题目考察点：指针与字符数组<br>题目延伸：（1）如果字符串中有负整数，如何修改程序。（2）如果字符串中是实数，如何编写程序。</p><h3 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h3><p>带空格字符串  </p><h3 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h3><p>若干整数，用逗号隔开。  </p><h3 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he Wandering Earth exhibition at the China Science and Technology Museum in Beijing, April 4, 2019.  </span><br></pre></td></tr></table></figure><h4 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019,4</span><br></pre></td></tr></table></figure><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找整数，存入a数组，返回整数的个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">findint</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> *a)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>, num = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*s)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;0&#x27;</span> &lt;= *s &amp;&amp; *s &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            i = i * <span class="number">10</span> + *s - <span class="string">&#x27;0&#x27;</span>; <span class="comment">// 计算整数</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (flag)&#123; <span class="comment">// flag=1，说明找到过整数，现在将这个整数存入数组</span></span><br><span class="line">                a[num++] = i;</span><br><span class="line">                flag = <span class="number">0</span>; <span class="comment">// 防止重复存入</span></span><br><span class="line">                i = <span class="number">0</span>;    <span class="comment">// 初始化</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ++s;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> input_str[<span class="number">1000</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    gets(input_str);</span><br><span class="line">    <span class="built_in">strcat</span>(input_str, <span class="string">&quot;,&quot;</span>); <span class="comment">// 在末尾添加逗号确保能读取可能存在的最后一个整数</span></span><br><span class="line">    <span class="type">int</span> integer_array[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> num = findint(input_str, integer_array); <span class="comment">// 整数的个数</span></span><br><span class="line">    <span class="comment">// 输出</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, integer_array[num - <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = num - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;,%d&quot;</span>, integer_array[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-5-用指针实现字符串的部分复制"><a href="#6-5-用指针实现字符串的部分复制" class="headerlink" title="6.5 用指针实现字符串的部分复制"></a>6.5 用指针实现字符串的部分复制</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个函数，实现字符串的前n个字符的复制。  </p><p>要求使用指针实现，函数定义如下：<br><code>char *mystrncpy(char *str1,char *str2,int n)</code>，将str2的前n个字符复制到str1中，函数返回为字符指针。</p><p>在主函数中输入字符串和n（<strong>字符串可以包含空格</strong>），输出复制后的字符串，如果n超过字符串中包含的字符个数（不算空格），则提示出错。</p><h3 id="输入输出样例-4"><a href="#输入输出样例-4" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入#1"></a>输入#1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello  </span><br><span class="line">2  </span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出#1"></a>输出#1</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">he</span><br></pre></td></tr></table></figure><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入#2"></a>输入#2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello  </span><br><span class="line">6  </span><br></pre></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出#2"></a>输出#2</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error  </span><br></pre></td></tr></table></figure><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入#3"></a>输入#3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hell dsff  </span><br><span class="line">9  </span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出#3"></a>输出#3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error</span><br></pre></td></tr></table></figure><h4 id="输入-4"><a href="#输入-4" class="headerlink" title="输入#4"></a>输入#4</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello world  </span><br><span class="line">8  </span><br></pre></td></tr></table></figure><h4 id="输出-4"><a href="#输出-4" class="headerlink" title="输出#4"></a>输出#4</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hellowor </span><br></pre></td></tr></table></figure><p>注：字符串中含有空格的话，则跳过空格赋值（参见上面最后一个例子）。</p><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> *<span class="title function_">mystrncpy</span><span class="params">(<span class="type">char</span> *str1, <span class="type">char</span> *str2, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (*str2 == <span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">            <span class="comment">//n超过字符串中包含的字符个数</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (*str2 != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">            *str1 = *str2;</span><br><span class="line">            ++str1;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//空格个数不计入</span></span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        ++str2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; n)&#123;</span><br><span class="line">        <span class="comment">//n超过字符串中包含的字符个数，具体表现为i&lt;n</span></span><br><span class="line">        <span class="type">char</span> *ch = <span class="string">&quot;error&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> ch;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        str1 -= n;<span class="comment">//指向第一位</span></span><br><span class="line">        <span class="keyword">return</span> str1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">char</span> str1[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, str2[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    gets(str2);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, mystrncpy(str1, str2, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-6-最短路径"><a href="#6-6-最短路径" class="headerlink" title="6.6 最短路径"></a>6.6 最短路径</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一个N*M的矩阵，其中所有元素都是正整数。请设计一个函数，计算从左上角出发到右下角的一条路径，使得该路径上的元素之和最小，路径只能向右或向下移动。输入数据为矩阵的行列数和元素值，要求使用指针来实现该函数，并且不使用额外空间。(N和M不超过100)</p><h3 id="输入输出样例-5"><a href="#输入输出样例-5" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 3 1</span><br><span class="line">1 5 1</span><br><span class="line">4 2 1</span><br></pre></td></tr></table></figure><h4 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">minpathsum</span><span class="params">(<span class="type">int</span> *mat, <span class="type">int</span> m, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)</span><br><span class="line">        mat[i*n]+=mat[(i<span class="number">-1</span>)*n];</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">        mat[i]+=mat[i<span class="number">-1</span>];</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    前两步均为初始化操作</span></span><br><span class="line"><span class="comment">    1 3 11 3 11 4 5</span></span><br><span class="line"><span class="comment">    1 5 1-&gt;2 5 1-&gt;2 5 1</span></span><br><span class="line"><span class="comment">    4 2 15 2 15 2 1</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;m;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;n;j++)</span><br><span class="line">            mat[i*n+j]+=(mat[(i<span class="number">-1</span>)*n+j]&lt;mat[i*n+j<span class="number">-1</span>])?mat[(i<span class="number">-1</span>)*n+j]:mat[i*n+j<span class="number">-1</span>];</span><br><span class="line">    <span class="comment">//这里是一个状态转移方程，从初始化步骤开始，mat数组的作用变为了记录从矩阵原点到达该点的最小路径</span></span><br><span class="line">    <span class="comment">//如mat[4]即记录了从矩阵第一行第一列到矩阵第二行第二列的最短距离，其余类似</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> mat[m*n<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> row=<span class="number">0</span>, column=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;row, &amp;column);</span><br><span class="line">    <span class="type">int</span> *p=(<span class="type">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>)*row*column);<span class="comment">//申请一个矩阵大小的动态空间</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;row;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;column;j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;p[i*column+j]);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    输入该矩阵，且下标为(以样例举例)</span></span><br><span class="line"><span class="comment">    0 1 2          1 3 1</span></span><br><span class="line"><span class="comment">    3 4 5    -&gt;    1 5 1</span></span><br><span class="line"><span class="comment">    6 7 8          4 2 1</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> min=minpathsum(p,row,column);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,min);</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-7-最大正方形"><a href="#6-7-最大正方形" class="headerlink" title="6.7 最大正方形"></a>6.7 最大正方形</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>在一个由 ‘0’ 和 ‘1’ 组成的二维矩阵内，找到只包含 ‘1’ 的最大正方形，并返回其面积。</p><h3 id="输入输出样例-6"><a href="#输入输出样例-6" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3  </span><br><span class="line">0 1 1  </span><br><span class="line">0 1 1  </span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure><h4 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断列数为column的数组array中，以第x列第y行为起始点、以num为边长的正方形是否只包含“1”</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">square_true</span><span class="params">(<span class="type">int</span> column, <span class="type">int</span> x, <span class="type">int</span> y, <span class="type">int</span> num, <span class="type">int</span> *<span class="built_in">array</span>)</span>&#123;</span><br><span class="line">    <span class="type">int</span> Bool = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = x; i &lt; x + num; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = y; j &lt; y + num; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">array</span>[i + j * column] == <span class="number">0</span>)&#123;</span><br><span class="line">                Bool = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Bool;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> row = <span class="number">0</span>, column = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;row, &amp;column);<span class="comment">//row为行，column为列</span></span><br><span class="line">    <span class="type">int</span> <span class="built_in">array</span>[<span class="number">10000</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; column * row; i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> max = (column &gt; row) ? column : row;</span><br><span class="line">    <span class="type">int</span> max_num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> num = <span class="number">1</span>; num &lt;= max; num++)&#123;</span><br><span class="line">        <span class="comment">//当前判断的正方形边长为num</span></span><br><span class="line">        <span class="comment">//遍历不同的起始点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; column; x++)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> y = <span class="number">0</span>; y &lt; row; y++)&#123;</span><br><span class="line">                <span class="comment">//判断此正方形是否只包含“1”</span></span><br><span class="line">                <span class="keyword">if</span> (square_true(column, x, y, num, <span class="built_in">array</span>))&#123;</span><br><span class="line">                    max_num = num;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max_num * max_num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-8-用指针实现成绩排序"><a href="#6-8-用指针实现成绩排序" class="headerlink" title="6.8 用指针实现成绩排序"></a>6.8 用指针实现成绩排序</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写程序，输入正整数n和n个学生的学号和三门课程成绩，计算每个人的平均分，按平均分从小到大排序，输出排序结果。学号的长度不超过10位；三门课程成绩为整数；平均成绩为实数，输出平均成绩保留两位小数；学生人数不超过50人。  </p><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>请用多个函数+指针实现。  </p><h3 id="输入输出样例-7"><a href="#输入输出样例-7" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5  </span><br><span class="line">001 80 80 80  </span><br><span class="line">002 60 70 80  </span><br><span class="line">003 80 90 93  </span><br><span class="line">004 50 60 70  </span><br><span class="line">005 60 70 83  </span><br></pre></td></tr></table></figure><h3 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">004 50 60 70 60.00  </span><br><span class="line">002 60 70 80 70.00  </span><br><span class="line">005 60 70 83 71.00  </span><br><span class="line">001 80 80 80 80.00  </span><br><span class="line">003 80 90 93 87.67</span><br></pre></td></tr></table></figure><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对均分进行排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">score_sort</span><span class="params">(<span class="type">float</span> *ave_sco, <span class="type">int</span> *sort, <span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; n - i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (ave_sco[sort[j]] &lt; ave_sco[sort[j - <span class="number">1</span>]])&#123;</span><br><span class="line">                <span class="type">int</span> t = sort[j];</span><br><span class="line">                sort[j] = sort[j - <span class="number">1</span>];</span><br><span class="line">                sort[j - <span class="number">1</span>] = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n, sort[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;, score1[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;, score2[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;, score3[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="comment">//利用sort数组辅助排序，sort[i]表示排序位置i对应的学生</span></span><br><span class="line">    <span class="type">float</span> average[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">char</span> number[<span class="number">50</span>][<span class="number">4</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        sort[i] = i;</span><br><span class="line">        <span class="comment">//输入</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;number[i]);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;score1[i], &amp;score2[i], &amp;score3[i]);</span><br><span class="line">        average[i] = (score1[i] + score2[i] + score3[i]) / <span class="number">3.0</span>;<span class="comment">//计算平均值，不能写成3</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    score_sort(average, sort, n);<span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="type">int</span> k = sort[i];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %d %d %d %.2f\n&quot;</span>, number[k], score1[k], score2[k], score3[k], average[k]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-9-字符串替换（动态分配内存可选）"><a href="#6-9-字符串替换（动态分配内存可选）" class="headerlink" title="6.9 字符串替换（动态分配内存可选）"></a>6.9 字符串替换（动态分配内存可选）</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写程序，输入字符串s、s的子串s1、字符串s2。要求将s中所有的子串s1替换为s2，输出替换后的字符串。上述字符串中不含空格，替换后字符串的长度不超过100  </p><p><strong>要求</strong><br>（1）在函数中进行替换操作，在主函数中输出<br>（2）使用指针进行操作，字符数组使用动态内存分配管理，不要使用字符串库函数  </p><h3 id="输入输出样例-8"><a href="#输入输出样例-8" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcdeacdfg cd 1234  </span><br></pre></td></tr></table></figure><h4 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ab1234ea1234fg</span><br></pre></td></tr></table></figure><h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//计算字符串长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mystrlen</span><span class="params">(<span class="type">char</span> *s)</span>&#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (*s)&#123;</span><br><span class="line">        len++;</span><br><span class="line">        s++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将字符串s替换为schange</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">change</span><span class="params">(<span class="type">char</span> *s, <span class="type">char</span> *s1, <span class="type">char</span> *s2, <span class="type">char</span> *schange)</span>&#123;</span><br><span class="line">    <span class="type">int</span> lens = mystrlen(s), lens1 = mystrlen(s1), lens2 = mystrlen(s2), subchange = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; lens; i++)&#123;</span><br><span class="line">        <span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//判断第i位开始，长度为lens1的子串与s1是否相同</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; lens1; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span> (s[i + j] != s1[j])&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">            <span class="comment">//若相同，将s2复制进字符串schange</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; lens2; j++)&#123;</span><br><span class="line">                schange[subchange++] = s2[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//注意i要往后移lens1位，因为循环i++，所以i增加lens1-1</span></span><br><span class="line">            i += lens1 - <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//不相同，将当前字符复制进schange</span></span><br><span class="line">            schange[subchange++] = s[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, s1[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, s2[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;, schange[<span class="number">100</span>] = &#123;<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s %s %s&quot;</span>, s, s1, s2);</span><br><span class="line">    <span class="comment">//将字符串s替换为schange</span></span><br><span class="line">    change(s, s1, s2, schange);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, schange);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-10-矩阵求逆（动态分配内存可选）"><a href="#6-10-矩阵求逆（动态分配内存可选）" class="headerlink" title="6.10 矩阵求逆（动态分配内存可选）"></a>6.10 矩阵求逆（动态分配内存可选）</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写程序，输入整数n（2&lt;=n&lt;=10）、n阶方阵A，计算A的逆矩阵并输出。要求使用指针进行操作，矩阵存储采用动态内存分配，矩阵元素为double类型，最终结果四舍五入保留<strong>两位小数</strong>输出，<strong>矩阵不可逆则输出0</strong>。  </p><h3 id="输入输出样例-9"><a href="#输入输出样例-9" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3  </span><br><span class="line">1 2 3  </span><br><span class="line">4 5 6  </span><br><span class="line">7 2 9  </span><br></pre></td></tr></table></figure><h4 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h4><p>(一行中每个元素间有一个空白字符):  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-0.92 0.33 0.08  </span><br><span class="line">-0.17 0.33 -0.17  </span><br><span class="line">0.75 -0.33 0.08</span><br></pre></td></tr></table></figure><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>高斯消元法。<br>例子：</p><ol><li>步骤1<br>$$<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;3 &amp;1 &amp;0 &amp;0 \\ 4 &amp;5 &amp;6 &amp;0 &amp;1 &amp;0 \\ 7 &amp;2 &amp;9 &amp;0 &amp;0 &amp;1 \\</code></pre> \end{array}<br>\right]<br>\rightarrow<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;3 &amp;1 &amp;0 &amp;0 \\ 0 &amp;-3 &amp;-6 &amp;-4 &amp;1 &amp;0 \\ 0 &amp;-12 &amp;-12 &amp;-7 &amp;0 &amp;1 \\</code></pre> \end{array}<br>\right]<br>\rightarrow<br>$$<br>$$<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;3 &amp;1 &amp;0 &amp;0 \\ 0 &amp;1 &amp;2 &amp;\frac&#123;4&#125;&#123;3&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;0 \\ 0 &amp;0 &amp;12 &amp;9 &amp;-4 &amp;1 \\</code></pre> \end{array}<br>\right]<br>\rightarrow<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;3 &amp;1 &amp;0 &amp;0 \\ 0 &amp;1 &amp;2 &amp;\frac&#123;4&#125;&#123;3&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;0 \\ 0 &amp;0 &amp;1 &amp;\frac&#123;3&#125;&#123;4&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;\frac&#123;1&#125;&#123;12&#125; \\</code></pre> \end{array}<br>\right]<br>$$</li><li>步骤2<br>$$<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;3 &amp;1 &amp;0 &amp;0 \\ 0 &amp;1 &amp;2 &amp;\frac&#123;4&#125;&#123;3&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;0 \\ 0 &amp;0 &amp;1 &amp;\frac&#123;3&#125;&#123;4&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;\frac&#123;1&#125;&#123;12&#125; \\</code></pre> \end{array}<br>\right]<br>\rightarrow<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;2 &amp;0 &amp;-\frac&#123;5&#125;&#123;4&#125; &amp;1 &amp;-\frac&#123;1&#125;&#123;4&#125; \\ 0 &amp;1 &amp;0 &amp;-\frac&#123;1&#125;&#123;6&#125; &amp;\frac&#123;1&#125;&#123;3&#125; &amp;-\frac&#123;1&#125;&#123;6&#125; \\ 0 &amp;0 &amp;1 &amp;\frac&#123;3&#125;&#123;4&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;\frac&#123;1&#125;&#123;12&#125; \\</code></pre> \end{array}<br>\right]<br>\rightarrow<br>$$<br>$$<br>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;0 &amp;0 &amp;-\frac&#123;11&#125;&#123;12&#125; &amp;\frac&#123;1&#125;&#123;3&#125; &amp;\frac&#123;1&#125;&#123;12&#125; \\ 0 &amp;1 &amp;0 &amp;-\frac&#123;1&#125;&#123;6&#125; &amp;\frac&#123;1&#125;&#123;3&#125; &amp;-\frac&#123;1&#125;&#123;6&#125; \\ 0 &amp;0 &amp;1 &amp;\frac&#123;3&#125;&#123;4&#125; &amp;-\frac&#123;1&#125;&#123;3&#125; &amp;\frac&#123;1&#125;&#123;12&#125; \\</code></pre> \end{array}<h1 id="right"><a href="#right" class="headerlink" title="\right]"></a>\right]</h1>\left[<br> \begin{array}{ccc|ccc}<pre><code> 1 &amp;0 &amp;0 &amp;-0.92 &amp;0.33 &amp;0.08 \\ 0 &amp;1 &amp;0 &amp;-0.17 &amp;0.33 &amp;-0.17 \\ 0 &amp;0 &amp;1 &amp;0.75 &amp;-0.33 &amp;0.08 \\</code></pre> \end{array}<br>\right]<br>$$</li></ol><h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;malloc.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 采用高斯消元法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n, flag = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="comment">// 动态分配</span></span><br><span class="line">    <span class="type">double</span> **<span class="built_in">array</span> = (<span class="type">double</span> **)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span> *) * n);</span><br><span class="line">    <span class="type">double</span> **inv = (<span class="type">double</span> **)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span> *) * n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = (<span class="type">double</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span>) * n);</span><br><span class="line">        inv[i] = (<span class="type">double</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span>) * n);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 输入二维数组array，建立增广矩阵inv</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;<span class="built_in">array</span>[i][j]);</span><br><span class="line">            inv[i][j] = (i == j) ? <span class="number">1.0</span> : <span class="number">0.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//步骤1</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="type">double</span> t = <span class="built_in">array</span>[i][i];</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">// 不可逆</span></span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使array[i][i]变为1，此行所有数字均除以array[i][i]</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="built_in">array</span>[i][j] /= t;</span><br><span class="line">            inv[i][j] /= t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//i行以下各行减去第i行使第i位为0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="type">double</span> t = <span class="built_in">array</span>[j][i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">                <span class="built_in">array</span>[j][k] = <span class="built_in">array</span>[j][k] - t * <span class="built_in">array</span>[i][k];</span><br><span class="line">                inv[j][k] = inv[j][k] - t * inv[i][k];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag)&#123;</span><br><span class="line">        <span class="comment">//步骤2</span></span><br><span class="line">        <span class="comment">//第i行以上行减去第i行使第i位为0</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)&#123;</span><br><span class="line">                <span class="type">double</span> t = <span class="built_in">array</span>[j][i];</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++)&#123;</span><br><span class="line">                    inv[j][k] = inv[j][k] - t * inv[i][k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">            <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s%.2f&quot;</span>, (cnt++) ? <span class="string">&quot; &quot;</span> : <span class="string">&quot;&quot;</span>, inv[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>   <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);<span class="comment">//不可逆</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">free</span>(inv);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>卫颜俊老师作业</title>
      <link href="/2023/09/06/%E5%8D%AB%E9%A2%9C%E4%BF%8A%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/09/06/%E5%8D%AB%E9%A2%9C%E4%BF%8A%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h2 id="实验1-1"><a href="#实验1-1" class="headerlink" title="实验1.1"></a>实验1.1</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>将摄氏温度$c$（$℃$）转华氏温度（$f$），公式如下：$f=5/9c+32$</p><p>其中，c必须大于等于0和小于等于180。</p><h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">25</span><br></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f=45.888889</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span>  <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">float</span> c;</span><br><span class="line">    <span class="type">float</span> f;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;c);</span><br><span class="line">    <span class="keyword">if</span> (c&gt;=<span class="number">0</span>&amp;&amp;c&lt;=<span class="number">108</span>)&#123;  <span class="comment">//满足题目条件时计算华氏温度</span></span><br><span class="line">    f=<span class="number">1.0</span>*<span class="number">5</span>/<span class="number">9</span>*c+<span class="number">32</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;华氏温度=%f\n&quot;</span>,f);</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入正确数字范围\n&quot;</span>);</span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>注意第7行<code>1.0</code>的使用，保证运算结果是浮点型</p></blockquote><h2 id="实验1-2"><a href="#实验1-2" class="headerlink" title="实验1.2"></a>实验1.2</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       连续输入10个字母，将偶数个转为大写，奇数个转为小写，非字母原样照印。</p><h3 id="要求-1"><a href="#要求-1" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>不得使用超前知识</p></blockquote><h3 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abCdElGjsK</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aBcDeLgJsK</span><br></pre></td></tr></table></figure><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> x1,x2,x3,x4,x5,x6,x7,x8,x9,x10;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c,%c,%c,%c,%c,%c,%c,%c,%c,%c&quot;</span>,&amp;x1,&amp;x2,&amp;x3,&amp;x4,&amp;x5,&amp;x6,&amp;x7,&amp;x8,&amp;x9,&amp;x10);</span><br><span class="line">    <span class="keyword">if</span> (x1&lt;<span class="number">97</span>)</span><br><span class="line">    x1=x1+<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x2&gt;<span class="number">96</span>)</span><br><span class="line">    x2=x2<span class="number">-32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x3&lt;<span class="number">97</span>)</span><br><span class="line">    x3=x3+<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x4&gt;<span class="number">96</span>)</span><br><span class="line">    x4=x4<span class="number">-32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x5&lt;<span class="number">97</span>)</span><br><span class="line">    x5=x5+<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x6&gt;<span class="number">96</span>)</span><br><span class="line">    x6=x6<span class="number">-32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x7&lt;<span class="number">97</span>)</span><br><span class="line">    x7=x7+<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x8&gt;<span class="number">96</span>)</span><br><span class="line">    x8=x8<span class="number">-32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x9&lt;<span class="number">97</span>)</span><br><span class="line">    x9=x9+<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">if</span> (x10&gt;<span class="number">96</span>)</span><br><span class="line">    x10=x10<span class="number">-32</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c,%c,%c,%c,%c,%c,%c,%c,%c,%c\n&quot;</span>,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-1"><a href="#反思-1" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.由于题干说明输入字母，所以在编写时比较比较粗略，在输入是字母的情况下完全问题</p><p>2.上述代码重复较高，由于不能使用循环，所以大家利用此题简要回顾一下判断语句和ASCⅡ表</p></blockquote><h2 id="实验1-3"><a href="#实验1-3" class="headerlink" title="实验1.3"></a>实验1.3</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>  给出三角形的三边长（a、b、c），使用海伦公式求三角形面积。<br>  需要判断a、b、c是否构成三角形，构不成时面积为零；<br>  构成时还要判断是哪种三角形（直角、锐角、钝角以及等边、等腰、一般）。</p><h3 id="要求-2"><a href="#要求-2" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 4 5</span><br></pre></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为直角三角形</span><br><span class="line">aera=6.000000</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="type">float</span> b;</span><br><span class="line"><span class="type">float</span> c;</span><br><span class="line"><span class="type">float</span> p;</span><br><span class="line"><span class="type">float</span> m;</span><br><span class="line"><span class="type">float</span> area;</span><br><span class="line"></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">if</span> (a+b&gt;c &amp;&amp; a+c&gt;b &amp;&amp; b+c&gt;a) &#123;  <span class="comment">//判断能否构成三角形</span></span><br><span class="line">p=(a+b+c)/<span class="number">2</span>;                <span class="comment">//海伦公式计算面积</span></span><br><span class="line">m=p*(p-a)*(p-b)*(p-c);</span><br><span class="line">area=<span class="built_in">pow</span>(m ,<span class="number">0.5</span>);</span><br><span class="line"><span class="keyword">if</span> (a*a+b*b==c*c || a*a+c*c==b*b || b*b+c*c==a*a) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为直角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a==b==c) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为等边三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((a==b &amp;&amp; a!=c) || (b==c &amp;&amp; b!=a) || (a==c &amp;&amp; a!=b)) &#123;  </span><br><span class="line"><span class="keyword">if</span> (a*a+b*b&lt;c*c || a*a+c*c&lt;b*b || b*b+c*c&lt;a*a) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为等腰钝角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a*a+b*b&gt;c*c &amp;&amp; a*a+c*c&gt;b*b &amp;&amp; b*b+c*c&gt;a*a) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为等腰锐角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a!=b &amp;&amp; a!=c &amp;&amp; b!=c) &#123;</span><br><span class="line"><span class="keyword">if</span> (a*a+b*b&lt;c*c || a*a+c*c&lt;b*b || b*b+c*c&lt;a*a) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为一般钝角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a*a+b*b&gt;c*c &amp;&amp; a*a+c*c&gt;b*b &amp;&amp; b*b+c*c&gt;a*a) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;为一般锐角三角形\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">area=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;aera=%f\n&quot;</span>,area);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-2"><a href="#反思-2" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>由于老师并未给出示范样例，输入输出样例均为笔者理解所给，代码中三角形类型的合并也是按照笔者所想编写，但思路应该统一，若有具体要求，可自行更改。</p></blockquote><h2 id="实验1-4"><a href="#实验1-4" class="headerlink" title="实验1.4"></a>实验1.4</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>求一元二次方程的根，系数为a、b、c 由键盘输入。</p><h3 id="要求-3"><a href="#要求-3" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>首先需要判断a、b、c是否为零，然后还要判断$b^2-4ac$是否大于、等于和小于零，<br>最后分别输出每个条件下的根。</p></blockquote><h3 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 9 5</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x1=-1.000000</span><br><span class="line">x2=-1.250000</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="type">float</span> b;</span><br><span class="line"><span class="type">float</span> c;</span><br><span class="line"><span class="type">float</span> p;</span><br><span class="line"><span class="type">float</span> m;</span><br><span class="line"><span class="type">float</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f%f%f&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">if</span> (a==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不是二元一次方程\n&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">p=b*b<span class="number">-4</span>*a*c;  <span class="comment">//根判别式</span></span><br><span class="line"><span class="keyword">if</span> (p==<span class="number">0</span>) &#123;    <span class="comment">//相等实根</span></span><br><span class="line">m=-b/<span class="number">2</span>*a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x1=x2=%f\n&quot;</span>,m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p&gt;<span class="number">0</span>) &#123;   <span class="comment">//两不等实根</span></span><br><span class="line">m=(-b+<span class="built_in">pow</span>(p,<span class="number">0.5</span>))/(<span class="number">2</span>*a);</span><br><span class="line">n=(-b-<span class="built_in">pow</span>(p,<span class="number">0.5</span>))/(<span class="number">2</span>*a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;x1=%f\nx2=%f\n&quot;</span>,m,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p&lt;<span class="number">0</span>) &#123;   <span class="comment">//无实根（当然也可以算出复根）</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无实根\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-3"><a href="#反思-3" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>注意判断语句是<code>==</code>，定义类型为浮点型</p></blockquote><h2 id="实验2-1"><a href="#实验2-1" class="headerlink" title="实验2.1"></a>实验2.1</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     编写程序分别使用<code>while</code>、<code>do-while</code>和<code>for</code>循环格式求$m+(m+1)+(m+2)+…+n$的值.</p><h3 id="要求-4"><a href="#要求-4" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>$m$和$n$为正整数由键盘输入。</p></blockquote><h3 id="输入输出样例-4"><a href="#输入输出样例-4" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">20</span><br></pre></td></tr></table></figure><h4 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sum=165</span><br></pre></td></tr></table></figure><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//while</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(m&lt;=n)&#123;  <span class="comment">//先判断，再执行</span></span><br><span class="line">        sum+=m;</span><br><span class="line">        m++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//do   while</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">do</span> &#123;        <span class="comment">//先执行再判断</span></span><br><span class="line">        sum+=m;</span><br><span class="line">        m++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(m&lt;=n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//for  </span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">for</span> (;m&lt;=n;m++) &#123;   <span class="comment">//常用</span></span><br><span class="line">        sum+=m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum=%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-4"><a href="#反思-4" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>题目容易，主要学习三种循环的基本使用</p></blockquote><h2 id="实验2-2"><a href="#实验2-2" class="headerlink" title="实验2.2"></a>实验2.2</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       编写程序在全院m名学生中举行慈善募捐，当总数达到$n$万元时就结束，统计此时捐款的人数以及平均每人捐款的数目，其中$m$和$n$为正整数由键盘输入。</p><h3 id="要求-5"><a href="#要求-5" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-5"><a href="#输入输出样例-5" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">10 1000</span><br><span class="line">该同学捐款=57</span><br><span class="line">该同学捐款=99</span><br><span class="line">该同学捐款=199</span><br><span class="line">该同学捐款=299</span><br><span class="line">该同学捐款=566</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">num=5</span><br><span class="line">avg=244.000000</span><br></pre></td></tr></table></figure><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> m;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">float</span> toa;</span><br><span class="line">    <span class="type">float</span> amn;</span><br><span class="line">    <span class="type">float</span> avg;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n); </span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=m;i++)&#123;   <span class="comment">//1.按人数循环，可能循环结束，钱未捐够，仍然退出</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;该同学捐款=&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;amn);</span><br><span class="line">        toa+=amn;</span><br><span class="line">        <span class="keyword">if</span> (toa&gt;=n)&#123;  <span class="comment">//所捐的钱已够，退出循环</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    avg=toa/i;  </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;num=%d\navg=%f\n&quot;</span>,i,avg);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-5"><a href="#反思-5" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.循环退出满足其中一个条件即可：1.捐钱人数达标；2.捐的钱数达标</p><p>2.如果担心第18行结果有问题，可以加上<code>1.0*</code>,实测应该没问题</p></blockquote><h2 id="实验2-3"><a href="#实验2-3" class="headerlink" title="实验2.3"></a>实验2.3</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      编写程序要求输出1000～2000之间的同时不能被3和7整除，但能被2整除的数。</p><h3 id="要求-6"><a href="#要求-6" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-6"><a href="#输入输出样例-6" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1000 1004 1006 1010 1012 1016 1018 1024 1028 1030 1034 1040 1042 1046 1048 1052 1054 1058 1060 1066 1070 1072 1076 1082 1084 1088 1090 1094 1096 1100 1102 1108 1112 1114 1118 1124 1126 1130 1132 1136 1138 1142 1144 1150 1154 1156 1160 1166 1168 1172 1174 1178 1180 1184 1186 1192 1196 1198 1202 1208 1210 1214 1216 1220 1222 1226 1228 1234 1238 1240 1244 1250 1252 1256 1258 1262 1264 1268 1270 1276 1280 1282 1286 1292 1294 1298 1300 1304 1306 1310 1312 1318 1322 1324 1328 1334 1336 1340 1342 1346 1348 1352 1354 1360 1364 1366 1370 1376 1378 1382 1384 1388 1390 1394 1396 1402 1406 1408 1412 1418 1420 1424 1426 1430 1432 1436 1438 1444 1448 1450 1454 1460 1462 1466 1468 1472 1474 1478 1480 1486 1490 1492 1496 1502 1504 1508 1510 1514 1516 1520 1522 1528 1532 1534 1538 1544 1546 1550 1552 1556 1558 1562 1564 1570 1574 1576 1580 1586 1588 1592 1594 1598 1600 1604 1606 1612 1616 1618 1622 1628 1630 1634 1636 1640 1642 1646 1648 1654 1658 1660 1664 1670 1672 1676 1678 1682 1684 1688 1690 1696 1700 1702 1706 1712 1714 1718 1720 1724 1726 1730 1732 1738 1742 1744 1748 1754 1756 1760 1762 1766 1768 1772 1774 1780 1784 1786 1790 1796 1798 1802 1804 1808 1810 1814 1816 1822 1826 1828 1832 1838 1840 1844 1846 1850 1852 1856 1858 1864 1868 1870 1874 1880 1882 1886 1888 1892 1894 1898 1900 1906 1910 1912 1916 1922 1924 1928 1930 1934 1936 1940 1942 1948 1952 1954 1958 1964 1966 1970 1972 1976 1978 1982 1984 1990 1994 1996 2000</span><br></pre></td></tr></table></figure><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1000</span>;i&lt;=<span class="number">2000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">3</span>!=<span class="number">0</span> &amp;&amp; i%<span class="number">7</span>!=<span class="number">0</span> &amp;&amp; i%<span class="number">2</span>==<span class="number">0</span>)&#123;  <span class="comment">//同时满足三个条件 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-6"><a href="#反思-6" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote></blockquote><h2 id="实验2-4"><a href="#实验2-4" class="headerlink" title="实验2.4"></a>实验2.4</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p> 编写程序对1~25之间的数输出以下形式矩阵。</p><p>1   2   3<br>4   5   6   7<br>8   9   10   11   12<br>13   14   15   16   17   18<br>19  20   21   22   23   24   25</p><h3 id="要求-7"><a href="#要求-7" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-7"><a href="#输入输出样例-7" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6 7</span><br><span class="line">8 9 10 11 12</span><br><span class="line">13 14 15 16 17 18</span><br><span class="line">19 20 21 22 23 24 25</span><br></pre></td></tr></table></figure><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> j=<span class="number">4</span>;</span><br><span class="line">    <span class="type">int</span> k=<span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=<span class="number">25</span>;i++)&#123;  <span class="comment">//进行换行</span></span><br><span class="line">        <span class="keyword">if</span> (i==j)&#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n%d &quot;</span>,i);</span><br><span class="line">            j=j+k;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);  <span class="comment">//输出数字</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-7"><a href="#反思-7" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>本题重点是换行。可知当<code>i=3,4,8,13,19</code>时分别换行，可以直接面向已知结果换行，也可以得到相应关系，第一行3个数，第二行4个数···，定义好<code>j,k</code>初始，判断条件，进行换行</p></blockquote><h2 id="实验2-5"><a href="#实验2-5" class="headerlink" title="实验2.5"></a>实验2.5</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​    编写程序用公式$\dfrac{𝜋}{4}≈1−\dfrac{1}{3}+\dfrac{1}{5}−\dfrac{1}{7}+⋯$求π的近似值，直到发现某一项的绝对值小于$10^{-6}$为止(该项不累加)。</p><h3 id="要求-8"><a href="#要求-8" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-8"><a href="#输入输出样例-8" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pi=3.14159065</span><br></pre></td></tr></table></figure><h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n=<span class="number">1</span>;    </span><br><span class="line">    <span class="type">int</span> sign=<span class="number">1</span>;</span><br><span class="line">    <span class="type">double</span> pi;</span><br><span class="line">    <span class="type">double</span> term=<span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fabs</span>(term)&gt;=<span class="number">1e-6</span>)&#123;  <span class="comment">//判断某项绝对值，若小于10的-6次方，停止循环</span></span><br><span class="line">        pi+=term;</span><br><span class="line">        n+=<span class="number">2</span>;</span><br><span class="line">        sign=-sign;  <span class="comment">//符号切换，优于pow函数</span></span><br><span class="line">        term=<span class="number">1.0</span>*sign/n;</span><br><span class="line">    &#125;</span><br><span class="line">    pi=pi*<span class="number">4</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pi=%10.8f\n&quot;</span>,pi);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-8"><a href="#反思-8" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p><code>while</code>循环也可改写为<code>do while </code>循环和<code>for</code>循环，读者可自行尝试</p></blockquote><h2 id="实验2-6"><a href="#实验2-6" class="headerlink" title="实验2.6"></a>实验2.6</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p> 编写程序求$Fibonacci$(斐波那契)数列的前n个项之和以及第$n$个项，其中$n$为正整数由键盘输入。</p><p>这个数列有如下特点: 第1，2两个数为0，1。从第3个数开始，该数是其前面两个数之和。<br>即该数列为0,1,1,2,3,5,8,13,…,用数学方式表示为:<br>$f0=0$<br>$f1=1$<br>$f2=f0+f1$</p><h3 id="要求-9"><a href="#要求-9" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-9"><a href="#输入输出样例-9" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> f;</span><br><span class="line">    <span class="type">int</span> sum;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    f=fn(n);</span><br><span class="line">    sum=fn(n+<span class="number">2</span>)<span class="number">-1</span>;  <span class="comment">//计算和，采用投机取巧方法，利用斐波那契数列性质</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;f=%d\nsum=%d\n&quot;</span>,f,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fn</span><span class="params">(<span class="type">int</span> n)</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> f0=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> f1=<span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> f2;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=n<span class="number">-2</span>; i++) &#123;  <span class="comment">//按照定义计算所需数</span></span><br><span class="line">        f2=f0+f1;</span><br><span class="line">        f0=f1;</span><br><span class="line">        f1=f2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> f2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-9"><a href="#反思-9" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.代码中定义普通函数可直观表出计算过程，且在求和时也可调用</p><p>2.体中<code>f0</code>是第一个元素，所以可知<code>fn</code>是第<code>n+1</code>个元素</p></blockquote><h2 id="实验3-1"><a href="#实验3-1" class="headerlink" title="实验3.1"></a>实验3.1</h2><h3 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     $求S_n=a+aa+aaa+···+aa···a\ (n个a）的值，其中a是一个数字，n表示a的位数。$</p><p><strong>要求</strong></p><blockquote><p><code>a,n</code>由键盘输入，用<code>,</code>间隔。</p><p>同时输出计算过程和最终结果。(详情见样例)</p></blockquote><h3 id="输入输出样例-10"><a href="#输入输出样例-10" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入a和n：2,5</span><br></pre></td></tr></table></figure><h4 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2+22+222+2222+22222=24690</span><br></pre></td></tr></table></figure><h3 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a,n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入a和n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>,&amp;a,&amp;n);</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> u;</span><br><span class="line"><span class="type">int</span> s;</span><br><span class="line">u=a;                              <span class="comment">//新建变量存a的原值，后续相加只变化u，而a不发生改变 </span></span><br><span class="line">s+=u;                             <span class="comment">//输出结果并非一成不变，先执行一次，再循环n-1次</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,u);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>; i&lt;=n; i++) &#123;</span><br><span class="line">u=u*<span class="number">10</span>+a;                     <span class="comment">//类似aa=a*10+a，将这个不断赋给u</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;+%d&quot;</span>,u);</span><br><span class="line">s+=u;                  </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;=%d\n&quot;</span>,s);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-10"><a href="#反思-10" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.注意第十一行<code>u=a</code>的使用，让<code>u</code>代替<code>a</code>发生改变。</p><p>2.当然也可以改变顺序，先循环 n-1次，再编写最后收尾工作，二者异曲同工。</p><p>3.可使用<code>&lt;math.h&gt;</code>头文件里<code>pow</code>函数，实际上不如直接计算简单（不仅指算法）</p></blockquote><hr><h2 id="实验3-2"><a href="#实验3-2" class="headerlink" title="实验3.2"></a>实验3.2</h2><h3 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      输出所有的“水仙花”数，所谓“水仙花数”是指一个三位数，其各位数字立方和等于该数本身。</p><p>​      例如：153是水仙花数，因为$153=1^3+5^3+3^3$</p><h3 id="输入输出样例-11"><a href="#输入输出样例-11" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-11"><a href="#输入-11" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-11"><a href="#输出-11" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">153 370 371 407</span><br></pre></td></tr></table></figure><h3 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">100</span>; i&lt;<span class="number">1000</span>; i++) &#123;             <span class="comment">//水仙花数是三位数，限制在100~999之间</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pow</span>(i/<span class="number">100</span>,<span class="number">3</span>)+<span class="built_in">pow</span>(i/<span class="number">10</span>%<span class="number">10</span>,<span class="number">3</span>)+<span class="built_in">pow</span>(i%<span class="number">10</span>,<span class="number">3</span>)==i) &#123;<span class="comment">// /表示整除，第一个部分为百位数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);    <span class="comment">//第二部分先进行i/10去掉个位数，即百位和十位组成的两位数，再</span></span><br><span class="line">&#125;                       <span class="comment">// 进行%运算，得到十位数字</span></span><br><span class="line">&#125;                           <span class="comment">// 最后直接i%10 得到个位数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-11"><a href="#反思-11" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.头文件<code>&lt;math.h&gt;</code>中<code>pow(a,n)</code>结果为<code>a</code>的<code>n</code>次方</p><p>2.熟悉掌握<code>/</code>和<code>%</code>的用法。此题未涉及，但在编程过程中需注意<code>/</code>在整型和浮点型运算的异同</p></blockquote><h2 id="实验3-3"><a href="#实验3-3" class="headerlink" title="实验3.3"></a>实验3.3</h2><h3 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>编写程序找出1000之内的所有完数。（一个数如果恰好等于它的因子之和，这个数就称为“完数”）<br>例如：<code>6</code>的因子为<code>1</code>,<code>2</code>,<code>3</code>,因此，<code>6</code>是“完数”。</p><h3 id="要求-10"><a href="#要求-10" class="headerlink" title="要求"></a>要求</h3><blockquote><p>按照下面格式输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6,its factors are 1 2 3</span><br></pre></td></tr></table></figure></blockquote><h3 id="输入输出样例-12"><a href="#输入输出样例-12" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-12"><a href="#输入-12" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-12"><a href="#输出-12" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6,its factors are 1 2 3</span><br><span class="line">28,its factors are 1 2 4 7 14</span><br><span class="line">496,its factors are 1 2 4 8 16 31 62 124 248</span><br></pre></td></tr></table></figure><h3 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> <span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">     <span class="type">int</span> m,s;</span><br><span class="line">     <span class="type">int</span> i;</span><br><span class="line">     <span class="keyword">for</span>(m=<span class="number">2</span>;m&lt;<span class="number">1000</span>;m++)&#123;</span><br><span class="line">         s=<span class="number">0</span>;                       <span class="comment">//一次循环结束后，s清零，重新计算因子和</span></span><br><span class="line">         <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;m;i++)&#123;     </span><br><span class="line">             <span class="keyword">if</span>((m%i)==<span class="number">0</span>)           <span class="comment">//m除以i余数为0则i为m的因子</span></span><br><span class="line">                 s+=i;              <span class="comment">//m的因子和</span></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span>(s==m)&#123;                  <span class="comment">//判断是否符合完数条件</span></span><br><span class="line">             <span class="built_in">printf</span>(<span class="string">&quot;%d,its factors are&quot;</span>,m);       <span class="comment">//达到输出格式中输出原数字</span></span><br><span class="line">             <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;m;i++)&#123;</span><br><span class="line">                 <span class="keyword">if</span>(m%i==<span class="number">0</span>)</span><br><span class="line">                     <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);             <span class="comment">//输出其各个因子</span></span><br><span class="line">                 <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;    </span><br><span class="line">     </span><br></pre></td></tr></table></figure><h3 id="反思-12"><a href="#反思-12" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.本题先找到符合条件的完数，再输出其因子，注意循环的嵌套使用</p><p>2.代码中使用较多的比较运算，注意<code>==</code>与<code>=</code>的不同使用</p><p>3.第六行<code>s=0</code>位于循环位置不同，其结果不同，判断并合理安放</p></blockquote><h2 id="实验3-4"><a href="#实验3-4" class="headerlink" title="实验3.4"></a>实验3.4</h2><h3 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     编写打印以下菱形图形的程序代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br><span class="line"> *****</span><br><span class="line">  ***</span><br><span class="line">   *</span><br></pre></td></tr></table></figure><h3 id="要求-11"><a href="#要求-11" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-13"><a href="#输入输出样例-13" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-13"><a href="#输入-13" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入奇数：7</span><br></pre></td></tr></table></figure><h4 id="输出-13"><a href="#输出-13" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br><span class="line"> *****</span><br><span class="line">  ***</span><br><span class="line">   *</span><br></pre></td></tr></table></figure><h3 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入奇数n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> m=(n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i&lt;=m; i++) &#123;           <span class="comment">//先打印上半部分的图形</span></span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;m-i; j++) &#123;      <span class="comment">//“打印”*前的空格，每一行*前数量为（m-i）个</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">2</span>*i<span class="number">-1</span>; j++) &#123;    <span class="comment">//再打印*,1,3,5···等差数列，通项很好表出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">                                     <span class="comment">//再打印下半部分</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=m; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=i; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;m<span class="number">-2</span>*i+<span class="number">1</span>; j++) &#123;  <span class="comment">//注意重新计算个数与i的关系</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-13"><a href="#反思-13" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>本题思路为将要输出图形分为上下两部分，分别输出</p><p>难点在于计算输出个数与<code>i</code>,<code>m</code>之间的关系，有点初入算法的味道，相信大家可以理清它们之间的关系</p></blockquote><h2 id="实验3-5"><a href="#实验3-5" class="headerlink" title="实验3.5"></a>实验3.5</h2><h3 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      编写程序，输入偶数$n$，比如当$n=6$时，然后输出以下数字图形：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     1</span><br><span class="line">   3 3 3</span><br><span class="line"> 5 5 5 5 5</span><br><span class="line">6 6 6 6 6 6</span><br><span class="line">  4 4 4 4</span><br><span class="line">    2 2</span><br></pre></td></tr></table></figure><h3 id="要求-12"><a href="#要求-12" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.输入的整型数字必须为偶数</p><p>2.可以看出先奇再偶，先增再减，每一行的数字等于每一行数字数</p></blockquote><h3 id="输入输出样例-14"><a href="#输入输出样例-14" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-14"><a href="#输入-14" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h4 id="输出-14"><a href="#输出-14" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     1</span><br><span class="line">   3 3 3</span><br><span class="line"> 5 5 5 5 5</span><br><span class="line">6 6 6 6 6 6</span><br><span class="line">  4 4 4 4</span><br><span class="line">    2 2</span><br></pre></td></tr></table></figure><h3 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;                                 </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入偶数n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> m=n/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;m; i++) &#123;                <span class="comment">//输出上半部分</span></span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;m-i; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;<span class="number">2</span>*i+<span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="number">2</span>*i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;m; i++) &#123;                <span class="comment">//输出下半部分</span></span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=<span class="number">2</span>*i; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;n<span class="number">-2</span>*i; j++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,n<span class="number">-2</span>*i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-14"><a href="#反思-14" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>本题和上一题实属一类，仍需注意输出个数与<code>i</code>,<code>j</code>之间关系，在这里就不多赘述</p></blockquote><h2 id="实验4-1"><a href="#实验4-1" class="headerlink" title="实验4.1"></a>实验4.1</h2><h3 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      查找正整数$m$和$n$之内的全部素数。</p><h3 id="要求-13"><a href="#要求-13" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-15"><a href="#输入输出样例-15" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-15"><a href="#输入-15" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入m和n：10 40</span><br></pre></td></tr></table></figure><h4 id="输出-15"><a href="#输出-15" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">素数包括：11 13 17 19 23 29 31 37</span><br></pre></td></tr></table></figure><h3 id="代码-15"><a href="#代码-15" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入m和n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line"><span class="type">int</span> i,j;</span><br><span class="line"><span class="type">int</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;素数包括：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i=m; i&lt;=n; i++) &#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">2</span>; j&lt;=(<span class="type">int</span>)<span class="built_in">sqrt</span>(i); j++) &#123;  <span class="comment">//强制转换类型使其为整型，没有必要全部遍历，取一半即可</span></span><br><span class="line"><span class="keyword">if</span> (i%j==<span class="number">0</span>) &#123; <span class="comment">// 不是素数</span></span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>) &#123; <span class="comment">// 是素数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-15"><a href="#反思-15" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1。本题思路为遍历从m到n中所有整数，判断其是否为素数。</p><p>2.采用双重循环就是为了实现上述目的，第一个循环遍历<code>m</code>和<code>n</code>之间所有数，第二个循环判断输出是素数的整数，其中在判断时不用遍历2到该数，可以到该数的开方数，也可以到该数的一半。</p></blockquote><h2 id="实验4-2"><a href="#实验4-2" class="headerlink" title="实验4.2"></a>实验4.2</h2><h3 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      查找任何一个正整数$n$的全部素因子。</p><h3 id="要求-14"><a href="#要求-14" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.<code>1</code>虽然不是素数，请在结果中也输出它</p><p>2.按照样例输出</p></blockquote><h3 id="输入输出样例-16"><a href="#输入输出样例-16" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-16"><a href="#输入-16" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入n：6</span><br></pre></td></tr></table></figure><h4 id="输出-16"><a href="#输出-16" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6=1*2*3</span><br></pre></td></tr></table></figure><h3 id="代码-16"><a href="#代码-16" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d=1&quot;</span>,n);      <span class="comment">//先输出1，不用在循环中出现</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">2</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (n%i==<span class="number">0</span>) &#123; <span class="comment">// i是素因子 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*%d&quot;</span>,i);</span><br><span class="line">n/=i;         <span class="comment">//如果i是因子，整除后再进行循环</span></span><br><span class="line">i--;       <span class="comment">//关键一步  有些数是某个或某几个质数的几次方，i--，可避免少输出这些因子</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-16"><a href="#反思-16" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.基本思想为找这个数的因子，当多次运行后发现一个合数总能分解成几个素数的乘积，而素数就是一乘以它本身，所以不必执拗于寻找素因子而编写判断素数程序（曾这样干过）</p><p>2.依旧是多次运行发现，例如<code>18</code>，当缺少第12行<code>i--;</code>时，输出结果只输出1个3，理论上应该是2个3，所以用<code>i--</code>就很好的解决了这个问题，体会其妙处。</p></blockquote><h2 id="实验4-3"><a href="#实验4-3" class="headerlink" title="实验4.3"></a>实验4.3</h2><h3 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p> 对一个整数一维数组a进行排序。</p><p>比如：int a[]={4,2,6,7,10 12 1}<br>排序结果为：2 4 6 7 12 10 1 </p><h3 id="要求-15"><a href="#要求-15" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>将数组中元素按中间分为两半，左边从小到大排序，右边从大到小排序，中间值不进行排序。</p></blockquote><h3 id="输入输出样例-17"><a href="#输入输出样例-17" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-17"><a href="#输入-17" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入n：7</span><br><span class="line">请输入数组a的7个元素：4 2 6 7 10 12 1</span><br></pre></td></tr></table></figure><h4 id="输出-17"><a href="#输出-17" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4 6 7 10 12 1</span><br></pre></td></tr></table></figure><h3 id="代码-17"><a href="#代码-17" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数组a的%d个元素：&quot;</span>，n);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n/<span class="number">2</span><span class="number">-1</span>; i++) &#123; <span class="comment">// 对0~n/2个元素进行从小到大的冒泡排序</span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;n/<span class="number">2</span><span class="number">-1</span>-i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="type">int</span> t=a[j];</span><br><span class="line">a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=n/<span class="number">2</span>+<span class="number">1</span>; i&lt;n<span class="number">-1</span>; i++) &#123; <span class="comment">// 对n/2+1~n-1个元素进行从大到小的冒泡排序</span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=n/<span class="number">2</span>+<span class="number">1</span>; j&lt;n/<span class="number">2</span>+<span class="number">1</span>+n<span class="number">-1</span>-i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]&lt;a[j+<span class="number">1</span>]) &#123;</span><br><span class="line"><span class="type">int</span> t=a[j];</span><br><span class="line">a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-17"><a href="#反思-17" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>注意：以上程序仅适用于<code>n</code>为奇数时，当<code>n</code>为偶数时，其结果会出现问题，为了解决次问题，有个简单方法就是判断，加复制粘贴，注意复制粘贴后需重新计算冒泡排序的起始数，现将偶数个冒泡排序代码附在下面</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;(n<span class="number">-1</span>)/<span class="number">2</span><span class="number">-1</span>; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;(n<span class="number">-1</span>)/<span class="number">2</span><span class="number">-1</span>-i; j++) &#123;</span><br><span class="line">             <span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                 m=a[j];</span><br><span class="line">                 a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">                  a[j+<span class="number">1</span>]=m;</span><br><span class="line">             &#125;</span><br><span class="line">      &#125;</span><br><span class="line"> &#125;       </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=n/<span class="number">2</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=n/<span class="number">2</span>;j&lt;n<span class="number">-1</span>;j++)&#123;</span><br><span class="line">       <span class="keyword">if</span>(a[j]&lt;a[j+<span class="number">1</span>])&#123;</span><br><span class="line">            <span class="type">int</span> t=a[j];</span><br><span class="line">             a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">             a[j+<span class="number">1</span>]=t;        </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="实验4-4"><a href="#实验4-4" class="headerlink" title="实验4.4"></a>实验4.4</h2><h3 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>查找两个整数一维数组a和b中最长的公共子序列。</p><p>比如：$$int\ a[\ \  ]={1,2,3,4,5,6,7,8}$$<br>$int\ b[\ \  ]={4,5,6,9}$<br>则结果为：$4\  5\ 6$</p><blockquote><p>需注意公共<strong>子序列</strong>不要求连续，但公共<strong>子串</strong>必须是连续的。</p></blockquote><h4 id="输入-18"><a href="#输入-18" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8</span><br><span class="line">4 5 6 9</span><br></pre></td></tr></table></figure><h4 id="输出-18"><a href="#输出-18" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 5 6</span><br></pre></td></tr></table></figure><h3 id="代码-18"><a href="#代码-18" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>], b[<span class="number">100</span>], c[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> m, n;</span><br><span class="line">    <span class="type">int</span> i, j ，r;</span><br><span class="line">    <span class="type">int</span> p=<span class="number">0</span>,h=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; m; i++)&#123;            <span class="comment">//找出数组a[]中最大的赋给p</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">        p = (p &gt; a[i]) ? p : a[i];         </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; n; j++)&#123;            <span class="comment">//经过此循环p为a[],b[]两个数组中最大的元素</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[j]);</span><br><span class="line">        p = (p &gt; b[j]) ? p : b[j];        </span><br><span class="line">    &#125;</span><br><span class="line">    p++;                                <span class="comment">//p=p+1后两数组均不会含有这个元素</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; m; i++)&#123;           <span class="comment">//遍历两个数组，将相同的元素，将其存入</span></span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; n;j++)&#123;        <span class="comment">//另一个新数组c[]中</span></span><br><span class="line">            <span class="keyword">if</span> (a[i] == b[j])&#123;             </span><br><span class="line">                c[h] = a[i];</span><br><span class="line">                h++;</span><br><span class="line">                b[j] = p;                   <span class="comment">//防止a[]中有重复的元素，b[]中只有一个而</span></span><br><span class="line">            &#125;                               <span class="comment">//导致全部被存入新数组中</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ( r=<span class="number">0</span>; r &lt; h; r++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, c[r]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-18"><a href="#反思-18" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.尝试次数少时可能无法发现某些情况下的bug，经过多次用不同种类输入，输出，产生改代码，但也不能保证是否涵盖所有情况，还需读者进一步探索。</p><p>2.读者可根据注意所写，尝试编写查找公共子串的程序。</p></blockquote><h2 id="实验4-5"><a href="#实验4-5" class="headerlink" title="实验4.5"></a>实验4.5</h2><h3 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      输入正整数$n$，显示$n$行杨辉三角形。</p><h3 id="要求-16"><a href="#要求-16" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.提示：可使用二维数组</p><p>2.按照样例输出</p></blockquote><h3 id="输入输出样例-18"><a href="#输入输出样例-18" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-19"><a href="#输入-19" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="输出-19"><a href="#输出-19" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">1 4 6 4 1</span><br></pre></td></tr></table></figure><h3 id="代码-19"><a href="#代码-19" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> i，j;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">a[i][<span class="number">0</span>]=<span class="number">1</span>;      <span class="comment">//使第一列元素均为1</span></span><br><span class="line">a[i][i]=<span class="number">1</span>;      <span class="comment">//使对角线元素均为1</span></span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">1</span>; j&lt;i; j++) &#123;    <span class="comment">//按照杨辉三角特点进行表示</span></span><br><span class="line">a[i][j]=a[i<span class="number">-1</span>][j<span class="number">-1</span>]+a[i<span class="number">-1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;=i; j++) &#123;      <span class="comment">//输出数组各元素的值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-19"><a href="#反思-19" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.杨辉三角有以下规律<br>(1)各行第一个数都是1<br>(2)各行最后一个数都是1<br>(3)从第三行起，除第一个和最后一个数外，其余数是上一行同列和前一列两个数之和。</p><p>2.数组元素的序号从0开始算的，因此数组中0行0列的元素实际上就是杨辉三角第1行第1列的数据。</p></blockquote><h2 id="实验4-6"><a href="#实验4-6" class="headerlink" title="实验4.6"></a>实验4.6</h2><h3 id="题目描述-20"><a href="#题目描述-20" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      统计一个字符串$s$中字母、数字、汉字和其它字符的数量。</p><h3 id="要求-17"><a href="#要求-17" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-19"><a href="#输入输出样例-19" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-20"><a href="#输入-20" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcDAGHJ1356&amp;(*&amp;(我们</span><br></pre></td></tr></table></figure><h4 id="输出-20"><a href="#输出-20" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字母数量=8、数字数量=4、汉字数量=2和其它字符的数量=5</span><br></pre></td></tr></table></figure><h3 id="代码-20"><a href="#代码-20" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>];</span><br><span class="line">gets(s);</span><br><span class="line"><span class="type">int</span> count[<span class="number">4</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; s[i]!=<span class="string">&#x27;\0&#x27;</span>; i++) &#123;   <span class="comment">//遍历字符串，遇到需要统计的字符类型，相应计数加1</span></span><br><span class="line"><span class="keyword">if</span> (s[i]&gt;=<span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;Z&#x27;</span>) &#123;</span><br><span class="line">count[<span class="number">0</span>]++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i]&gt;=<span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;z&#x27;</span>) &#123;</span><br><span class="line">count[<span class="number">0</span>]++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i]&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i]&lt;=<span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">count[<span class="number">1</span>]++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (s[i]&lt;<span class="number">0</span>) &#123;  <span class="comment">//记录汉字数量</span></span><br><span class="line">count[<span class="number">2</span>]++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">count[<span class="number">3</span>]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">count[<span class="number">2</span>]/=<span class="number">2</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;字母数量=%d、数字数量=%d、汉字数量=%d和其它字符的数量=%d\n&quot;</span>,</span><br><span class="line">       count[<span class="number">0</span>],count[<span class="number">1</span>],count[<span class="number">2</span>],count[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-20"><a href="#反思-20" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.因题干未要求区分大小写字母，所以将其统一计数，所以第一个<code>else if</code>可通过<code>||</code>合并到<code>if</code>语句中，二者效果相同。</p><p>2.统计汉字个数即字符<code>ASCⅡ</code>小于0，进行计数。</p></blockquote><h2 id="实验4-7"><a href="#实验4-7" class="headerlink" title="实验4.7"></a>实验4.7</h2><h3 id="题目描述-21"><a href="#题目描述-21" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p> 有一个已经排好序的一维数组$a$，要求输入一个数$x$后，按原来顺序的规律将它插入数组中。</p><p>比如：$int\ a[\ \ ]={1,2,3,5,6,7,8}$<br>  $int\ x=4$<br>则结果为：1 2 3 4 5 6 7 8</p><h3 id="要求-18"><a href="#要求-18" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-20"><a href="#输入输出样例-20" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-21"><a href="#输入-21" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">1 2 3 5 6 7 8</span><br><span class="line">4</span><br></pre></td></tr></table></figure><h4 id="输出-21"><a href="#输出-21" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8</span><br></pre></td></tr></table></figure><h3 id="代码-21"><a href="#代码-21" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]&lt;=a[n<span class="number">-1</span>]) &#123;       <span class="comment">//由于题干指出顺序已排好，此为从大到小顺序</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;x)       <span class="comment">//i发生改变，且改变后的i可在后续使用。 这里的i就是找应该插入的位置</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;                <span class="comment">//从大到小的顺序</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;x)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j=n; j&gt;i; j--) &#123;    <span class="comment">//将要插入的位置之后元素整体向后移一位</span></span><br><span class="line">a[j]=a[j<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">a[i]=x;                <span class="comment">//插入该数</span></span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;=n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-21"><a href="#反思-21" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.由于是已经排好序的数组，根据第一个元素与最后一个元素比较可得到排序方式。</p><p>2.所以整体思路为在不同的排序方式下寻找应该插入的数字位置，将位置后元素整体后移，再插入该数。</p><p>3.需要注意数组长度至少为已有元素个数再多一个，否则会造成超界，此外还要注意在后移时<code>i</code>的初值与界限</p></blockquote><h2 id="实验5-1"><a href="#实验5-1" class="headerlink" title="实验5.1"></a>实验5.1</h2><h3 id="题目描述-22"><a href="#题目描述-22" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      有一个一维整数数组（$2n+1$个元素，其中$n$为大于1的正整数），编写程序将小于第$n+1$个元素值的元素移到其左侧，而大于第$n+1$个元素值的元素移到其右侧。</p><h3 id="要求-19"><a href="#要求-19" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>不得直接排序</p></blockquote><h3 id="输入输出样例-21"><a href="#输入输出样例-21" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-22"><a href="#输入-22" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 9 4 5 3 5 7 3 5 0 9</span><br></pre></td></tr></table></figure><h4 id="输出-22"><a href="#输出-22" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 4 3 3 0 5 5 5 9 7 9</span><br></pre></td></tr></table></figure><h3 id="代码-22"><a href="#代码-22" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    <span class="type">int</span> add1=<span class="number">0</span>,add2=<span class="number">0</span>,add3=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>],b[<span class="number">100</span>],c[<span class="number">100</span>],d[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i;i&lt;<span class="number">2</span>*n+<span class="number">1</span>;i++)&#123;   <span class="comment">//输入n，有2n+1个元素</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    m=a[n];    <span class="comment">//m为中间值</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n+<span class="number">1</span>;i++)&#123;   <span class="comment">//找到比中间值小和大的数，将其分别存入到其他数组中</span></span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;m)&#123;</span><br><span class="line">            b[add1]=a[i];</span><br><span class="line">            add1++;&#125;       <span class="comment">//add1从0开始，存入时对应下标</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i]&gt;m)&#123;</span><br><span class="line">            c[add3]=a[i];</span><br><span class="line">            add3++;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        add2++;     <span class="comment">//表示相等的个数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> j;</span><br><span class="line">    <span class="keyword">for</span>( j=<span class="number">0</span>;j&lt;add1;j++)&#123;         <span class="comment">//先输出小于中间数的</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,b[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( j=<span class="number">0</span>;j&lt;add2;j++)&#123;        <span class="comment">//输出相等的</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,m);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( j=<span class="number">0</span>;j&lt;add3;j++)&#123;        <span class="comment">//输出大于中间数的</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,c[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-22"><a href="#反思-22" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.本体本人采取的思路是遍历整个数组，将大于、等于、小于中间数的数分别存放在不同数组中，合并这些数组并输出。</p><p>2.上述做法空间复杂度较大，时间复杂度相对较小，不乏为一种思路，需要注意，上述代码实际并未将分出来的三种数组和并，只是按照应该的顺序输出，为了更加符合题目要求，可以修改输出为向一个新数组复制，也就是将输出的这个值写入新数组，即实现将这个数组元素移动后形成另一个完整数组。</p><p>3.若参考老师提供 的程序，会出现如果数组其他位置元素与中间位置元素相同，最终结果会不符合题目要求。</p></blockquote><h2 id="实验5-2"><a href="#实验5-2" class="headerlink" title="实验5.2"></a>实验5.2</h2><h3 id="题目描述-23"><a href="#题目描述-23" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      编写程序，要求将第一个字符串的偶数下标位置的字符复制到第二个字符串，将第一个字符串的奇数下标位置的字符复制到第三个字符串，并显示。</p><h3 id="要求-20"><a href="#要求-20" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-22"><a href="#输入输出样例-22" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-23"><a href="#输入-23" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入字符串s：abcdefghij</span><br></pre></td></tr></table></figure><h4 id="输出-23"><a href="#输出-23" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">acegi</span><br><span class="line">bdfhj</span><br></pre></td></tr></table></figure><h3 id="代码-23"><a href="#代码-23" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>]; <span class="comment">// 定义字符串</span></span><br><span class="line"><span class="type">char</span> s1[<span class="number">100</span>]; </span><br><span class="line"><span class="type">char</span> s2[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入字符串s：&quot;</span>);</span><br><span class="line">gets(s);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; s[i]!=<span class="string">&#x27;\0&#x27;</span>; i+=<span class="number">2</span>,k++) &#123;  <span class="comment">//偶数下标</span></span><br><span class="line">s1[k]=s[i];</span><br><span class="line">&#125;</span><br><span class="line">s1[k]=<span class="string">&#x27;\0&#x27;</span>;          <span class="comment">//字符串结束标识，不加其实也无妨</span></span><br><span class="line">k=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; s[i]!=<span class="string">&#x27;\0&#x27;</span>; i+=<span class="number">2</span>,k++) &#123;   <span class="comment">//奇数下标</span></span><br><span class="line">s2[k]=s[i];</span><br><span class="line">&#125;</span><br><span class="line">s2[k]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">puts</span>(s1);</span><br><span class="line"><span class="built_in">puts</span>(s2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-23"><a href="#反思-23" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.本题思路为遍历字符串每个元素，将偶数下标元素和奇数下标元素分别写入两个数组中，并输出，整体不难。</p><p>2.无论字符串还是数组，其开始下标为<code>0</code>,也就是偶数，把握住这一点，循环中记得每次<code>i+2</code>即可</p></blockquote><h2 id="实验5-3"><a href="#实验5-3" class="headerlink" title="实验5.3"></a>实验5.3</h2><h3 id="题目描述-24"><a href="#题目描述-24" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      输入一个字符串形式的整数，考察任意连续三位数字构成的整数，编写程序找出这些数字中的最大值并输出。提示：可以考虑使用字符串处理。</p><h3 id="要求-21"><a href="#要求-21" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-23"><a href="#输入输出样例-23" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-24"><a href="#输入-24" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入字符串s：654987321</span><br></pre></td></tr></table></figure><h4 id="输出-24"><a href="#输出-24" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">987</span><br></pre></td></tr></table></figure><h3 id="代码-24"><a href="#代码-24" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>]; <span class="comment">// 定义字符串</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入字符串s：&quot;</span>);</span><br><span class="line">gets(s);</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">m=s[<span class="number">0</span>]-<span class="string">&#x27;0&#x27;</span>;   <span class="comment">//因为输入的字符串元素是整数，减去’0‘转化为它本身这个整数</span></span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; s[i]!=<span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(s[i+<span class="number">1</span>]==<span class="string">&#x27;\0&#x27;</span> || s[i+<span class="number">2</span>]==<span class="string">&#x27;\0&#x27;</span>) &#123;   <span class="comment">//防止超界</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">n=(s[i]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">100</span>+ (s[i+<span class="number">1</span>]-<span class="string">&#x27;0&#x27;</span>)*<span class="number">10</span>+(s[i+<span class="number">2</span>]-<span class="string">&#x27;0&#x27;</span>);  <span class="comment">//将连续的数字字符转化成整数</span></span><br><span class="line"><span class="keyword">if</span>(n&gt;m) &#123;   <span class="comment">//类似打擂台方法，找出最大的连续三位数</span></span><br><span class="line">m=n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,m);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-24"><a href="#反思-24" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.题目关键是把连续三个数字字符转换成整型，操作办法体现在代码中，供读者巩固应用</p><p>2.为了防止超界除了代码中展示的那样，还可直接修改最终限制的条件为<code>s[i+2]!=&#39;0&#39;</code>，其效果一样。</p></blockquote><h2 id="实验5-4"><a href="#实验5-4" class="headerlink" title="实验5.4"></a>实验5.4</h2><h3 id="题目描述-25"><a href="#题目描述-25" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      输入$n$个两位正整数，将每个数前后倒序变成一个新的整数，再编写程序找出这些数字中的最小值并输出。（注意，如果是形式如30之类的数字，则倒序变为3）</p><h3 id="要求-22"><a href="#要求-22" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-24"><a href="#输入输出样例-24" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-25"><a href="#输入-25" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入大于1的正整数n：5</span><br><span class="line">请输入数组a的5个元素：11  23  45  60  76</span><br></pre></td></tr></table></figure><h4 id="输出-25"><a href="#输出-25" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="代码-25"><a href="#代码-25" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>]; <span class="comment">// 定义正整数数组</span></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入大于1的正整数n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n); <span class="comment">// 输入n</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入数组a的%d个元素：&quot;</span>,n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]); <span class="comment">//输入a的n个元素</span></span><br><span class="line">&#125;</span><br><span class="line">m=(a[<span class="number">0</span>]%<span class="number">10</span>)*<span class="number">10</span>+a[<span class="number">0</span>]/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>; i&lt;n; i++) &#123;         <span class="comment">//进行十位与各位互换，并通过“打擂台”比较大小</span></span><br><span class="line">k=(a[i]%<span class="number">10</span>)*<span class="number">10</span>+a[i]/<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(k&lt;m) &#123;</span><br><span class="line">m=k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,m);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-25"><a href="#反思-25" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.题目关键为实现一个二位数十位与个位的互换，可以借助此题回顾<code>/</code>与<code>%</code>含义与用法，简单来说，两位数<code>/10</code>为获得十位数字，<code>%10</code>为获得个位数字，再给某个乘10相加即可得到新的数。</p><p>2.连续两道遇到打擂台的比较方法，简单需掌握。</p></blockquote><h2 id="实验5-5"><a href="#实验5-5" class="headerlink" title="实验5.5"></a>实验5.5</h2><h3 id="题目描述-26"><a href="#题目描述-26" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>编写程序，输入两个字符串$s$和$t$，生成新的字符串并输出：</p><h3 id="要求："><a href="#要求：" class="headerlink" title="要求："></a><strong>要求：</strong></h3><blockquote><p>1.将t中字符从左到右一次插入s的1、2、3等下标位置处,依此类推，但s的头尾插入。</p><p>2.若t中字符已经全部插入，则需重新从t的头部字符开始插入中。</p><p>3.最后输出新字串。</p></blockquote><h3 id="输入输出样例-25"><a href="#输入输出样例-25" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-26"><a href="#输入-26" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ACEGIKM</span><br><span class="line">345</span><br></pre></td></tr></table></figure><h4 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A3C4E5G3I4K5M</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-26"><a href="#代码-26" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span>             <span class="comment">//字符串处理所需库</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">100</span>],t[<span class="number">100</span>];         </span><br><span class="line">    <span class="type">int</span> n1,n2,n,k=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">gets</span>(s);                   <span class="comment">//gets()可直接输入字符串</span></span><br><span class="line">    <span class="built_in">gets</span>(t);</span><br><span class="line">    n1=<span class="built_in">strlen</span>(s);              <span class="comment">//strlen(str)获得字符数组长度</span></span><br><span class="line">    n2=<span class="built_in">strlen</span>(t);</span><br><span class="line">        n=n2/n1;      <span class="comment">//因题干已给定t字符串插入到s字符串中，考虑t应该循坏几次,直接整除即可得</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;     </span><br><span class="line">            <span class="type">char</span> c[<span class="number">100</span>];</span><br><span class="line">            <span class="built_in">strcpy</span>(c,t);          <span class="comment">//把t复制，复制次数为长度之比</span></span><br><span class="line">            <span class="built_in">strcat</span>(t,c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=n1<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;     <span class="comment">//将s字符串扩展到插入后应该的长度，且原始数据对号</span></span><br><span class="line">            s[<span class="number">2</span>*i]=t[i];                 <span class="comment">//入座</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;n1<span class="number">-1</span>; i++) &#123;      <span class="comment">//插入t，注意有一定数目，并非将复制，拼接后的t</span></span><br><span class="line">            s[i+k]=t[i];                 <span class="comment">//全部插入</span></span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; s[i]!=<span class="string">&#x27;\0&#x27;</span>; i++) &#123;       <span class="comment">//输出最终的字符串</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-26"><a href="#反思-26" class="headerlink" title="反思"></a>反思</h3><blockquote><p>1.<code>string.h</code>头文件下<code>strcpy（c,t）</code>是将字符串<code>t</code>中所有元素复制到字符串<code>c</code>中。</p><p>2.此题为第一学期大计基Ⅲ期末考试编程题之一，算法可通用，将python中的语法转化为c语言语法编写代码即可。</p><p>3.诸如<code>for(int i=0; i&lt;n1-1; i++)</code>此类在循环内定义变量实为<code>c++</code>语法，请结合自身所学课程稍作修改。</p><p>4.答案不唯一，笔者水平有限仅提供此参考</p></blockquote><h2 id="实验5-6"><a href="#实验5-6" class="headerlink" title="实验5.6"></a>实验5.6</h2><h3 id="题目描述-27"><a href="#题目描述-27" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      编写程序，完成将国家主要的10个节日名的英文（假定全部是小写）翻译为中文的功能。需要判断输入错误，并显示“没有对应中文名！”。</p><h3 id="要求-23"><a href="#要求-23" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-26"><a href="#输入输出样例-26" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-27"><a href="#输入-27" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入英文节日：The Spring Festival</span><br></pre></td></tr></table></figure><h4 id="输出-26"><a href="#输出-26" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">春节</span><br></pre></td></tr></table></figure><h3 id="代码-27"><a href="#代码-27" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> en[<span class="number">10</span>][<span class="number">20</span>]= &#123;<span class="string">&quot;The Spring Festival&quot;</span>,<span class="string">&quot;The Lantern Festival&quot;</span>,<span class="string">&quot;ChingMing Festival&quot;</span>,<span class="string">&quot;Chinese Youth Day&quot;</span>,<span class="string">&quot;The Dragon Boat Festival&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;The Party&#x27;s Birthday&quot;</span>,<span class="string">&quot;The Army&#x27;s Day&quot;</span>,<span class="string">&quot;Mid-autumn Festival&quot;</span>,<span class="string">&quot;National Day&quot;</span>,<span class="string">&quot;New Year&#x27;s Eve&quot;</span></span><br><span class="line">                 &#125;; <span class="comment">// 定义字符串数组</span></span><br><span class="line"><span class="type">char</span> cn[<span class="number">10</span>][<span class="number">20</span>]= &#123;<span class="string">&quot;春节&quot;</span>,<span class="string">&quot;元宵节&quot;</span>,<span class="string">&quot;清明节&quot;</span>,<span class="string">&quot;中国青年节&quot;</span>,<span class="string">&quot;端午节&quot;</span>,<span class="string">&quot;建党节&quot;</span>,<span class="string">&quot;建军节&quot;</span>,<span class="string">&quot;中秋节&quot;</span>,<span class="string">&quot;国庆节&quot;</span>,<span class="string">&quot;除夕&quot;</span>&#125;; <span class="comment">// 定义字符串数组，与en字符数组内容相对应</span></span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>]; <span class="comment">// 定义字符串</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入英文节日：&quot;</span>);</span><br><span class="line">gets(s);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; en[i]!=<span class="string">&#x27;\0&#x27;</span>; i++) &#123;  <span class="comment">//一行一行比较</span></span><br><span class="line"><span class="keyword">if</span>(stricmp(en[i],s)==<span class="number">0</span>) &#123;  </span><br><span class="line"><span class="built_in">puts</span>(cn[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-27"><a href="#反思-27" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.创建两个对应起来的二维数组，解决字符串过长问题。</p><p>2.在比较时，按“行”比较，每一行代表一个节日。</p><p>3.<code>strcmp</code>用法再回顾：两个字符串相等，返回0，前者大返回正数，后者大，返回负数。</p></blockquote><h2 id="实验6-1"><a href="#实验6-1" class="headerlink" title="实验6.1"></a>实验6.1</h2><h3 id="题目描述-28"><a href="#题目描述-28" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​         写两个函数,分别求两个整数的最大公约数和最小公倍数,用主函数调用这两个函数,并输出结果。两个整数由键盘输入。</p><h3 id="输入输出样例-27"><a href="#输入输出样例-27" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-28"><a href="#输入-28" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15 85</span><br></pre></td></tr></table></figure><h4 id="输出-27"><a href="#输出-27" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">最大公约数:5</span><br><span class="line">最小公倍数：255</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-28"><a href="#代码-28" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> <span class="title function_">maxy</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">minb</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大公约数：%d\n最小公倍数：%d\n&quot;</span>,maxy(x,y),minb(x,y));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">maxy</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span> &#123;    <span class="comment">//最大公约数函数 </span></span><br><span class="line"><span class="type">int</span> m,t;</span><br><span class="line"><span class="keyword">if</span> (x&gt;y) &#123;           <span class="comment">//为下面取余大小打基础 </span></span><br><span class="line">t=y;</span><br><span class="line">y=x;</span><br><span class="line">x=t;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;               <span class="comment">//辗转相除法 </span></span><br><span class="line"><span class="keyword">while</span>(x!=<span class="number">0</span>) &#123;</span><br><span class="line">m=y%x;</span><br><span class="line">y=x;</span><br><span class="line">x=m;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">minb</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;    <span class="comment">//最小公倍数 </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">maxy</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>;   <span class="comment">//最大公约数乘因子 </span></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line">m=maxy(x,y);</span><br><span class="line"><span class="keyword">return</span> (x/m*y); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="反思-28"><a href="#反思-28" class="headerlink" title="反思"></a>反思</h3><blockquote><p>1.最大公约数函数写出后，在寻找最小公倍数函数中也可调用，可省时省力。</p><p>2.可先编写两个要求函数，再编写主函数，可以省略掉3、4行两函数的声明。</p></blockquote><h2 id="实验6-2"><a href="#实验6-2" class="headerlink" title="实验6.2"></a>实验6.2</h2><h3 id="题目描述-29"><a href="#题目描述-29" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      求方程 $ax^2 + bx + c = 0$ 的根,用 3 个函数分别求当: $b^2 − 4ac$ 大于 0、等于 0 和小于 0 时 的根并输出结果。从主函数输入$a,b,c$ 的值。</p><h3 id="要求-24"><a href="#要求-24" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>结果保留两位小数</p></blockquote><h3 id="输入输出样例-28"><a href="#输入输出样例-28" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-29"><a href="#输入-29" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入 a b c:6 8 4</span><br></pre></td></tr></table></figure><h4 id="输出-28"><a href="#输出-28" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">disc&lt;0 的根为:x1=-0.67+0.47i x2=-0.67-0.47i</span><br></pre></td></tr></table></figure><h3 id="代码-29"><a href="#代码-29" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span>                  <span class="comment">//x1 为第一个根，x2 为第二个根</span></span></span><br><span class="line"><span class="type">float</span> x1, x2, disc, p, q;</span><br><span class="line"><span class="type">void</span> <span class="title function_">greater_than_zero</span><span class="params">(<span class="type">float</span> a, <span class="type">float</span> b)</span> &#123;</span><br><span class="line"><span class="type">float</span> m = <span class="built_in">sqrt</span>(disc);</span><br><span class="line">x1 = (-b + <span class="built_in">sqrt</span>(disc)) / (<span class="number">2</span> * a);</span><br><span class="line">x2 = (-b - <span class="built_in">sqrt</span>(disc)) / (<span class="number">2</span> * a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">equal_to_zero</span><span class="params">(<span class="type">float</span> a, <span class="type">float</span> b)</span> &#123;</span><br><span class="line">x1 = x2 = (-b) / (<span class="number">2</span> * a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">smaller_than_zero</span><span class="params">(<span class="type">float</span> a, <span class="type">float</span> b)</span> &#123;</span><br><span class="line">p = -b / (<span class="number">2</span> * a);</span><br><span class="line">q = <span class="built_in">sqrt</span>(-disc) / (<span class="number">2</span> * a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入 a b c:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line">disc = b*b - <span class="number">4</span> * a*c;</span><br><span class="line"><span class="keyword">if</span> (disc &gt; <span class="number">0</span>) &#123;</span><br><span class="line">greater_than_zero(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;disc&gt;0 的根为: x1=%.2f x2=%.2f\n&quot;</span>, x1, x2);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (disc == <span class="number">0</span>) &#123;</span><br><span class="line">equal_to_zero(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;disc==0 的根为:x1=%.2f x2=%.2f\n&quot;</span>, x1, x2);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">smaller_than_zero(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;disc&lt;0 的根为:x1=%.2f+%.2fi x2=%.2f-%.2fi\n&quot;</span>, p, q, p, q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-29"><a href="#反思-29" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>根据 $disc = b ^2 − 4 a c$ 的值来决定如何求根，题目本身编程不难，培养编程习惯，注意细节。（如<code>=</code>与<code>==</code>的使用）</p></blockquote><h2 id="实验6-3"><a href="#实验6-3" class="headerlink" title="实验6.3"></a>实验6.3</h2><h3 id="题目描述-30"><a href="#题目描述-30" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      写一个判素数的函数,在主函数输人一个整数,输出是否为素数的信息。</p><h3 id="要求-25"><a href="#要求-25" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-29"><a href="#输入输出样例-29" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-30"><a href="#输入-30" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2023</span><br></pre></td></tr></table></figure><h4 id="输出-29"><a href="#输出-29" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不是素数</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-30"><a href="#代码-30" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">isprime</span><span class="params">(<span class="type">int</span> n)</span>;</span><br><span class="line">    <span class="type">int</span> n,m=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    m=isprime(n);</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是素数\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;不是素数\n&quot;</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isprime</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,m=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>)    </span><br><span class="line">    m=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;n/<span class="number">2</span>+<span class="number">1</span>;i++)&#123;  <span class="comment">//过不需要判断所有的数据，只需要判断数据的一半即可只需判断该数的一半即可的到答案，也可开方</span></span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            m=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-30"><a href="#反思-30" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.素数是一个大于 1 的自然数，除了 1 和它自身外，不能被其他自然数整除的数叫做素数 </p><p>2.该题可以使用概念直接判断法求解，不过不需要判断所有的数据，只需要判断数据的一 半即可，因为偶数不可能为素数（除了 2）,所以只需判断该数的一半或开方即可的到答案</p></blockquote><h2 id="实验6-4"><a href="#实验6-4" class="headerlink" title="实验6.4"></a>实验6.4</h2><h3 id="题目描述-31"><a href="#题目描述-31" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      写一个函数,使给定的一个 $4*4$ 的二维整型数组转置,即行列互换。</p><h3 id="要求-26"><a href="#要求-26" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-30"><a href="#输入输出样例-30" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-31"><a href="#输入-31" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4</span><br><span class="line">5 6 7 8</span><br><span class="line">9 8 7 6</span><br><span class="line">5 4 3 2</span><br></pre></td></tr></table></figure><h4 id="输出-30"><a href="#输出-30" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 5 9 5</span><br><span class="line">2 6 8 4</span><br><span class="line">3 7 7 3</span><br><span class="line">4 8 6 2</span><br></pre></td></tr></table></figure><h3 id="代码-31"><a href="#代码-31" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">cov</span><span class="params">(<span class="type">int</span> a[][<span class="number">4</span>])</span>;</span><br><span class="line">    <span class="type">int</span> i,j,a[<span class="number">4</span>][<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cov(a);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;<span class="number">4</span>; j++) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">cov</span><span class="params">(<span class="type">int</span> a[][<span class="number">4</span>])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i,j,t;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i+<span class="number">1</span>; j&lt;<span class="number">4</span>; j++) &#123;</span><br><span class="line">            t=a[i][j];               <span class="comment">//转置实现也就是a[i][j]与a[j][i]互换</span></span><br><span class="line">            a[i][j]=a[j][i];         <span class="comment">//这三行就是进行互换</span></span><br><span class="line">            a[j][i]=t;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-31"><a href="#反思-31" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.进行数组的行列互换，其关键在于数组互换的表达式<code> a[i] [j] = a[j] [i]</code></p><p>2.23行<code>j=i+1</code>可避免重复交换，如果<code>j</code>从0开始取值，则一开始交换过的再下次循环又会交换，可能最终会出现原样输出。</p></blockquote><h2 id="实验6-5"><a href="#实验6-5" class="headerlink" title="实验6.5"></a>实验6.5</h2><h3 id="题目描述-32"><a href="#题目描述-32" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     写一个函数,使输人的一个字符串逆序。</p><h3 id="要求-27"><a href="#要求-27" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>在主函数中输入和输出字符串。</p></blockquote><h3 id="输入输出样例-31"><a href="#输入输出样例-31" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-32"><a href="#输入-32" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">university</span><br></pre></td></tr></table></figure><h4 id="输出-31"><a href="#输出-31" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ytisrevinu</span><br></pre></td></tr></table></figure><h3 id="代码-32"><a href="#代码-32" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">void</span> <span class="title function_">rev</span><span class="params">(<span class="type">char</span> a[])</span>;</span><br><span class="line"><span class="type">char</span> a[<span class="number">100</span>];</span><br><span class="line">gets(a);</span><br><span class="line">rev(a);</span><br><span class="line"><span class="built_in">puts</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">rev</span><span class="params">(<span class="type">char</span> a[])</span> &#123;</span><br><span class="line"><span class="type">int</span> n,m,i;</span><br><span class="line"><span class="type">char</span> t;</span><br><span class="line">n=<span class="built_in">strlen</span>(a);</span><br><span class="line">m=n<span class="number">-1</span>;                     <span class="comment">//注意for循环中的变与不变</span></span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;m+<span class="number">1</span>; i++,m--) &#123; <span class="comment">//首尾交换，前加后减，直到碰面</span></span><br><span class="line">t=a[i];</span><br><span class="line">a[i]=a[m];</span><br><span class="line">a[m]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-32"><a href="#反思-32" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.要把一个字符串反序存放，其实就是对字符串做一个逆序操作，操作过程为首尾字符交 换，直到把所有字符全部交换完毕。</p><p>2.当然也可以不引入<code>m</code>，即可以将循环改写为<br><code>for(i=0; i&lt;n; i++,n--) &#123;         t=a[i];         a[i]=a[n-1];         a[n-1]=t;     &#125;</code></p></blockquote><h2 id="实验6-6"><a href="#实验6-6" class="headerlink" title="实验6.6"></a>实验6.6</h2><h3 id="题目描述-33"><a href="#题目描述-33" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​    写一个函数,将两个字符串连接。</p><h3 id="要求-28"><a href="#要求-28" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>不使用内部字符串处理函数</p></blockquote><h3 id="输入输出样例-32"><a href="#输入输出样例-32" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-33"><a href="#输入-33" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">welcome</span><br><span class="line"> to Xi&#x27;an</span><br></pre></td></tr></table></figure><h4 id="输出-32"><a href="#输出-32" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">welcome to Xi&#x27;an</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-33"><a href="#代码-33" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">cat</span><span class="params">(<span class="type">char</span> a[],<span class="type">char</span> b[],<span class="type">char</span> c[])</span>;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">100</span>],b[<span class="number">100</span>],c[<span class="number">100</span>];</span><br><span class="line">    gets(a);</span><br><span class="line">    gets(b);</span><br><span class="line">    cat(a,b,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">cat</span><span class="params">(<span class="type">char</span> a[],<span class="type">char</span> b[], <span class="type">char</span> c[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> n1,n2,i;</span><br><span class="line">    n1=<span class="built_in">strlen</span>(a);       <span class="comment">//获得a,b字符数组长度</span></span><br><span class="line">    n2=<span class="built_in">strlen</span>(b);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n1; i++) &#123;  <span class="comment">//相当于把a复制到c中去</span></span><br><span class="line">        c[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n2; i++) &#123;   <span class="comment">//再在复制好后添加b中的元素，相当于将b连接在a后</span></span><br><span class="line">        c[i+n1]=b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;n1+n2; i++) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c[i]);   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-33"><a href="#反思-33" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.利用一个临时数组，空间要保证能够容纳两个字符串，先把第一个字符串进行拷贝到临时数组，第二个字符串在临时数组的尾部接着连接.</p><p>2.严谨点应该在末尾加上字符串的结束标记<code>\0</code></p></blockquote><h2 id="实验6-7"><a href="#实验6-7" class="headerlink" title="实验6.7"></a>实验6.7</h2><h3 id="题目描述-34"><a href="#题目描述-34" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      写一个函数,将一个字符串中的元音字母复制到另一字符串,然后输出。</p><h3 id="要求-29"><a href="#要求-29" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-33"><a href="#输入输出样例-33" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-34"><a href="#输入-34" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abcdefghigkKGIHBD</span><br></pre></td></tr></table></figure><h4 id="输出-33"><a href="#输出-33" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aeiI</span><br></pre></td></tr></table></figure><h3 id="代码-34"><a href="#代码-34" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">void</span> <span class="title function_">yuan</span><span class="params">(<span class="type">char</span> a[],<span class="type">char</span> b[])</span>;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">100</span>],b[<span class="number">100</span>] ;</span><br><span class="line">    gets(a);</span><br><span class="line">    yuan(a,b);</span><br><span class="line">    <span class="built_in">puts</span>(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">yuan</span><span class="params">(<span class="type">char</span> a[],<span class="type">char</span> b[])</span> &#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i; a[i]!=<span class="string">&#x27;\0&#x27;</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="string">&#x27;a&#x27;</span>||a[i]==<span class="string">&#x27;e&#x27;</span>||a[i]==<span class="string">&#x27;i&#x27;</span>||a[i]==<span class="string">&#x27;o&#x27;</span>||a[i]==<span class="string">&#x27;u&#x27;</span></span><br><span class="line">                ||a[i]==<span class="string">&#x27;A&#x27;</span>||a[i]==<span class="string">&#x27;E&#x27;</span>||a[i]==<span class="string">&#x27;I&#x27;</span>||a[i]==<span class="string">&#x27;O&#x27;</span>||a[i]==<span class="string">&#x27;U&#x27;</span>) &#123;</span><br><span class="line">            b[k]=a[i];</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-34"><a href="#反思-34" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.该题的重点在于元音字母的判断，通过或条件，凡是元音字母都进行“拷贝”</p><p>2.注意判断语句<code>==</code>号使用，和元音字母大小写的不同。</p></blockquote><h2 id="实验6-8"><a href="#实验6-8" class="headerlink" title="实验6.8"></a>实验6.8</h2><h3 id="题目描述-35"><a href="#题目描述-35" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      写一个函数,输人一个 4 位数字，要求输出这 4 个数字字符,但每两个数字间空一个空格。如输人 1990,应输出“1 9 9 0”。</p><h3 id="要求-30"><a href="#要求-30" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>定义字符数组，输入数字字符</p></blockquote><h3 id="输入输出样例-34"><a href="#输入输出样例-34" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-35"><a href="#输入-35" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1990</span><br></pre></td></tr></table></figure><h4 id="输出-34"><a href="#输出-34" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 9 9 0</span><br></pre></td></tr></table></figure><h3 id="代码-35"><a href="#代码-35" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">OutString</span><span class="params">(<span class="type">char</span> str[])</span> &#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(str[i] != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);  <span class="comment">//输出类型为字符，但是这个字符是数字</span></span><br><span class="line"><span class="keyword">if</span>(str[i+<span class="number">1</span>] == <span class="string">&#x27;\0&#x27;</span>) <span class="comment">//清除最后一个空格不输出</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="string">&#x27; &#x27;</span>);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">OutString(str);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-35"><a href="#反思-35" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.对字符串进行遍历输出，每输出一个字符，后面就跟着输出一个空格，关键点在于如果输出 的是最后一个字符，则不能在输出字符，所以要对是否是最后一个字符的输出进行判断。</p><p>2.简单改为<code>printf(&quot;%c &quot;, str[i]);</code>，而不要下面输出空格代码，最终结果看起来是相同的，但其中存在一定差异，请读者理解体会。</p></blockquote><h2 id="实验6-9"><a href="#实验6-9" class="headerlink" title="实验6.9"></a>实验6.9</h2><h3 id="题目描述-36"><a href="#题目描述-36" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​      试定义计算 $x^n$ 的递推函数和递归函数，并使用主函数调用。其中 $x$ 为实数、$n$ 为正整数， 均有键盘输入。</p><h3 id="要求-31"><a href="#要求-31" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-35"><a href="#输入输出样例-35" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-36"><a href="#输入-36" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-35"><a href="#输出-35" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-36"><a href="#代码-36" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递推函数：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">power_iteration</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">double</span> res = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        res *= x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter x: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter n: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf^%d = %.2lf\n&quot;</span>, x, n, power_iteration(x, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//递归函数：</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">power_recursion</span><span class="params">(<span class="type">double</span> x, <span class="type">int</span> n)</span> &#123;   <span class="comment">//重复调用自身，将问题分解为更小的子问题</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">double</span> half = power_recursion(x, n/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> half * half;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">double</span> half = power_recursion(x, (n<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> x * half * half;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">double</span> x;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter x: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter n: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf^%d = %.2lf\n&quot;</span>, x, n, power_recursion(x, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-36"><a href="#反思-36" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><ol><li>递推函数的实现基于迭代，从已知初始值循环计算，逐步推进到最终结果。而递归函数则基于函数自身的调用，将问题分解为更小的子问题；</li><li>递推函数更加直观，处理完一个元素直接就可以计算下一个元素，容易转化为循环结构进行计算。而递归函数一般需要较多递归调用，容易出现栈溢出等问题；</li><li>递推函数的时间复杂度通常是线性级别的，所需的空间常数较小。而递归函数的时间复杂度往往会因为递归的过程和不断调用函数而变得更加复杂，所需的空间常数也可能较大。</li></ol></blockquote><h2 id="实验6-10"><a href="#实验6-10" class="headerlink" title="实验6.10"></a>实验6.10</h2><h3 id="题目描述-37"><a href="#题目描述-37" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​         试定义计算实数数组$a$最大值的递推函数和递归函数，并使用主函数调用。其中$a$的元素个数和各元素之值均有键盘输入。</p><h3 id="要求-32"><a href="#要求-32" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-36"><a href="#输入输出样例-36" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-37"><a href="#输入-37" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-36"><a href="#输出-36" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-37"><a href="#代码-37" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递推函数：                  (算法请看说明，代码应该很好理解)</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_SIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">getMax</span><span class="params">(<span class="type">float</span> a[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="type">float</span> max = a[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &gt; max) &#123;</span><br><span class="line">            max = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> a[MAX_SIZE];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数组元素个数（不超过%d）：&quot;</span>, MAX_SIZE);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入%d个实数：&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大值是：%f&quot;</span>, getMax(a, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//递归函数：</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX_SIZE 100</span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">getMaxRecursive</span><span class="params">(<span class="type">float</span> a[], <span class="type">int</span> n)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a[<span class="number">0</span>];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">float</span> max = getMaxRecursive(a, n<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">if</span> (a[n<span class="number">-1</span>] &gt; max) &#123;</span><br><span class="line">            <span class="keyword">return</span> a[n<span class="number">-1</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> max;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">float</span> a[MAX_SIZE];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数组元素个数（不超过%d）：&quot;</span>, MAX_SIZE);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入%d个实数：&quot;</span>, n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大值是：%f&quot;</span>, getMaxRecursive(a, n));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-37"><a href="#反思-37" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>该程序分别使用递归和迭代两种方法来解决该问题。</p><p>迭代方法，也称为递推方法，利用循环来找出最大值，它的算法如下：</p><ol><li>从数组中的第一个数开始，假设它是最大的。</li><li>从数组的第二个元素开始，逐个遍历整个数组。</li><li>如果当前元素值比已记录的最大值还要大，那么将当前元素值更新为最大值。</li><li>遍历结束后，返回已经确定的最大值。</li></ol><p>递归方法则将问题分解成递归求解。该方法的实现思路如下：</p><ol><li>如果数组中只有一个元素，则返回该元素值。</li><li>否则，递归调用 <code>getMaxRecursive</code> 函数，输入除最后一个元素外的其余元素，求出这些元素中的最大值为 <code>max</code>。</li><li>比较 max 和数组的最后一个元素，返回最大值。</li></ol><p>在这个程序中，首先要求用户输入数组的大小，并使用 for 循环让用户输入整个数组。获取输入后，调用 <code>getMax</code> 或<code>getMaxRecursive</code> 函数进行计算并输出结果。</p></blockquote><h2 id="实验7-1"><a href="#实验7-1" class="headerlink" title="实验7.1"></a>实验7.1</h2><h3 id="题目描述-38"><a href="#题目描述-38" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     输入三个整数，按由小到大顺序输出</p><h3 id="要求-33"><a href="#要求-33" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>用指针方法处理</p></blockquote><h3 id="输入输出样例-37"><a href="#输入输出样例-37" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-38"><a href="#输入-38" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 9 1</span><br></pre></td></tr></table></figure><h4 id="输出-37"><a href="#输出-37" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 5 9</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-38"><a href="#代码-38" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">min</span><span class="params">(<span class="type">int</span> *p1,<span class="type">int</span> *p2)</span> &#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="keyword">if</span>(*p1&gt;*p2) &#123;        <span class="comment">//两个整数从小到大排列函数，雨之前不同用*p1，*p2代替了m，n</span></span><br><span class="line">        t=*p2;           <span class="comment">//其他基本一致</span></span><br><span class="line">        *p2=*p1;</span><br><span class="line">        *p1=t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> a,b,c;</span><br><span class="line">    <span class="type">int</span> *p1,*p2,*p3;  </span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">    p1=&amp;a;           <span class="comment">//获取每个变量的地址</span></span><br><span class="line">    p2=&amp;b;</span><br><span class="line">    p3=&amp;c;</span><br><span class="line">    min(p1,p2);     <span class="comment">//因数字较少，两两比较交换可得所需结果        </span></span><br><span class="line">    min(p1,p3);</span><br><span class="line">    min(p2,p3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,*p1,*p2,*p3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-38"><a href="#反思-38" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>第16-17行获取每个变量地址<code>p=&amp;a</code>而不是<code>*p</code>二者含义不同，也可直接在定义中取地址，如<code>int *p=&amp;a</code>也是正确的，当然，还需要读者准确理解掌握。</p></blockquote><h2 id="实验7-2"><a href="#实验7-2" class="headerlink" title="实验7.2"></a>实验7.2</h2><h3 id="题目描述-39"><a href="#题目描述-39" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     输入三个字符串，按由小到大的顺序输出</p><h3 id="要求-34"><a href="#要求-34" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>用指针方法处理</p></blockquote><h3 id="输入输出样例-38"><a href="#输入输出样例-38" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-39"><a href="#输入-39" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xian</span><br><span class="line">jiaotong</span><br><span class="line">university</span><br></pre></td></tr></table></figure><h4 id="输出-38"><a href="#输出-38" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jiaotong</span><br><span class="line">university</span><br><span class="line">xian</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-39"><a href="#代码-39" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>              <span class="comment">//整体思路与上一题相似，但字符串处理不同于整数，调用字符串</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span>             <span class="comment">//处理函数，比较并实现交换</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">min</span><span class="params">(<span class="type">char</span> *p1,<span class="type">char</span> *p2)</span> &#123;</span><br><span class="line">    <span class="type">int</span> t;</span><br><span class="line">    <span class="type">char</span> str4[<span class="number">100</span>];</span><br><span class="line">    t=<span class="built_in">strcmp</span>(p1,p2);            <span class="comment">//strcmp用法回顾见反思</span></span><br><span class="line">    <span class="keyword">if</span>(t&gt;<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(str4,p1);        <span class="comment">//不能直接交换，用str4做桥梁，符合条件的交换</span></span><br><span class="line">        <span class="built_in">strcpy</span>(p1,p2);</span><br><span class="line">        <span class="built_in">strcpy</span>(p2,str4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">char</span> str1[<span class="number">100</span>],str2[<span class="number">100</span>],str3[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *p1,*p2,*p3;</span><br><span class="line">    gets(str1);</span><br><span class="line">    gets(str2);</span><br><span class="line">    gets(str3);</span><br><span class="line">    p1=str1;</span><br><span class="line">    p2=str2;</span><br><span class="line">    p3=str3;</span><br><span class="line">    min(p1,p2);           <span class="comment">//此处完全类似上题</span></span><br><span class="line">    min(p1,p3);</span><br><span class="line">    min(p2,p3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str1);</span><br><span class="line">    <span class="built_in">puts</span>(str2);</span><br><span class="line">    <span class="built_in">puts</span>(str3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-39"><a href="#反思-39" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>字符串的比较可以使用 <code>strcmp（str1,str2）</code>函数，返回值大于0 表示<code>str1</code>大于<code>str2</code>，返回值小于 0 表示小于，返回值等于 0 表示相同。</p></blockquote><h2 id="实验7-3"><a href="#实验7-3" class="headerlink" title="实验7.3"></a>实验7.3</h2><h3 id="题目描述-40"><a href="#题目描述-40" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>输入10个整数,将其中最小的数与第一个数对换, 把最大的数与最后一个数对换。</p><h3 id="要求-35"><a href="#要求-35" class="headerlink" title="要求"></a>要求</h3><blockquote><p>1.输人10个数<br>2.进行处理<br>3.输出10个数<br>4.使用指针</p></blockquote><h3 id="输入输出样例-39"><a href="#输入输出样例-39" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-40"><a href="#输入-40" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please enter ten nums:4 6 3 8 9 2 1 5 8 4</span><br></pre></td></tr></table></figure><h4 id="输出-39"><a href="#输出-39" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 6 3 8 4 2 4 5 8 9</span><br></pre></td></tr></table></figure><h3 id="代码-40"><a href="#代码-40" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="type">int</span> *arry, <span class="type">int</span> len)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arry[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(<span class="type">int</span> *arry, <span class="type">int</span> len)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arry[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">handle</span><span class="params">(<span class="type">int</span> *arry, <span class="type">int</span> len)</span> &#123;</span><br><span class="line"><span class="type">int</span> max_num = arry[<span class="number">0</span>], min_num = arry[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> *p_max = <span class="literal">NULL</span>, *p_min = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (min_num &gt; arry[i]) &#123;     <span class="comment">//逐个比对后找出最小值</span></span><br><span class="line">min_num = arry[i];</span><br><span class="line">p_min = &amp;arry[i];     <span class="comment">//逐个比对后找到最小值的空间地址</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (max_num &lt; arry[i]) &#123;   <span class="comment">//逐个比对后找出最大值</span></span><br><span class="line">max_num = arry[i];</span><br><span class="line">p_max = &amp;arry[i];     <span class="comment">//逐个比对后找到最大值的空间地址</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> tmp;</span><br><span class="line">tmp = *p_min;</span><br><span class="line">*p_min = arry[<span class="number">0</span>];</span><br><span class="line">arry[<span class="number">0</span>] = tmp;       <span class="comment">//最小值与第一个数据交换</span></span><br><span class="line">tmp = *p_max;</span><br><span class="line">*p_max = arry[len - <span class="number">1</span>];</span><br><span class="line">arry[len - <span class="number">1</span>] = tmp;    <span class="comment">//最大值与最后一个数据交换</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> arry[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter ten nums:&quot;</span>);</span><br><span class="line">input(arry, <span class="number">10</span>);</span><br><span class="line">handle(arry, <span class="number">10</span>);</span><br><span class="line">print(arry, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-40"><a href="#反思-40" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.整体思路为在进行数值逐个比较的同时找到最小值的空间地址以及最大值的空间地址，使 用这两个空间中的数据最终与第一和最后数据进行对换即可。</p><p>2.<code>int i</code>定义<code>i</code>为全局变量，用数组第几位输入不及指针指向地址输入运行速度快（程序太小体现不出来），但是会很好的避免出错。用指针输入，地址会发生改变，后续需重新使指针指向第一个元素位置。</p></blockquote><h2 id="实验7-4"><a href="#实验7-4" class="headerlink" title="实验7.4"></a>实验7.4</h2><h3 id="题目描述-41"><a href="#题目描述-41" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​        有 n 个整数,使前面各数顺序向后移 m 个位置,最后 m 个数变成最前面 m 个数,详情见《C程序设计（第5版)》图 8.43。 </p><h3 id="要求-36"><a href="#要求-36" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.写一函数实现以上功能,在主函数中输人 n 个整数和输出调整后的 n 个数。</p><p>2.用指针实现</p></blockquote><h3 id="输入输出样例-40"><a href="#输入输出样例-40" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-41"><a href="#输入-41" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please enter the number of numbers:6</span><br><span class="line">4 9 8 0 1 3</span><br></pre></td></tr></table></figure><h4 id="输出-40"><a href="#输出-40" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 3 4 9 8</span><br></pre></td></tr></table></figure><h3 id="代码-41"><a href="#代码-41" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> i; </span><br><span class="line"><span class="type">void</span> <span class="title function_">move</span><span class="params">(<span class="type">int</span> *arry, <span class="type">int</span> n, <span class="type">int</span> m)</span> &#123;</span><br><span class="line"><span class="type">int</span> end_idx = n - m;<span class="comment">//找到倒数第 m 个数据的位置，也就是要移动到数组首部的数据的起始位置</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line"><span class="type">int</span> *p = arry + end_idx + i;<span class="comment">//从倒数第 m 个数据的位置开始逐渐向后偏移直到数组尾部</span></span><br><span class="line"><span class="type">int</span> tmp = *p;<span class="comment">//获取到这个位置的值，用于数组前边数据向后偏移 1 位之后，向数组第 i 位赋值</span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j = end_idx + i; j &gt; i; j--) &#123;<span class="comment">//从第 i 位开始逐个向后偏移一位</span></span><br><span class="line">*p = *(p - <span class="number">1</span>);</span><br><span class="line">p--;</span><br><span class="line">&#125;</span><br><span class="line">*(arry + i) = tmp;  <span class="comment">//数组的前第 i 个数字逐个替换为后边被覆盖的值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> number[<span class="number">32</span>], n, m, i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter the number of numbers: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);  <span class="comment">//先确定要输入多少个数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter %d numbers: &quot;</span>, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number[i]);<span class="comment">//输入指定个数的数字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number of positions to move: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);  <span class="comment">//确定要向后移动多少个位置</span></span><br><span class="line">move(number, n, m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-41"><a href="#反思-41" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.上述代码思路为找出倒数第 m 个数据，从这里开始保存倒数第 m 位置的数据，因为倒数第 m 位置的数据要放到数组最前方，将 m 之前的数据向后偏移一位，然后将数组第一个位置的 数据替换为保存的 m 位的数据，逐个往后递增即可。正规且有一定难度</p><p>2.下面展示一种偷懒的形式（面对答案编程，输出结果一致，但不改变原有数组顺序）不过还是建议学习上述算法。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span>                <span class="comment">//先输入数字个数</span></span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> *p,<span class="type">int</span> n)</span></span>&#123;         <span class="comment">//再输入这几个数字</span></span><br><span class="line">    <span class="type">int</span> m;                       <span class="comment">//然后输入从第几位开始“移位”</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;m;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*(p+n-m+i));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n-m;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,*(p+i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>],n;</span><br><span class="line">    <span class="type">int</span> *p=&amp;a[<span class="number">0</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">swap</span>(p,n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h2 id="实验7-5"><a href="#实验7-5" class="headerlink" title="实验7.5"></a>实验7.5</h2><h3 id="题目描述-42"><a href="#题目描述-42" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​        有$n$个人围成一圈，顺序排好。从第1个人开始报数(从1到3报数),凡报到3的人退出圈子,问最后留下的是原来第几号的那位。</p><h3 id="要求-37"><a href="#要求-37" class="headerlink" title="要求"></a><strong>要求</strong></h3><p>​        使用指针求解</p><h3 id="输入输出样例-41"><a href="#输入输出样例-41" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-42"><a href="#输入-42" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input how many people: 5</span><br></pre></td></tr></table></figure><h4 id="输出-41"><a href="#输出-41" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Serial number of the remaining person: 4</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-42"><a href="#代码-42" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> people[<span class="number">128</span>], n,i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input how many people: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">people[i] = i + <span class="number">1</span>;              <span class="comment">//对每个人顺序排号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> remain = n;</span><br><span class="line"><span class="type">int</span> num_off = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> *p ;</span><br><span class="line"><span class="keyword">while</span> (remain &gt; <span class="number">1</span>) &#123;</span><br><span class="line">p = people;</span><br><span class="line"><span class="keyword">while</span> (p != people + n) &#123; <span class="comment">// 每次从第一个位置开始，直到最后一个位置,报数是一直递增的</span></span><br><span class="line"><span class="keyword">if</span> ((*p) != <span class="number">0</span>) &#123;<span class="comment">//若这个位置人还在,</span></span><br><span class="line">num_off++;  <span class="comment">//则报数</span></span><br><span class="line"><span class="keyword">if</span> (num_off == <span class="number">3</span>) &#123;<span class="comment">//否则当前的人即将要报的数字是 3</span></span><br><span class="line">*p = <span class="number">0</span>; <span class="comment">//则剔除这个人</span></span><br><span class="line">num_off = <span class="number">0</span>; <span class="comment">//并且重新开始计数，下边会++，所以是从 1 开始报数</span></span><br><span class="line">remain--;<span class="comment">//剩余人数-1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (people[i] != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Serial number of the remaining person:%d\n&quot;</span>, people[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-42"><a href="#反思-42" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.整体思路为从第一个人开始，逐个报数，谁报 3 就退出，并且重置报数，直到最后一个人 后，又重新从第一个人继续报数，直到最终只剩一个人的时候退出即可。</p><p>2.第13行<code>p=people</code>置于此位置是必要的，每一轮（遍历所有人后），指针应该重新指向该数组第一个元素，以便继续执行下面语句，如果肤质提前，第一轮循环后<code>p</code>实际指向<code>p+n</code>，将不再是这几个“人” 的地址。</p></blockquote><h2 id="实验7-6"><a href="#实验7-6" class="headerlink" title="实验7.6"></a>实验7.6</h2><h3 id="题目描述-43"><a href="#题目描述-43" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​    写一函数,求一个字符串的长度。</p><h3 id="要求-38"><a href="#要求-38" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.在 main 函数中输入字符串,并输出其长度</p><p>2.使用指针</p></blockquote><h3 id="输入输出样例-42"><a href="#输入输出样例-42" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-43"><a href="#输入-43" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please enter a string: xi&#x27;anjiaotonguniversity</span><br></pre></td></tr></table></figure><h4 id="输出-42"><a href="#输出-42" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string len:23</span><br></pre></td></tr></table></figure><h3 id="代码-43"><a href="#代码-43" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">mystrlen</span><span class="params">(<span class="type">char</span> *str)</span> &#123;</span><br><span class="line"><span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> *ptr = str;</span><br><span class="line"><span class="keyword">while</span> (*ptr != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">ptr++;</span><br><span class="line">len++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a string: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, buf);       <span class="comment">//输入类型为string时，buf前不加&amp;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;string len:%d\n&quot;</span>, mystrlen(buf));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-43"><a href="#反思-43" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.字符串以``\0 <code>作为结尾，则从第一个字符开始向后移动遇到</code>\0` 认为字符串结束,计数即可</p><p>2.第14行输入使用<code>scanf</code>，无法读入空格，如需读入空格请使用<code>gets</code>函数</p></blockquote><h2 id="实验7-7"><a href="#实验7-7" class="headerlink" title="实验7.7"></a>实验7.7</h2><h3 id="题目描述-44"><a href="#题目描述-44" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       有一字符串,包含 n 个字符。写一函数,将此字符串中从第 m 个字符开始的全部字符复制成为另一个字符串并输出。</p><h3 id="要求-39"><a href="#要求-39" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.不使用<code>strcpy</code>和<code>strncpy</code>函数</p><p>2.使用指针</p></blockquote><h3 id="输入输出样例-43"><a href="#输入输出样例-43" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-44"><a href="#输入-44" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please enter a string: xi&#x27;anjiaotonguniversity</span><br><span class="line">Please enter a location to start copying: 13</span><br></pre></td></tr></table></figure><h4 id="输出-43"><a href="#输出-43" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">university</span><br></pre></td></tr></table></figure><h3 id="代码-44"><a href="#代码-44" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> buf1[<span class="number">1024</span>], buf2[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a string: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, buf1);</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a location to start copying: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">if</span> (m &lt; <span class="number">0</span> || m &gt; <span class="built_in">strlen</span>(buf1)) &#123;   <span class="comment">//检测输入的位置是否合法</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Illegal location entered\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> *ptr1 = buf1 + m;     <span class="comment">// 从第 m 个位置开始复制新数据</span></span><br><span class="line"><span class="type">char</span> *ptr2 = buf2;</span><br><span class="line"><span class="keyword">while</span> (*ptr1 != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line">*ptr2++ = *ptr1++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, buf2);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-44"><a href="#反思-44" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.整体思路为当字符串指针移动到原字符串的第 m 位时，则开始向另一个字符数组中写入剩下 的字符</p><p>2.回顾<code>*p++</code>,<code>*(++p)</code><br><code>*p++</code>等效于<code>*(p++)</code>,先引用<code>p</code>的值，实现<code>*p</code>的运算，然后再使<code>p</code>自增<code>1</code><br><code>*(++P)</code>正好相反，先自增，再取值。<br>初学者<strong>不建议</strong>这样使用，如需使用，务必清楚其含义。</p></blockquote><h2 id="实验7-8"><a href="#实验7-8" class="headerlink" title="实验7.8"></a>实验7.8</h2><h3 id="题目描述-45"><a href="#题目描述-45" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     输入一行文字,找出其中大写字母、小写字母、空格、数字以及其他字符各有多少。</p><h3 id="要求-40"><a href="#要求-40" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用指针</p></blockquote><h3 id="输入输出样例-44"><a href="#输入输出样例-44" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-45"><a href="#输入-45" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please enter a string: Xi&#x27;an JiaoTong University</span><br></pre></td></tr></table></figure><h4 id="输出-44"><a href="#输出-44" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">upper:4; lower:18; digit:0; space:2; other:1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-45"><a href="#代码-45" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a string: &quot;</span>);</span><br><span class="line">gets(buf);               </span><br><span class="line"><span class="type">int</span> upper_count = <span class="number">0</span>, lower_count = <span class="number">0</span>, digit_count = <span class="number">0</span>, space_count = <span class="number">0</span>, other_count = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> *ptr = buf;</span><br><span class="line"><span class="keyword">while</span> (*ptr != <span class="string">&#x27;\0&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (*ptr &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; *ptr &lt;= <span class="string">&#x27;Z&#x27;</span>) &#123;       <span class="comment">//大写字母</span></span><br><span class="line">upper_count++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (*ptr &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; *ptr &lt;= <span class="string">&#x27;z&#x27;</span>) &#123; <span class="comment">//小写字母</span></span><br><span class="line">lower_count++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (*ptr &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *ptr &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;<span class="comment">//数字字符</span></span><br><span class="line">digit_count++;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (*ptr== <span class="string">&#x27; &#x27;</span>) &#123;               <span class="comment">//空格字符</span></span><br><span class="line">space_count++;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;                               <span class="comment">//其他字符</span></span><br><span class="line">other_count++;</span><br><span class="line">&#125;</span><br><span class="line">ptr++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;upper:%d; lower:%d; digit:%d; space:%d; other:%d\n&quot;</span>, </span><br><span class="line">       upper_count, lower_count, digit_count, space_count, other_count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-45"><a href="#反思-45" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.字符可以直接进行比较，但是要注意字符串中的数字是字符数字，必须以字符的形式比较，也就是加上单引号</p><p>2.由于要统计空格的数量,必须使用<code>gets()</code>进行输入,而不能使用<code>scanf</code></p></blockquote><h2 id="实验7-9"><a href="#实验7-9" class="headerlink" title="实验7.9"></a>实验7.9</h2><h3 id="题目描述-46"><a href="#题目描述-46" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       写一函数,将一个$3*3$  的整型矩阵转置。</p><h3 id="要求-41"><a href="#要求-41" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用指针</p></blockquote><h3 id="输入输出样例-45"><a href="#输入输出样例-45" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-46"><a href="#输入-46" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">7 8 9</span><br></pre></td></tr></table></figure><h4 id="输出-45"><a href="#输出-45" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">转置后：</span><br><span class="line">1 4 7</span><br><span class="line">2 5 8</span><br><span class="line">3 6 9</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-46"><a href="#代码-46" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">zhuanzhi</span><span class="params">(<span class="type">int</span> *p)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=i;j&lt;<span class="number">3</span>;j++)&#123;                  <span class="comment">//基本思想是将a[i][j]与a[j][i]互换</span></span><br><span class="line">            k=*(p+<span class="number">3</span>*i+j);                  <span class="comment">//只不过这里需要使用指针实现此互换</span></span><br><span class="line">            *(p+<span class="number">3</span>*i+j)=*(p+<span class="number">3</span>*j+i);         <span class="comment">//具体说明见反思</span></span><br><span class="line">            *(p+<span class="number">3</span>*j+i)=k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>],*p,i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a[i][<span class="number">0</span>],&amp;a[i][<span class="number">1</span>],&amp;a[i][<span class="number">2</span>]);</span><br><span class="line">    p=&amp;a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    zhuanzhi(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;转置后:\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>,a[i][<span class="number">0</span>],a[i][<span class="number">1</span>],a[i][<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-46"><a href="#反思-46" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.首先以此题目中二维数组为例回顾多维数组的指针使用方法<br>      (1) <code>a</code>代表二维数组首“元素”的地址，但是现在首“元素”不是一个简单的整型元素，而是由4个整型元素所组成的一维数组，因此在这里<code>a</code>相当于首行的起始地址。我们知道一维数组中<code>a[0]</code>的地址是<code>a</code>或<code>&amp;a[0]</code>,<code>a+1</code>的值就是<code>a[1]</code>的起始地址，那么在二维数组中，``a[0]+1<code>指向第一行第二个元素地址也就是</code>&amp;a[0][1]<code>。&lt;br&gt;注意：</code><em>(a+1)<code>代表的才是</code>&amp;a[1][0]<code>&lt;br&gt;      (2)第一行表示完了，第二行表示应该很好理解，</code>a+1<code>是起始地址，&lt;br&gt;</code></em>(a+1)<code>表示</code>a[1][0]<code>这个元素&lt;br&gt;       (3)结合上述起来，那么</code><em>(</em>(a+1)+1)<code>表示的就是</code>a[1][1]`这个元素。</p><p>2.也可以使用相对位置来定位，本题即采用这种方法<br>如果一个二维数组大小为$n*m$,那么，<code>a[i][j]</code>在数组中相对位置的计算公式为<code>i*m+j</code>;当<code>int *p=&amp;a[0][0]</code>时，<code>&amp;a[i][j]</code>就可用<code>p+i*m+j</code>表示，这就是代码中所呈现的。</p></blockquote><h2 id="实验7-10"><a href="#实验7-10" class="headerlink" title="实验7.10"></a>实验7.10</h2><h3 id="题目描述-47"><a href="#题目描述-47" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     将一个$5*5$的矩阵中最大的元素放在中心,4个角分别放4个最小的元素(顺序为从左到右, 从上到下依次从小到大存放)。</p><h3 id="要求-42"><a href="#要求-42" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>1.写一函数实现并用 main 函数调用。</p><p>2.使用指针</p></blockquote><h3 id="输入输出样例-46"><a href="#输入输出样例-46" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-47"><a href="#输入-47" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 4 5 8 9</span><br><span class="line">0 1 5 6 8</span><br><span class="line">4 0 5 3 1</span><br><span class="line">6 7 8 3 2</span><br><span class="line">1 5 7 3 5</span><br></pre></td></tr></table></figure><h4 id="输出-46"><a href="#输出-46" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 4 5 8 0</span><br><span class="line">5 1 5 6 8</span><br><span class="line">4 5 9 3 1</span><br><span class="line">6 7 8 3 2</span><br><span class="line">1 5 7 3 1</span><br></pre></td></tr></table></figure><h3 id="代码-47"><a href="#代码-47" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bian</span><span class="params">(<span class="type">int</span> *p)</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,temp;</span><br><span class="line">    <span class="type">int</span> *max,*min;</span><br><span class="line">max=p;</span><br><span class="line">min=p;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(*max&lt;*(p+<span class="number">5</span>*i+j))   <span class="comment">//找最大值和最小值的地址，并赋给max，min </span></span><br><span class="line">                max=p+<span class="number">5</span>*i+j;</span><br><span class="line">            <span class="keyword">if</span>(*min&gt;*(p+<span class="number">5</span>*i+j))</span><br><span class="line">                min=p+<span class="number">5</span>*i+j;</span><br><span class="line">        &#125;</span><br><span class="line">    temp=*(p+<span class="number">12</span>);             <span class="comment">//将最大值和中心元素互换 </span></span><br><span class="line">    *(p+<span class="number">12</span>)=*max;</span><br><span class="line">    *max=temp;</span><br><span class="line">   </span><br><span class="line">    temp=*p;                  <span class="comment">//将最小值和左上角元素互换 </span></span><br><span class="line">    *p=*min;</span><br><span class="line">    *min=temp;</span><br><span class="line">    </span><br><span class="line">    min=p+<span class="number">1</span>;                   <span class="comment">//将a[0][1]的地址赋给min，从该位置开始寻找最小的元素（也就是整个矩阵第二小） </span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)           <span class="comment">//找第二最小值的地址赋给min </span></span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>) </span><br><span class="line"><span class="keyword">continue</span>;           <span class="comment">//因为a[0][0]已是最小值，又要遍历其他元素，所以加上此步 </span></span><br><span class="line">            <span class="keyword">if</span>(*min&gt;*(p+<span class="number">5</span>*i+j))</span><br><span class="line">                min=p+<span class="number">5</span>*i+j;</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">temp=*min;                <span class="comment">//将第二小值与右上角元素互换 </span></span><br><span class="line">    *min=*(p+<span class="number">4</span>);</span><br><span class="line">    *(p+<span class="number">4</span>)=temp;</span><br><span class="line">   </span><br><span class="line">    min=p+<span class="number">1</span>;                 </span><br><span class="line">                             <span class="comment">//找第三小值的地址赋给min </span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>)||(i==<span class="number">0</span>&amp;&amp;j==<span class="number">4</span>))     <span class="comment">//理由同上 </span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(*min&gt;*(p+<span class="number">5</span>*i+j))</span><br><span class="line">                min=p+<span class="number">5</span>*i+j;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    temp=*min;                <span class="comment">//将第三小值与左下角元素互换 </span></span><br><span class="line">    *min=*(p+<span class="number">20</span>);</span><br><span class="line">    *(p+<span class="number">20</span>)=temp;</span><br><span class="line">    </span><br><span class="line">min=p+<span class="number">1</span>;</span><br><span class="line">                               <span class="comment">//找第四小值的地址赋给min      </span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i==<span class="number">0</span>&amp;&amp;j==<span class="number">0</span>)||(i==<span class="number">0</span>&amp;&amp;j==<span class="number">4</span>)||(i==<span class="number">4</span>&amp;&amp;j==<span class="number">0</span>)) </span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(*min&gt;*(p+<span class="number">5</span>*i+j))</span><br><span class="line">                min=p+<span class="number">5</span>*i+j;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    temp=*min;                 <span class="comment">//将第四小值与右下角元素互换 </span></span><br><span class="line">    *min=*(p+<span class="number">24</span>);</span><br><span class="line">    *(p+<span class="number">24</span>)=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">5</span>][<span class="number">5</span>],i=<span class="number">0</span>,*p;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>,&amp;a[i][<span class="number">0</span>],&amp;a[i][<span class="number">1</span>],&amp;a[i][<span class="number">2</span>],&amp;a[i][<span class="number">3</span>],&amp;a[i][<span class="number">4</span>]);</span><br><span class="line">    p=&amp;a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    bian(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d %d %d\n&quot;</span>,a[i][<span class="number">0</span>],a[i][<span class="number">1</span>],a[i][<span class="number">2</span>],a[i][<span class="number">3</span>],a[i][<span class="number">4</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-47"><a href="#反思-47" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>关键在于<code>bian</code>函数的编写与理解，在此将其再梳理一下<br>(1)首先找出全部元素中的最大值和最小值，将最大值与中心元素互换，将最小值与左上角元素互换。应该注意中心元素的地址为<code>p+12</code>(该元素是数组中第12个元素——序号从0开始)</p><p>(2)找出全部元素中的此小值。由于最小值已找到并放在<code>a[0][0]</code>中，因此，在这一轮的比较中应不包括<code>a[0][0]</code>,在其余元素中值最小的就是全部元素的次小值。所以在双重<code>for</code>循环中应排除<code>a[0][0]</code>参加比较。因此要求<code>&amp;a[i][j]</code>不等于<code>&amp;a[0][0]</code>，也就是<code>  if(i==0&amp;&amp;j==0)  continue;</code>的来历。  <br>        找下面两个数也是同样的方法和操作</p></blockquote><h2 id="实验7-11"><a href="#实验7-11" class="headerlink" title="实验7.11"></a>实验7.11</h2><h3 id="题目描述-48"><a href="#题目描述-48" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       在主函数中输入 10 个等长的字符串。用另一函数对它们排序。然后在主函数输出这 10 个已排好序的字符串。</p><h3 id="要求-43"><a href="#要求-43" class="headerlink" title="要求"></a><strong>要求</strong></h3><h3 id="输入输出样例-47"><a href="#输入输出样例-47" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-48"><a href="#输入-48" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-47"><a href="#输出-47" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-48"><a href="#代码-48" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">char</span> s[<span class="number">10</span>][<span class="number">32</span>])</span> &#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(s[i], s[j])&gt; <span class="number">0</span>) &#123;  <span class="comment">//需注意strcmp用法</span></span><br><span class="line"><span class="type">char</span> tmp[<span class="number">32</span>];          </span><br><span class="line"><span class="built_in">strcpy</span>(tmp,   s[i]);   <span class="comment">//将s[i]指向的一维数组内容与是s[j]指向的内容互换</span></span><br><span class="line"><span class="built_in">strcpy</span>(s[i],  s[j]);</span><br><span class="line"><span class="built_in">strcpy</span>(s[j],  tmp);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">10</span>][<span class="number">32</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter ten strings:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-48"><a href="#反思-48" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.排序方式与数字比较没什么不同，先遍历比较找出最大的字符串，与第一个字 符串进行交换，然后剩下的进行比较找出最大的字符串与第二个交换···<br>只不过这里的交换不是数字那样直接搭桥交换，而是需要<code>strcpy</code>进行交换</p><p>2.简单回顾<code>strcmp</code>用法：返回值大于 0 表示第一个字符串大于第二个字符串，等于0表示相等。</p></blockquote><h2 id="实验7-12"><a href="#实验7-12" class="headerlink" title="实验7.12"></a>实验7.12</h2><h3 id="题目描述-49"><a href="#题目描述-49" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       用指针数组处理上一题目,字符串不等长。</p><h3 id="要求-44"><a href="#要求-44" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用指针</p></blockquote><h3 id="输入输出样例-48"><a href="#输入输出样例-48" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-49"><a href="#输入-49" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-48"><a href="#输出-48" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-49"><a href="#代码-49" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">char</span> *s[])</span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j;</span><br><span class="line">    <span class="type">char</span> *temp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">9</span>-i;j++)</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(*(s+j),*(s+j+<span class="number">1</span>))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                temp=*(s+j);</span><br><span class="line">                *(s+j)=*(s+j+<span class="number">1</span>);</span><br><span class="line">                *(s+j+<span class="number">1</span>)=temp;</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> *p[<span class="number">10</span>],str[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        p[i]=str[i];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,p[i]);</span><br><span class="line">    sort(p);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,p[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-49"><a href="#反思-49" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.与数字的比较没什么区别，只不过需要采用 <code>strcmp</code> 进行字符串的大小比较，使用指针实现需要在最早接收数据的时候就采用字符串指针数组，这样的好处在于指针的指向可以直接通过赋值进行改变，而指针数组中的字符串的顺序只需要交换不同字符串的地址就可以实现</p><p>2.代码中使用了指针数组，课本中标*号，初学应该不要求掌握</p></blockquote><h2 id="实验8-1"><a href="#实验8-1" class="headerlink" title="实验8.1"></a>实验8.1</h2><h3 id="题目描述-50"><a href="#题目描述-50" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       写一个用矩形法求定积分的通用函数 ,分别求$sin\ x$,$cos\ x$ ,$e^x$在[0,1]的定积分<br>       说明: $sin,cos,exp$ 函数已在系统的数学函数库中，程序开头要用#include&lt;math.h&gt; 。</p><h3 id="要求-45"><a href="#要求-45" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote></blockquote><h3 id="输入输出样例-49"><a href="#输入输出样例-49" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-50"><a href="#输入-50" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-49"><a href="#输出-49" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0.459277</span><br><span class="line">0.841701</span><br><span class="line">1.717423</span><br></pre></td></tr></table></figure><h3 id="代码-50"><a href="#代码-50" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="type">float</span> a[<span class="number">1000</span>];  <span class="comment">//数字越大，精度越高</span></span><br><span class="line">    <span class="type">float</span> *p;</span><br><span class="line">    <span class="type">float</span> s1=<span class="number">0</span>,s2=<span class="number">0</span>,s3=<span class="number">0</span>;</span><br><span class="line">    p=a;</span><br><span class="line">    <span class="keyword">for</span>(;p&lt;a+<span class="number">1000</span>;p++,i++)&#123;</span><br><span class="line">        a[i]=<span class="number">1.</span>*i/<span class="number">1000</span>;  <span class="comment">//将该区间分为2000份，可视为Δx</span></span><br><span class="line">        s1+=<span class="built_in">sin</span>(*p);     <span class="comment">//Δx为定值，先提出去，在输出结果中处理</span></span><br><span class="line">        s2+=<span class="built_in">cos</span>(*p);</span><br><span class="line">        s3+=<span class="built_in">exp</span>(*p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n%f\n%f\n&quot;</span>,s1/<span class="number">1000</span>,s2/<span class="number">1000</span>,s3/<span class="number">1000</span>);  <span class="comment">//除以1000输出近似结果</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-50"><a href="#反思-50" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>将定积分化为多个函数连续的和。基本思想 是将区间[a，b]化成 n 等分，当 n 越大的时候结果越准确。</p><p>图形化成一小块一小块的矩形。 底边长都为<code>(b-a)/n</code>.高为每个等分点的函数值。然后将每个矩形的面积相加即为所求。 因为被分成 n 等分，就可以认为每一等分是一个矩形，那么每一矩形的面积为： 每一个矩 形面积为：<code> Sn=f(x)(b-a)/n</code> ；总面积为：<code>S=S1+S2+···+Sn</code>；</p></blockquote><h2 id="实验8-2"><a href="#实验8-2" class="headerlink" title="实验8.2"></a>实验8.2</h2><h3 id="题目描述-51"><a href="#题目描述-51" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>有一个班 4 个学生,5 门课程。 <br>①求第 1 门课程的平均分; <br>②找出有两门以上课程不及格的学生,输出他们的学号和全部课程成绩及平均成绩; <br>③找出平均成绩在 90 分以上或全部课程成绩在 85 分以上的学生。 <br> </p><h3 id="要求-46"><a href="#要求-46" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用指针</p><p>分别编 3 个函数实现以上 3 个要求。</p></blockquote><h3 id="输入输出样例-50"><a href="#输入输出样例-50" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-51"><a href="#输入-51" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Please enter a 4x5 matrix:</span><br><span class="line">91 93 95 97 99</span><br><span class="line">92 95 92 91 88</span><br><span class="line">59 69 82 77 90</span><br><span class="line">93 78 88 66 90</span><br></pre></td></tr></table></figure><h4 id="输出-50"><a href="#输出-50" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Average of course 1:83.750000</span><br><span class="line">Information on students who fail in more than two courses:</span><br><span class="line">Excellent students: 1</span><br><span class="line">Excellent students: 2</span><br></pre></td></tr></table></figure><h3 id="代码-51"><a href="#代码-51" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">avg</span><span class="params">(<span class="type">int</span> arry[][<span class="number">5</span>], <span class="type">int</span> n)</span> &#123;   <span class="comment">//求第 1 门课程的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">sum += arry[i][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Average of course 1:%f\n&quot;</span>, (sum / n));</span><br><span class="line"><span class="keyword">return</span> (sum / n);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">fail</span><span class="params">(<span class="type">int</span> arry[][<span class="number">5</span>], <span class="type">int</span> n)</span> &#123;    <span class="comment">// 找出有两门以上课程不及格的学生,输出他们的学号和全部课程成绩及平均成绩</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Information on students who fail in more than two courses: \n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;     </span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, fail_count = <span class="number">0</span>;  <span class="comment">//注意变量定义的位置</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arry[i][j] &lt; <span class="number">60</span>) &#123;   <span class="comment">//计数不及格课程数目</span></span><br><span class="line">fail_count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (fail_count &lt;= <span class="number">2</span>) &#123;  <span class="comment">//不符合条件，继续循环，符合条件，则跳出循环，输出信息</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;seq:%d &quot;</span>, i + <span class="number">1</span>);  <span class="comment">//数组下标与实际学生编号转化</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;score: &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">sum += arry[i][j];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, arry[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;avg:%d &quot;</span>, sum / <span class="number">5</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">excellent</span><span class="params">(<span class="type">int</span> arry[][<span class="number">5</span>], <span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">sum += arry[i][j];   <span class="comment">//计算总分用于计算平均分</span></span><br><span class="line"><span class="keyword">if</span> (arry[i][j] &gt; <span class="number">85</span>) &#123;</span><br><span class="line">count++;    <span class="comment">//若每门课都大于 85 则 count 总会与 j 同步++</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((sum / <span class="number">5</span>) &gt; <span class="number">90</span> || count == j) &#123;  <span class="comment">//找到只需要满足一个条件的学生，若该学生两个条件均满足，输出时也只输出一遍。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Excellent students: %d\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">int</span> arry[<span class="number">4</span>][<span class="number">5</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a 4x5 matrix:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;arry[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">avg(arry, <span class="number">4</span>);</span><br><span class="line">fail(arry, <span class="number">4</span>);</span><br><span class="line">excellent(arry, <span class="number">4</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-51"><a href="#反思-51" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><ol><li>4 个学生，5 门课程就是一个 4x5 的二维数组， </li><li>求第一门课的平均分，就是将第 0 列数据相加除以学生人数 遍历每个学生的成绩，</li><li>判断不及格次数，若大于 2 则输出信息即可 </li><li>统计每个学生总成绩，以及对每门课程成绩进行判断即可</li><li>注意如第15行变量定义的位置，和第三个条件函数算法编写时注意考虑同时满足情况 </li></ol></blockquote><h2 id="实验8-3"><a href="#实验8-3" class="headerlink" title="实验8.3"></a>实验8.3</h2><h3 id="题目描述-52"><a href="#题目描述-52" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​     输入一个字符串,内有数字和非数字字符,例如：A123x456  17960? ,302tab5876，将其中连续的数字作为一个整数,依次存放到一数组 a 中。</p><p>例如,123 放 在 a[0], 456 放在 a[1]···统计共有多少个整数,并输出这些数。</p><h3 id="要求-47"><a href="#要求-47" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用指针</p></blockquote><h3 id="输入输出样例-51"><a href="#输入输出样例-51" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-52"><a href="#输入-52" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Please enter a string with numbers:</span><br><span class="line">A123x456  17960? ,302tab5876</span><br></pre></td></tr></table></figure><h4 id="输出-51"><a href="#输出-51" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有5个</span><br><span class="line">123 456 17960 302 5876</span><br></pre></td></tr></table></figure><h3 id="代码-52"><a href="#代码-52" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">count_digit</span><span class="params">(<span class="type">char</span> *str)</span> &#123;</span><br><span class="line"><span class="type">int</span> digit[<span class="number">32</span>], count = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> *ptr = str;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> str_len = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">while</span> (i &lt; str_len) &#123;</span><br><span class="line"><span class="keyword">if</span> (*(ptr+i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *(ptr+i) &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line"><span class="type">int</span> len = <span class="number">1</span>;     <span class="comment">//用于统计连续数字的个数</span></span><br><span class="line"><span class="keyword">while</span> (*(ptr + i + len) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *(ptr + i+ len) &lt;= <span class="string">&#x27;9&#x27;</span> &amp;&amp; (i+len) &lt; str_len) &#123;                  <span class="comment">//找出从当前位置连续数字的个数</span></span><br><span class="line">len++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> sum = *(ptr + i + len - <span class="number">1</span>) - <span class="string">&#x27;0&#x27;</span>;  <span class="comment">//先获取个位数的数据</span></span><br><span class="line"><span class="type">int</span> unit = <span class="number">1</span>; <span class="comment">//每一位的单位，从十位开始每次乘以 10 作为单位</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = len - <span class="number">2</span>; j &gt;= <span class="number">0</span>; j--) &#123;  <span class="comment">//从右往左逐个处理</span></span><br><span class="line">unit *= <span class="number">10</span>;</span><br><span class="line">sum += (*(ptr + i + j) - <span class="string">&#x27;0&#x27;</span>) * unit;</span><br><span class="line">&#125;</span><br><span class="line">digit[count++] = sum;</span><br><span class="line">i += len;   <span class="comment">// i 需要加上 len 的长度，越过这个数字，防止一个连续数字中的字符重复处理</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;有%d个\n&quot;</span>,count);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, digit[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="type">char</span> buf[<span class="number">1024</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please enter a string with numbers:\n&quot;</span>);</span><br><span class="line">gets(buf);</span><br><span class="line">count_digit(buf);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-52"><a href="#反思-52" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.遇到数字字符，则开始统计连续数字字符的个数,统计完毕后，如果符合连续几个均为数字，则从右往左每次乘以 10（除了个位数）作为数字的单位，最终相加得到数字；然后越过这个数字，从后边继续查找。</p><p>2.上述代码想要一次性编出会存在一定困难，现提供另一种</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span> <span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="type">char</span> *p;</span><br><span class="line">    <span class="type">int</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>,j,k=<span class="number">0</span>,l,add=<span class="number">0</span>;</span><br><span class="line">    gets(str);</span><br><span class="line">    p=str;</span><br><span class="line">    <span class="keyword">for</span>(;*p!=<span class="string">&#x27;\0&#x27;</span>;p++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(*p&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp; *p&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">while</span>(*(p+i)&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp; *(p+i)&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">               add++;</span><br><span class="line">               i++;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(add&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="type">int</span>    m=<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(i=<span class="number">0</span>,j=add<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--,i++)&#123;</span><br><span class="line">                    m=m+(*(p+i)-<span class="string">&#x27;0&#x27;</span>)*<span class="built_in">pow</span>(<span class="number">10</span>,j);    <span class="comment">//字符数组假设str[i]为数字，则str[i]-&#x27;0&#x27;转化 </span></span><br><span class="line">                    a[k]=m;</span><br><span class="line">                &#125;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            p+=(add<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;有%d个\n&quot;</span>,k); </span><br><span class="line">    <span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;k;l++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[l]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></blockquote><h2 id="实验8-4"><a href="#实验8-4" class="headerlink" title="实验8.4"></a>实验8.4</h2><h3 id="题目描述-53"><a href="#题目描述-53" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       定义一个结构体变量(包括年、月、日)。计算该日在本年中 是第几天,注意闰年问题。</p><h3 id="要求-48"><a href="#要求-48" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>注意闰年问题</p></blockquote><h3 id="输入输出样例-52"><a href="#输入输出样例-52" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-53"><a href="#输入-53" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please give date: 2023 5 11</span><br></pre></td></tr></table></figure><h4 id="输出-52"><a href="#输出-52" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">It&#x27;s day 131 in the year.</span><br></pre></td></tr></table></figure><h3 id="代码-53"><a href="#代码-53" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Date</span> &#123;</span> <span class="comment">//该结构体类型有三个</span></span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Date</span> <span class="title">date</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please give date: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;date.year, &amp;date.month, &amp;date.day);</span><br><span class="line"><span class="type">int</span> Days[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;  <span class="comment">//数组下标0对应元素理论上可以随便取，</span></span><br><span class="line"><span class="type">int</span> i, days = <span class="number">0</span>;            <span class="comment">// 以及月份天数对应 将之后的下标，月份，</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; date.month; i++)</span><br><span class="line">days += Days[i];</span><br><span class="line">days += date.day;</span><br><span class="line"><span class="comment">//如果包含闰年的二月，天数加 1</span></span><br><span class="line"><span class="keyword">if</span>(date.month &gt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (date.year%<span class="number">400</span> == <span class="number">0</span> || (date.year%<span class="number">4</span> == <span class="number">0</span> &amp;&amp; date.year%<span class="number">100</span> != <span class="number">0</span>)) &#123;</span><br><span class="line">++days;                  <span class="comment">//注意闰年判断条件，有两个条件</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;It&#x27;s day %d in the year.\n&quot;</span>, days);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-53"><a href="#反思-53" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.用一个日期数组保存每一月的天数，（注意下标、月份与该月天数的对应）二月的天数记为 28 天，后面根据输入的时间确定是否是闰年的二月，如果是，且所要求的日期为2月后（不含2月）则天数再加 1即可。</p><p>2.<code>struct Date date;</code>结构体变量名的声明根据个人习惯安防，可在结构体类型后成员定义后直接声明。</p><p>3.引用结构体变量中成员的值，采用 <strong>结构体变量名.成员名</strong></p></blockquote><h2 id="实验8-5"><a href="#实验8-5" class="headerlink" title="实验8.5"></a>实验8.5</h2><h3 id="题目描述-54"><a href="#题目描述-54" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       有10个学生,每个学生的数据包括学号、姓名、3门课程的成绩,从键盘输人10个学生数据,要求输出3门课程总平均成绩,以及最高分的学生的数据(包括学号、姓名、3门课程成绩、平均分数)。</p><h3 id="要求-49"><a href="#要求-49" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>使用结构体</p></blockquote><h3 id="输入输出样例-53"><a href="#输入输出样例-53" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-54"><a href="#输入-54" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-53"><a href="#输出-53" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-54"><a href="#代码-54" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NAMLEN 20</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STUCNT 10</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student_t</span> &#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[NAMLEN];</span><br><span class="line"><span class="type">int</span> score[<span class="number">3</span>];</span><br><span class="line">&#125; student;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">student students[STUCNT];  <span class="comment">//10个学生</span></span><br><span class="line"><span class="type">int</span> maxi = <span class="number">0</span>, maxsum = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> aver_0 = <span class="number">0</span>, aver_1 = <span class="number">0</span>, aver_2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; STUCNT; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%d%d%d&quot;</span>, &amp;students[i].num, students[i].name, &amp;students[i].score[<span class="number">0</span>],&amp;students[i].score[<span class="number">1</span>], &amp;students[i].score[<span class="number">2</span>]);</span><br><span class="line"><span class="type">int</span> sum = students[i].score[<span class="number">0</span>] + students[i].score[<span class="number">1</span>] + students[i].score[<span class="number">2</span>];            <span class="comment">//每位学生的总分</span></span><br><span class="line"><span class="keyword">if</span> (sum &gt; maxsum) &#123;</span><br><span class="line">maxsum = sum;</span><br><span class="line">maxi = i;</span><br><span class="line">&#125;</span><br><span class="line">aver_0 += students[i].score[<span class="number">0</span>];  <span class="comment">//三门课分别平均成绩</span></span><br><span class="line">aver_1 += students[i].score[<span class="number">1</span>];</span><br><span class="line">aver_2 += students[i].score[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line">aver_0 /= STUCNT;</span><br><span class="line">aver_1 /= STUCNT;</span><br><span class="line">aver_2 /= STUCNT;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf %lf %lf\n&quot;</span>, aver_0, aver_1, aver_2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %s %d %d %d %lf\n&quot;</span>, students[maxi].num, students[maxi].name,</span><br><span class="line">       students[maxi].score[<span class="number">0</span>], students[maxi].score[<span class="number">1</span>], students[maxi].score[<span class="number">2</span>],</span><br><span class="line">       (students[maxi].score[<span class="number">0</span>] + students[maxi].score[<span class="number">1</span>] + students[maxi].score[<span class="number">2</span>]) / <span class="number">3.0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-54"><a href="#反思-54" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>1.就本题而言，具体算法简单，其目的是练习结构体的使用，包括定义，使用等</p><p>2.程序声明了一个结构体名为<code>student_t</code>的结构类型，有3个成员。在声明类型的同时定义了结构体变量<code>student</code>,这个变量具有<code>struct student_t </code>类型所规定的结构。</p><p>3.除了可以在定义变量时对成员初始化，也可以采取后续输入方法对其初始化，注意<code>&amp;</code>和<code>.</code>的使用</p><p>4.对结构体变量的成员可以像普通变量一样进行各种运算（根据其类型决定可以进行的运算）</p></blockquote><h2 id="实验9-1"><a href="#实验9-1" class="headerlink" title="实验9.1"></a>实验9.1</h2><h3 id="题目描述-55"><a href="#题目描述-55" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       有 $N$个学生,每个学生的数据包括学号、姓名、3 门 课程的成绩，即 $num$、$name$、$score$,从键盘输人$N$ 个学生数据,要求输出全部学生中 3 门课程总平均成绩,以及最高分的学生的数据(包括学号、姓名、3 门课程成绩、平均分数),其中三 门课也为一个小结构体（计算机成绩、英语成绩和数学成绩）即 $computer$、$english$、$math$要求： </p><h3 id="要求-50"><a href="#要求-50" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>（1）在 main 主函数中定义一个学生数组，依次调用<code>input</code> 函数、<code>print</code> 函数、<code>printavg</code> 函数 以及 <code>printmax</code> 函数； </p><p>（2）使用 <code>input</code> 函数输入这些学生数据； </p><p>（3）使用 <code>print</code> 函数输出这些学生数据； </p><p>（4）使用 <code>printavg</code> 函数输出全部学生中 3 门课程总平均成绩； </p><p>（5）使用 <code>printmax</code> 函数输出最高分的学生的数据(包括学号、姓名、3 门课程成绩、平均分数)。</p></blockquote><h3 id="输入输出样例-54"><a href="#输入输出样例-54" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-55"><a href="#输入-55" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-54"><a href="#输出-54" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-55"><a href="#代码-55" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 6</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">CourseScore_t</span> &#123;</span></span><br><span class="line"><span class="type">double</span> computer;</span><br><span class="line"><span class="type">double</span> english;</span><br><span class="line"><span class="type">double</span> math;</span><br><span class="line">&#125; CourseScore;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Student_t</span> &#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">CourseScore score;</span><br><span class="line"><span class="type">double</span> avgscore;</span><br><span class="line">&#125; Student;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(Student * students,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%lf%lf%lf&quot;</span>, &amp;students[i].num, students[i].name,</span><br><span class="line">      &amp;students[i].score.computer, &amp;students[i].score.english, &amp;students[i].score.math);</span><br><span class="line"><span class="type">double</span> sum = students[i].score.computer + students[i].score.english +</span><br><span class="line">             students[i].score.math;</span><br><span class="line">students[i].avgscore = sum/<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(Student * students,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%s,%.2lf,%.2lf,%.2lf,%.2lf\n&quot;</span>, students[i].num, students[i].name,</span><br><span class="line">       students[i].score.computer, students[i].score.english,</span><br><span class="line">       students[i].score.math,students[i].avgscore);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printavg</span><span class="params">(Student * students,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">sum += students[i].avgscore;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">printmax</span><span class="params">(Student * students,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> maxscore=students[k].avgscore;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(students[i].avgscore&gt;maxscore) &#123;</span><br><span class="line">k=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%s,%.2lf,%.2lf,%.2lf,%.2lf\n&quot;</span>, students[k].num, students[k].name,</span><br><span class="line">       students[k].score.computer, students[k].score.english,</span><br><span class="line">       students[k].score.math,students[k].avgscore);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">Student students[N];</span><br><span class="line">input(students,N);</span><br><span class="line">print(students,N);</span><br><span class="line">printavg(students,N);</span><br><span class="line">printmax(students,N);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="反思-55"><a href="#反思-55" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote></blockquote><h2 id="实验9-2"><a href="#实验9-2" class="headerlink" title="实验9.2"></a>实验9.2</h2><h3 id="题目描述-56"><a href="#题目描述-56" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>   首先定义一个表示时、分、秒的结构体类型（Time），再定义一个表示职工考勤信息（工号、姓名、部门、上班时间、下班时间）的结构体类型（EmployeeMarker），其中上班时间、 下班时间均为 Time 类型的成员。 要求： </p><h3 id="要求-51"><a href="#要求-51" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>（1）在 main 主函数中定义一个职工考勤数组，依次调用 input 函数、sort 函数以及 find 函 数； </p><p>（2）使用 input 函数输入这些职工的当天考勤数据； </p><p>（3）使用 print 函数打印职工考勤信息； </p><p>（4）使用 sort 函数对这些职工考勤数据按上班时间升序和下班时间降序进行排序，并使用 print 函数打印排好序的职工考勤信息； </p><p>（5）使用 find 函数找出其中上班时间最早和下班时间最晚的那些职工，并使用 print 函数打 印这些职工考勤信息。</p></blockquote><h3 id="输入输出样例-55"><a href="#输入输出样例-55" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-56"><a href="#输入-56" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-55"><a href="#输出-55" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-56"><a href="#代码-56" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 6</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Time_t</span> &#123;</span></span><br><span class="line"><span class="type">double</span> hour;</span><br><span class="line"><span class="type">double</span> minute;</span><br><span class="line"><span class="type">double</span> second;</span><br><span class="line">&#125; Time;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">EmployeeMarker_t</span> &#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> dept[<span class="number">30</span>];</span><br><span class="line">Time begintime;</span><br><span class="line">Time endtime;</span><br><span class="line">&#125; EmployeeMarker;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">find</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">EmployeeMarker emps[N];</span><br><span class="line">input(emps,N);</span><br><span class="line">sort(emps,N);</span><br><span class="line">find(emps,N);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%s%d%d%d%d%d%d&quot;</span>, &amp;emps[i].num, emps[i].name, emps[i].dept,</span><br><span class="line">      &amp;emps[i].begintime.hour, &amp;emps[i].begintime.minute,</span><br><span class="line">      &amp;emps[i].begintime.second,</span><br><span class="line">      &amp;emps[i].endtime.hour, &amp;emps[i].endtime.minute, &amp;emps[i].endtime.second</span><br><span class="line">     );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%s,%s,%d,%d,%d,%d,%d,%d\n&quot;</span>, emps[i].num, emps[i].name, emps[i].dept,</span><br><span class="line">       emps[i].begintime.hour, emps[i].begintime.minute, emps[i].begintime.second,</span><br><span class="line">       emps[i].endtime.hour, emps[i].endtime.minute, emps[i].endtime.second</span><br><span class="line">      );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n<span class="number">-1</span>-i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(</span><br><span class="line"></span><br><span class="line">    emps[j].begintime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[j].begintime.minute*<span class="number">60</span>+emps[j].begintime.second&gt;</span><br><span class="line"></span><br><span class="line">    emps[j+<span class="number">1</span>].begintime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[j+<span class="number">1</span>].begintime.minute*<span class="number">60</span>+emps[j+<span class="number">1</span>].begintime.second</span><br><span class="line">    &amp;&amp;</span><br><span class="line"></span><br><span class="line">    emps[j].endtime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[j].endtime.minute*<span class="number">60</span>+emps[j].endtime.second&lt;</span><br><span class="line"></span><br><span class="line">    emps[j+<span class="number">1</span>].endtime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[j+<span class="number">1</span>].endtime.minute*<span class="number">60</span>+emps[j+<span class="number">1</span>].endtime.second</span><br><span class="line">) &#123;</span><br><span class="line">EmployeeMarker t;</span><br><span class="line">t=emps[j];</span><br><span class="line">emps[j]=emps[j+<span class="number">1</span>];</span><br><span class="line">emps[j+<span class="number">1</span>]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">print(emps,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">find</span><span class="params">(EmployeeMarker * emps,<span class="type">int</span> n)</span> &#123;</span><br><span class="line"><span class="type">int</span> k=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span></span><br><span class="line">bt=emps[k].begintime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[k].begintime.minute*<span class="number">60</span>+emps[k].begintime.second;</span><br><span class="line"><span class="type">int</span></span><br><span class="line">et=emps[k].endtime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[k].endtime.minute*<span class="number">60</span>+emps[k].endtime.second;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(</span><br><span class="line"></span><br><span class="line">    emps[i].begintime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[i].begintime.minute*<span class="number">60</span>+emps[i].begintime.second&lt;bt</span><br><span class="line">    &amp;&amp; emps[i].endtime.hour*<span class="number">60</span>*<span class="number">60</span>+emps[i].endtime.minute*<span class="number">60</span>+emps[i].endtime.second&gt;et</span><br><span class="line">) &#123;</span><br><span class="line">k=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">EmployeeMarker emps_2[<span class="number">1</span>]= &#123;emps[k]&#125;;</span><br><span class="line">print(emps_2,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-56"><a href="#反思-56" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote></blockquote><h2 id="实验9-3"><a href="#实验9-3" class="headerlink" title="实验9.3"></a>实验9.3</h2><h3 id="题目描述-57"><a href="#题目描述-57" class="headerlink" title="题目描述"></a><strong>题目描述</strong></h3><p>​       有一个文本文件“scores.txt”，文件的每一行存放一位学生的学号、姓名、班级以及计算机、英语和数学三门课的成绩，每行中的各列以空格相隔，请编写程序完成以下功能： </p><h3 id="要求-52"><a href="#要求-52" class="headerlink" title="要求"></a><strong>要求</strong></h3><blockquote><p>（1）打开该文本文件； </p><p>（2）读取该文本文件数据； </p><p>（3）将三门课的均分大于等于 85 的学生信息以及均分写入文件“<code>scores1.txt</code>”之中； </p><p>（4）将三门课的均分小于 85 的学生信息以及均分写入文件“<code>scores2.txt</code>”之中； </p><p>（5）关闭该文本文件。</p></blockquote><h3 id="输入输出样例-56"><a href="#输入输出样例-56" class="headerlink" title="输入输出样例"></a><strong>输入输出样例</strong></h3><h4 id="输入-57"><a href="#输入-57" class="headerlink" title="输入"></a><strong>输入</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="输出-56"><a href="#输出-56" class="headerlink" title="输出"></a><strong>输出</strong></h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="代码-57"><a href="#代码-57" class="headerlink" title="代码"></a><strong>代码</strong></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Student_t</span> &#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="type">char</span> classname[<span class="number">20</span>];</span><br><span class="line"><span class="type">double</span> computer;</span><br><span class="line"><span class="type">double</span> english;</span><br><span class="line"><span class="type">double</span> math;</span><br><span class="line"><span class="type">double</span> avgscore;</span><br><span class="line">&#125; Student;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">Student students[N];</span><br><span class="line">FILE * fp=fopen(<span class="string">&quot;scores.txt&quot;</span>,<span class="string">&quot;rt&quot;</span>);</span><br><span class="line">FILE * fp1=fopen(<span class="string">&quot;scores1.txt&quot;</span>,<span class="string">&quot;wt&quot;</span>);</span><br><span class="line">FILE * fp2=fopen(<span class="string">&quot;scores2.txt&quot;</span>,<span class="string">&quot;wt&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(fp==<span class="literal">NULL</span> || fp1==<span class="literal">NULL</span> || fp2==<span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cannot open infile\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(feof(fp) == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">&quot;%d%s%s%lf%lf%lf&quot;</span>,&amp;students[i].num, students[i].name,</span><br><span class="line">       students[i].classname,</span><br><span class="line">       &amp;students[i].computer, &amp;students[i].english, &amp;students[i].math);</span><br><span class="line"><span class="type">double</span> sum = students[i].computer + students[i].english + students[i].math;</span><br><span class="line">students[i].avgscore = sum/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(students[i].avgscore&gt;=<span class="number">85</span>) &#123;</span><br><span class="line"><span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%d %s %s %.2 lf %.2lf %.2lf %.2lf\n&quot;</span>,students[i].num, students[i].name,</span><br><span class="line">        students[i].classname,</span><br><span class="line">        students[i].computer, students[i].english,</span><br><span class="line">        students[i].math,students[i].avgscore);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">fprintf</span>(fp2,<span class="string">&quot;%d %s %s %.2 lf %.2lf %.2lf %.2lf\n&quot;</span>,students[i].num, students[i].name,</span><br><span class="line">        students[i].classname,</span><br><span class="line">        students[i].computer, students[i].english,</span><br><span class="line">        students[i].math,students[i].avgscore);</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp2);</span><br><span class="line">fclose(fp1);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="反思-57"><a href="#反思-57" class="headerlink" title="反思"></a><strong>反思</strong></h3><blockquote><p>文件处理，学习了解即可</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏秦班第二次上机大作业</title>
      <link href="/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%B8%8A%E6%9C%BA%E5%A4%A7%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%B8%8A%E6%9C%BA%E5%A4%A7%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>完整的学生成绩管理系统</p><p>要求： </p><ol><li>提供基本的菜单选项，能根据不同的选项执行不同操作； </li><li>对学生信息进行录入，修改，删除、查询等操作； </li><li>对学生信息进行统计、排序等操作。</li></ol><h3 id="输入格式与输出示例"><a href="#输入格式与输出示例" class="headerlink" title="输入格式与输出示例"></a>输入格式与输出示例</h3><p>（首先输出菜单选项）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 1 ，则完成学生信 息的录入）<br><u>1</u><br>Id <u>1001</u> （输入和输出之间用一个空格）<br>class <u>11</u><br>name <u>zhang</u><br>score1 <u>99.5</u><br>score2 <u>88.5</u><br>score3 <u>89.5</u><br>continue? （询问用户是否继续输入操作）<br><u>yes</u> （用户选择继续输入）<br>Id <u>1002</u> （输入和输出之间用一个空格）<br>class <u>22</u><br>name <u>li</u><br>score1 <u>77.9</u><br>score2 <u>56.5</u><br>score3 <u>87.5</u><br>continue? （询问用户是否继续输入操作）<br><u>yes</u> （用户选择继续输入）<br>Id <u>1003</u> （输入和输出之间用一个空格）<br>class <u>11</u><br>name <u>wang</u><br>score1 <u>92.5</u><br>score2 <u>99.0</u><br>score3 <u>60.5</u><br>continue? （询问用户是否继续输入操作）<br><u>no</u> （用户不再继续输入后显示主菜单选项，供用户选择其他操作）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 2 ，则完成学生信 息的删除，要求输入待删除学生的学号或者姓名，如果该学生不存在，则输出原有学生的信 息；如果指定删除的学生存在，则删除该学生的信息后，输出其余学生信息；允许用户可以 删除多个学生信息，但至少保留一个学生信息）<br><u>2</u><br><u>1002</u> （或者输入 li ）<br>1001,11,zhang,99.5,88.5,89.5,277.5<br>1003,11,wang,92.5,99.0,60.5,252.0<br>continue? （询问用户是否继续输入操作）<br><u>no</u> （用户不再继续输入后显示主菜单选项，供用户选择其他操作）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 3 ，则完成学生信 息的选择，要求输入待选择学生的学号或班级，如果该学生存在，则输出该学生的信息；若 学生不存在，则提示用户“ there is no eligible student ”，输出主菜单供用户继续选 择；如果有重名的学生或者一个班级有多名同学，则输出全部符合条件的学生信息。）<br><u>3</u><br><u>1001</u><br>1001,11,zhang,99.5,88.5,89.5,277.5<br>continue?<br><u>yes</u><br><u>11</u><br>1001,11,zhang,99.5,88.5,89.5,277.5<br>1003,11,wang,92.5,99.0,60.5,252.0<br>continue? （询问用户是否继续输入操作）<br><u>no</u> （用户不再继续输入后显示主菜单选项，供用户选择其他操作）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 4 ，则完成学生信 息的排序，要求实现班级和学生总成绩的双重排序，即班级按照从小到大，同一班级内部按 照学生总成绩从大到小。注意下面前提是有三条学生信息）<br><u>4</u><br>1001,11,zhang,99.5,88.5,89.5,277.5<br>1003,11,wang,92.5,99.0,60.5,252.0<br>1002,22,li,77.9,56.5,87.5,221.9<br>（排序后输出学生信息，再输出主菜单，允许用户继续选择）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 5 ，则输出当前学生的信息。如果之前排序了就输出排序后的结果，否则原样输出。）<br><u><em>5</em></u><br>1001,11,zhang,99.5,88.5,89.5,277.5<br>1003,11,wang,92.5,99.0,60.5,252.0<br>1002,22,li,77.9,56.5,87.5,221.9<br>（输出主菜单，允许用户继续选择）<br>1.input<br>2.delete<br>3.select<br>4.order<br>5.output<br>6.quit<br>please input your option<br>（提示用户选择操作，根据用户的选择执行不同的功能，如果用户选择 6 ，则退出程序）<br><u>6</u>（退出程序） </p><h3 id="提示-说明"><a href="#提示-说明" class="headerlink" title="提示/说明"></a>提示/说明</h3><p>建议使用字符串指针，熟悉指针操作，但注意使用指针之前，一定要使用 malloc 函数先分配内存。例如，stu[0].id = (char*)malloc(sizeof(char) * 10)，表示给 stu[0]的 id 分配了 10 个 char 单位的内存。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>主要采用函数模块化的思想来分步完成任务。</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">char</span> id[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> clas[<span class="number">20</span>];</span><br><span class="line">    <span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="type">double</span> score1;</span><br><span class="line">    <span class="type">double</span> score2;</span><br><span class="line">    <span class="type">double</span> score3;</span><br><span class="line">    <span class="type">double</span> score;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Student</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125;student;<span class="comment">//</span></span><br><span class="line">student* head, * tail;</span><br><span class="line"><span class="type">int</span> tot;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ins</span><span class="params">(student t)</span></span><br><span class="line">&#123;</span><br><span class="line">    tail = tail-&gt;next = (student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(student));</span><br><span class="line">    (*tail) = t;</span><br><span class="line">    tail-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    tot++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">del</span><span class="params">(student* u)</span></span><br><span class="line">&#123;</span><br><span class="line">    student* v = u-&gt;next;</span><br><span class="line">    u-&gt;next = v-&gt;next;</span><br><span class="line">    <span class="keyword">if</span> (v == tail) tail = u;</span><br><span class="line">    <span class="built_in">free</span>(v);</span><br><span class="line">    tot--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    student t;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Id &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t.id);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;class &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t.clas);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, t.name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;score1 &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t.score1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;score2 &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t.score2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;score3 &quot;</span>); <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t.score3);</span><br><span class="line">    t.score = t.score1 + t.score2 + t.score3;</span><br><span class="line">    ins(t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (student* u = head; u-&gt;next != <span class="literal">NULL</span>; u = u-&gt;next) &#123;</span><br><span class="line">        student* v = u-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s,%s,%s,%.1lf,%.1lf,%.1lf,%.1lf\n&quot;</span>, v-&gt;id, v-&gt;clas, v-&gt;name, </span><br><span class="line">v-&gt;score1, v-&gt;score2, v-&gt;score3, v-&gt;score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">deletl</span> <span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">    <span class="keyword">for</span> (student* u = head; u-&gt;next != <span class="literal">NULL</span>;) &#123;</span><br><span class="line">        student* v = u-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(s, v-&gt;id) == <span class="number">0</span> || <span class="built_in">strcmp</span>(s, v-&gt;name) == <span class="number">0</span>) del(u);</span><br><span class="line">        <span class="keyword">else</span> u = u-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    output();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">select</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> s[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line">    <span class="keyword">for</span> (student* u = head; u-&gt;next != <span class="literal">NULL</span>; u = u-&gt;next) &#123;</span><br><span class="line">        student* v = u-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(s, v-&gt;clas) == <span class="number">0</span> || <span class="built_in">strcmp</span>(s, v-&gt;id) == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s,%s,%s,%.1lf,%.1lf,%.1lf,%.1lf\n&quot;</span>, v-&gt;id, v-&gt;clas, v-&gt;name, </span><br><span class="line">v-&gt;score1, v-&gt;score2, v-&gt;score3, v-&gt;score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(student* st, student* ed)</span></span><br><span class="line">&#123;</span><br><span class="line">    student t;</span><br><span class="line">    <span class="keyword">for</span> (student* i = st; i != ed; i++)</span><br><span class="line">        <span class="keyword">for</span> (student* j = ed - <span class="number">1</span>; j != i; j--) &#123;</span><br><span class="line">            <span class="type">int</span> x = <span class="built_in">strcmp</span>(j-&gt;clas, (j - <span class="number">1</span>)-&gt;clas);</span><br><span class="line">            <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x == <span class="number">0</span> &amp;&amp; j-&gt;score &gt;(j - <span class="number">1</span>)-&gt;score) &#123;</span><br><span class="line">                t = *j;</span><br><span class="line">                *j = *(j - <span class="number">1</span>);</span><br><span class="line">                *(j - <span class="number">1</span>) = t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">order</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    student* students = (student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(student) * tot);</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (head-&gt;next != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        students[n++] = *(head-&gt;next);</span><br><span class="line">        del(head);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(students, students + n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        ins(students[i]);</span><br><span class="line">    <span class="built_in">free</span>(students);</span><br><span class="line">    output();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    tail = head = (student*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(student));</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1.input\n&quot;</span></span><br><span class="line">            <span class="string">&quot;2.delete\n&quot;</span></span><br><span class="line">            <span class="string">&quot;3.select\n&quot;</span></span><br><span class="line">            <span class="string">&quot;4.order\n&quot;</span></span><br><span class="line">            <span class="string">&quot;5.output\n&quot;</span></span><br><span class="line">            <span class="string">&quot;6.quit\n&quot;</span></span><br><span class="line">            <span class="string">&quot;please input your option\n&quot;</span>);</span><br><span class="line">        <span class="type">char</span> op[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, op);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strlen</span>(op) == <span class="number">1</span> &amp;&amp; op[<span class="number">0</span>] &gt;= <span class="string">&#x27;1&#x27;</span> &amp;&amp; op[<span class="number">0</span>] &lt;= <span class="string">&#x27;6&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Wrong input\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;6&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;1&#x27;</span>) input();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;2&#x27;</span>) deletl();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;3&#x27;</span>) select();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;4&#x27;</span>) order();</span><br><span class="line">            <span class="keyword">else</span> output();</span><br><span class="line">            <span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;4&#x27;</span> || op[<span class="number">0</span>] == <span class="string">&#x27;5&#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;continue?\n&quot;</span>);</span><br><span class="line">            <span class="type">char</span> buf[<span class="number">10</span>];</span><br><span class="line">            <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, buf);</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(buf, <span class="string">&quot;yes&quot;</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(buf, <span class="string">&quot;no&quot;</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;Wrong input\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(buf, <span class="string">&quot;no&quot;</span>) == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏秦班函数作业（部分）</title>
      <link href="/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/"/>
      <url>/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E5%87%BD%E6%95%B0%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>本次作业的主题是函数，众所周知函数是c语言中一个十分重要的模块，一则我们可以利用函数将一个庞大的程序模块化，使其变得更加简单易懂；二则我们可以通过函数来实现递归，例如一个非常著名的例子，利用函数递归来计算斐波那契数列；三则我们可以利用函数来完成某些动作，例如本次作业的最后三个题，我们利用函数能够实现一些功能，并且里面有一些回溯的思想，这也是在函数中十分重要的思想。</p><h3 id="第六关：打印月历"><a href="#第六关：打印月历" class="headerlink" title="第六关：打印月历"></a>第六关：打印月历</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：指定一个年份和月份，打印这个月的日历。</p><h4 id="编程要求"><a href="#编程要求" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数Calendar，它有两个参数year和month，分别代表<strong>年份</strong>和<strong>月份</strong>。其中1900 &lt;= year &lt;= 9999，1 &lt;= month &lt;= 12。<br>请在这个函数中补充代码，计算并输出当月的月历，格式要求如下：</p><ul><li><p>要求输出有7列，从左至右分别是从星期一到星期日。</p></li><li><p>同一列的数字对齐右边。</p></li><li><p>每一个位置上的数字占2个字符，不够长的用空格补充。</p></li><li><p>如果第一行的头几个位置上没有数字，则用两个空格代替。</p></li><li><p>最后一行不用补全缺少数字的位置。</p></li><li><p>不同列之间有一个空格，最后一列后面没有空格。</p></li></ul><p>允许自由增加函数，只要Calendar函数的功能正确即可。<br><strong>提示</strong>：1900年1月1日是星期一。<br>输入数据由<strong>评测系统读取</strong>，并传递给Calendar函数。具体见<strong>测试说明</strong>。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>年份与月份</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>该月的月历</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2019 6</span><br></pre></td></tr></table></figure><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">                           1   2</span><br><span class="line">  3   4   5   6   7   8   9</span><br><span class="line">10 11 12 13 14 15 16</span><br><span class="line">17 18 19 20 21 22 23</span><br><span class="line">24 25 26 27 28 29 30</span><br></pre></td></tr></table></figure><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>本题最大的特点就是将函数模块化，通过思考，我们显然可以将解决这个问题给拆分为下面几个子问题：</p><ol><li>判断该年是否是闰年；</li><li>计算1900年1月到这个月之前的天数，并且计算出这个月的第一天是星期几；</li><li>打印月历；</li></ol><p>还需注意的是，打印月历还有一些格式要求例如要将日期进行对齐等。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">run</span><span class="params">(<span class="type">int</span> year)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(year%<span class="number">400</span>==<span class="number">0</span>||year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;<span class="comment">//判断是否是闰年的函数</span></span><br><span class="line"><span class="type">int</span> m[<span class="number">11</span>]=&#123;<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> <span class="title function_">sum</span><span class="params">(<span class="type">int</span> a)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;a;i++)</span><br><span class="line">    &#123;</span><br><span class="line">c+=m[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;<span class="comment">//给前a的月算总日期的函数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Calendar</span><span class="params">(<span class="type">int</span> year,<span class="type">int</span> month)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> day=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(year==<span class="number">1900</span>)</span><br><span class="line">    day=sum(month<span class="number">-1</span>);<span class="comment">//1900年第a月前的天数</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1900</span>;i&lt;year;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(run(i)==<span class="number">0</span>)</span><br><span class="line">        day+=<span class="number">366</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        day+=<span class="number">365</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;<span class="comment">//year年前总的天数</span></span><br><span class="line"><span class="keyword">if</span>(run(year)==<span class="number">0</span>&amp;&amp;month&gt;<span class="number">2</span>)</span><br><span class="line">    day=day+sum(month)-m[month<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>  </span><br><span class="line">     day=day+sum(month)-m[month<span class="number">-1</span>];</span><br><span class="line">   <span class="comment">//计算year年month月前的总天数</span></span><br><span class="line">   <span class="comment">/*打印月历，基本是为了满足格式要求*/</span></span><br><span class="line">    <span class="type">int</span> <span class="built_in">list</span>=(day)%<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">1</span>||month==<span class="number">3</span>||month==<span class="number">5</span>||month==<span class="number">7</span>||month==<span class="number">8</span>||month==<span class="number">10</span>||month==<span class="number">12</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">31</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="built_in">list</span>;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&lt;<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&gt;=<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">4</span>||month==<span class="number">6</span>||month==<span class="number">9</span>||month==<span class="number">11</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">                    <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="built_in">list</span>;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&lt;<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&gt;=<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">2</span>&amp;&amp;run(year)==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">29</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="built_in">list</span>;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">          <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&lt;<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&gt;=<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(month==<span class="number">2</span>&amp;&amp;run(year)==<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">28</span>;i++)</span><br><span class="line">        &#123;<span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="built_in">list</span>;j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">          <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&lt;<span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot; %d\n&quot;</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>((i+<span class="built_in">list</span>)%<span class="number">7</span>==<span class="number">0</span>&amp;&amp;i&gt;=<span class="number">10</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d &quot;</span>,i);</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">10</span>&amp;&amp;(i+<span class="built_in">list</span>)%<span class="number">7</span>!=<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********   End   **********/</span></span><br></pre></td></tr></table></figure><h3 id="第十一关：字符全排列"><a href="#第十一关：字符全排列" class="headerlink" title="第十一关：字符全排列"></a>第十一关：字符全排列</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：输出所有下楼梯的走法。</p><h4 id="编程要求-1"><a href="#编程要求-1" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数Move，它有一个参数n，代表楼梯的台阶数，每次可以下一步，两步或者三步，请你输出所有下楼的方案。<br>注意：第一步跨步大的优先输出，相同则看第二步，以此类推。<br>方案的每一步的步数之间用空格隔开，且行末也有空格。<br>输入数据由评测系统读取，并传递给Move函数。具体见测试说明。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>楼梯总阶数</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>下楼的所有情况</p><h4 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h5 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3 1 </span><br><span class="line">2 2 </span><br><span class="line">2 1 1</span><br><span class="line">1 3</span><br><span class="line">1 2 1</span><br><span class="line">1 1 2 </span><br><span class="line">1 1 1 1</span><br></pre></td></tr></table></figure><h4 id="解析-1"><a href="#解析-1" class="headerlink" title="解析"></a>解析</h4><p>由于需要要列出所有方案，所以我们可以先声明一个数组take[]，用来存放每步⾛的步数，满足条件就打印出来。<br>比如：int take[100];<br>假设有一个函数Try能解答这个问题，且当前已走完n步，即已经填完第n个take[]。<br>那么面对n+1步时有三种选择：走1，2，3步，每种选择都有三种可能性：</p><ul><li>如果剩下的台阶小于想要走的步数 —— 不可走这一步。</li><li>如果剩下的台阶恰好等于要走的步数 —— 打印输出。</li><li>如果剩下的台阶大于想要走的步数 —— 走这一步，然后在剩下的台阶的基础上，再次重复以上过程，即调用自身。</li></ul><p>第n+1步和第n步之间，仅有剩余台阶数不同，因此我们可以将Try定义为Try(n,s)，其中n表示步数，s表示剩余的台阶数。</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> take[<span class="number">100</span>];<span class="comment">//全局变量记录走过的路径</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Try</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> i)</span><span class="comment">//走第n步，还剩余i阶台阶</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">3</span>; j&gt;<span class="number">0</span>; j--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; j)</span><br><span class="line">            <span class="keyword">continue</span>;<span class="comment">//如果剩余的台阶数小于j，则j自减</span></span><br><span class="line">        take[n]=j;</span><br><span class="line">        <span class="keyword">if</span>(i == j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span>;k &lt;= n;k++)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, take[k]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;<span class="comment">//i=j时标明这种走法结束，输出该走法</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Try(n+<span class="number">1</span>,i-j);<span class="comment">//走第n+1步，剩余i-j个台阶</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Move</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    Try(<span class="number">1</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十二关：字符全排列"><a href="#第十二关：字符全排列" class="headerlink" title="第十二关：字符全排列"></a>第十二关：字符全排列</h3><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：输出字符全排列。</p><h4 id="编程要求-2"><a href="#编程要求-2" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数Cal，它有一个参数str，存有一个字符串，它的<strong>长度不超过10</strong>。<br>请你在这个函数中补全代码，输出str字符能够排列成的所有串（全排列）。<br><strong>注意</strong>：输出需要按照<strong>字典序</strong>。<br>输入数据<strong>由评测系统读取</strong>，并传递给Cal函数。具体见<strong>测试说明</strong>。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个字符串。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>字符串全排列的所有情况。</p><h4 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xyz</span><br></pre></td></tr></table></figure><h5 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">xyz </span><br><span class="line">xzy</span><br><span class="line">yxz </span><br><span class="line">yzx</span><br><span class="line">zxy</span><br><span class="line">zyx</span><br></pre></td></tr></table></figure><h4 id="解析-2"><a href="#解析-2" class="headerlink" title="解析"></a>解析</h4><p>为了生成一个串，我们需要不断的选择字符添加到串的最后，而每一次的选择，都是在未被选择过的字母中选择，直到用尽最后一个字符。<br>因此首先我们可以创建一个字符数组来存放已经生成的串，比如：char str[100];<br>对于每一次的选择过程，都需进行以下操作：</p><ul><li>将该字母选入字符串；标记该字母，表示其已被选择；</li><li>如果全部位置都被选完，打印输出；</li><li>否则为下一个位置选择字母；回溯，把刚刚标记过的字母重新标记为“未选择”;</li></ul><p>假设一个函数ranker能够完成上述事情，每次调用之间的区别在于位置n，即当前选择的位置，因此ranker()只需要传递一个参数n，即ranker(n)。</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">char</span> *in;</span><br><span class="line"><span class="type">char</span> out[<span class="number">30</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> used[<span class="number">30</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ranker</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, out);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="comment">//如果n个字母都被选完，则输出一次。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt; length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!used[i])</span><br><span class="line">        &#123;</span><br><span class="line">            out[n]=in[i];</span><br><span class="line">            used[i] = <span class="number">1</span>;<span class="comment">//标记该字母已经被选择</span></span><br><span class="line">            ranker(n+<span class="number">1</span>);<span class="comment">//进行下一次操作</span></span><br><span class="line">            used[i] = <span class="number">0</span>;<span class="comment">//回溯，将标记过的字母重新标记为未选择</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">Comp</span><span class="params">(<span class="type">const</span> <span class="type">void</span> *a, <span class="type">const</span> <span class="type">void</span> *b)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">strcmp</span>(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Cal</span><span class="params">(<span class="type">char</span> *str)</span></span><br><span class="line">&#123;</span><br><span class="line">    in = str;</span><br><span class="line">    length = <span class="built_in">strlen</span>(in);</span><br><span class="line">    qsort(in,length, <span class="keyword">sizeof</span>(<span class="type">char</span>), Comp);<span class="comment">//对str数组进行排序</span></span><br><span class="line">    ranker(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十三关：分书问题"><a href="#第十三关：分书问题" class="headerlink" title="第十三关：分书问题"></a>第十三关：分书问题</h3><h4 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：找到能满足所有人要求的分书方案。</p><h4 id="编程要求-3"><a href="#编程要求-3" class="headerlink" title="编程要求"></a>编程要求</h4><p>在右侧编辑器中有一个函数Cal，请在这个函数中读取数据完成任务。<br>输入数据<strong>由学员处理</strong>。输入为一个5×5的矩阵，第m行第n列为1时，表示第m个人喜欢第n本书。<br>请在此函数中计算并输出所有的分书方案，每一个分书方案占一行，按照<strong>字典序排列</strong>。<br>每一个分书方案应该有5个数字，是书的编号，依次对应A,B,C,D,E五个人。编号与编号之间用<strong>空格</strong>隔开，行末也有<strong>空格</strong>。<br>具体见<strong>测试说明</strong>。</p><h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>5×5的0,1矩阵</p><h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>符合所有人爱好的分书方案</p><h4 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0 0 1 1 0 </span><br><span class="line">1 1 0 0 1</span><br><span class="line">0 1 1 0 1</span><br><span class="line">0 0 0 1 0</span><br><span class="line">0 1 0 0 1</span><br></pre></td></tr></table></figure><h5 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 1 2 4 5</span><br><span class="line">3 1 5 4 2</span><br></pre></td></tr></table></figure><h4 id="解析-3"><a href="#解析-3" class="headerlink" title="解析"></a>解析</h4><p>这个问题与全排列问题是相似的，因此也可以按照相同的思路来解决问题。<br>首先我们可以用一个标记数组来记录每本书的分配情况，比如：int book[5];<br>接着我们假设已经分配了部分书，分析下一步会遇到的情况：</p><ul><li>试着给第i个人分书，先试分0号书，再分1号书，以此类推。</li><li>当满足“第i个人喜欢第j本书，且j书尚未被分走”时，第i个人能够得到第j本书。</li><li>如果不满足上述条件，则什么都不做（返回）。</li></ul><p>将书分配给某个人时，我们需要做三件事情：</p><ul><li>操作：标记第j本书，表示该书已被选用；</li><li>判断：查看书是否全部分完，若分完则输出每个人所得之书，若未分完则继续寻找解决方案；</li><li>回溯：让第i人退回j书，恢复j书尚未被选的标志，以完成退书的动作。</li></ul><p>同样我们假设有一个函数trybook能解决这个问题，每次调用的区别在于分书的对象，因此可以将其定义为trybook(i)。</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> like[<span class="number">5</span>][<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> book[<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;, take[<span class="number">5</span>];</span><br><span class="line"><span class="comment">/*为第i-1个人选书*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">trybook</span><span class="params">(<span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (i==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> k=<span class="number">0</span>; k&lt;=<span class="number">4</span>; k++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, take[k] + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="comment">//输出一次选书结果</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">0</span>; j&lt;=<span class="number">4</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (like[i][j] &amp;&amp; book[j]==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            take[i] = j;</span><br><span class="line">            book[j] = <span class="number">1</span>;<span class="comment">//将该书标记为已选择</span></span><br><span class="line">            trybook(i+<span class="number">1</span>);<span class="comment">//为下一个人选书</span></span><br><span class="line">            book[j] = <span class="number">0</span>;<span class="comment">//回溯，重新将该书标记为未选择</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Cal</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;<span class="number">5</span>; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;like[i][j]);</span><br><span class="line">    trybook(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏秦班数组作业（部分）</title>
      <link href="/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/"/>
      <url>/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E6%95%B0%E7%BB%84%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>当我们需要处理多个变量时我们或许可以通过定义多个变量来进行储存，但是在大部分情况下是不显示的，所以数组就应运而生。而数组按照分类方式又可以分为整型数组，字符型数组等亦或者是一维数组，二维数组等。本次的作业就是我们对于数组的一些操作以及利用数组来完成一些任务，而在后面对于指针的学习中结合指针我们或许能够对数组有更深的了解。</p><h3 id="第四关：数组合并"><a href="#第四关：数组合并" class="headerlink" title="第四关：数组合并"></a>第四关：数组合并</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：合并两个有序数组。<br>有两个元素非递减的数组a和数组b，请你将它们合并成数组c，其数组元素依然是非递减的。</p><h4 id="编程要求"><a href="#编程要求" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数Merge，它有以下5个参数：</p><ul><li>int a[]：第一个非递减数组。</li><li>int alen：数组a的长度。</li><li>int b[]：第二个非递减数组。</li><li>int blen：数组b的长度。</li><li>int c[]：前两个数组的内容合并到此数组中，<strong>保证空间足够</strong>。</li></ul><p>输入数据由评测系统读取，并传递给Merge函数，在调用完此函数之后，系统会打印数组c中的内容，具体见测试说明。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>每组输入有两行，每一行为一个数组的内容。每行第一个数m代表数组长度，之后n个数为此数组中的内容。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>合并后的数组</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 1 1 2 3</span><br><span class="line">3 0 5 7</span><br></pre></td></tr></table></figure><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 1 1 2 3 5 7</span><br></pre></td></tr></table></figure><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>本题我们也很容易将其分为两部分，一是将该数组a，b填充到数组c中；二是将数组c进行排序。对于第一个任务，我们其实就是对于数组c进行赋值，而对于第二个任务就是利用我们经常使用的排序算法。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Merge</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> alen,<span class="type">int</span> b[],<span class="type">int</span> blen,<span class="type">int</span> c[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=alen;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       c[i]=a[i];</span><br><span class="line">   &#125;<span class="comment">//将数组a保存到数组c中</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=alen;i&lt;=alen+blen;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       c[i]=b[i-alen];</span><br><span class="line">   &#125;<span class="comment">//将数组b保存到数组c中</span></span><br><span class="line">    <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;alen+blen;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;alen+blen;j++)</span><br><span class="line">       <span class="keyword">if</span>(c[j]&lt;c[i])</span><br><span class="line">       &#123;</span><br><span class="line">           t=c[j];</span><br><span class="line">           c[j]=c[i];</span><br><span class="line">           c[i]=t;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;<span class="comment">//将数组c进行排序</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**********   End   **********/</span></span><br></pre></td></tr></table></figure><h3 id="第五关：数组的TopK"><a href="#第五关：数组的TopK" class="headerlink" title="第五关：数组的TopK"></a>第五关：数组的TopK</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：输出数组的最大k个数。<br>给定一个数组a，请从大到小输出这个数组中的最大k个数。注意，数组<strong>不是有序的</strong>。</p><h4 id="编程要求-1"><a href="#编程要求-1" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器有一个函数TopK，它三个参数a、alen和k，分别代表要处理的数组、这个数组的<strong>长度</strong>以及要求的k个数。<br>k不大于数组长度。<br>请计算最大k个数，并输出，每一个数占一行。<br>输入数据由评测系统读取并传递给TopK函数，具体见测试说明。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>每组输入有一行，第一个数m代表数组的长度，第二个数k为要求的最大k个数，之后n个数为数组内容。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>最大的k个数，每个数占一行</p><h4 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 2 2 1 3（数组长度为3，要求输出数组中最大的2个元素，2 1 3 为数组内容）</span><br></pre></td></tr></table></figure><h5 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 </span><br><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="解析-1"><a href="#解析-1" class="headerlink" title="解析"></a>解析</h4><p>对于这个题目，我们的思路也非常明确，因为是要输出最大的k个数，所以我们可以先将数组进行排序，之后再依次输出k个最大的数。所以这里我们也使用了排序的算法。</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TopK</span><span class="params">(<span class="type">int</span> a[],<span class="type">int</span> alen,<span class="type">int</span> k)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">int</span> t=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;alen;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;alen;j++)</span><br><span class="line">       <span class="keyword">if</span>(a[j]&gt;a[i])</span><br><span class="line">       &#123;</span><br><span class="line">           t=a[j];</span><br><span class="line">           a[j]=a[i];</span><br><span class="line">           a[i]=t;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;<span class="comment">//将数组进行排序</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;k;i++)</span><br><span class="line">   &#123;<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[i]);&#125;<span class="comment">//输出最大的k个数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第七关：排队挂号"><a href="#第七关：排队挂号" class="headerlink" title="第七关：排队挂号"></a>第七关：排队挂号</h3><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：输出下一个病人所挂号的医生的编号。<br>某医院有n位接诊的医师，编号为1到n。如果有病人进来，负责挂号的医师会将其安排在<strong>排队人数最少的</strong>医生那里，如果有多个医生的排队人数都是最少的，那就安排在<strong>编号较小</strong>的那一个。现在告诉你每个医生的排队情况，请你判断下一个病人来时，应该安排在哪一个医生那里。</p><h4 id="编程要求-2"><a href="#编程要求-2" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器有一个函数Next，它有两个参数arr和n，arr是数组，存有每个医生前的<strong>排队人数</strong>，n是医生的<strong>数量</strong>（即arr数组的长度）。<br>请计算并输出下一个病人挂号的医生的编号，输出占一行。<br>输入的数据由评测系统读取，并传递给Next函数。具体见测试说明。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>每组输入分两行，第一行是医生的数量n，第二行有n个数，代表每一个医生前面的排队人数。</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>下一个病人挂号的医生的编号</p><h4 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3（医生数量）</span><br><span class="line">2 1 3（对应1-3号医生的排队人数）</span><br></pre></td></tr></table></figure><h5 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2（表示去2号医生那排队）</span><br></pre></td></tr></table></figure><h4 id="解析-2"><a href="#解析-2" class="headerlink" title="解析"></a>解析</h4><p>在本题中我们需要做的是找到目前排队人数最少的那一位医生，所以这里我们可以将第i位医生面前的排队人数依次与所有医生面前排队人数进行比较，如果第i位医生排队人数小于某一位医生面前的排队人数，则计数变量count加一，如果count等于医生的数量n，则表示我们已经找到了排队人数最少的那一位医生。</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Next</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;n;j++)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="keyword">if</span>(arr[i]&lt;=arr[j])</span><br><span class="line">           count++;</span><br><span class="line">       &#125;<span class="comment">//找到人数最少的医生</span></span><br><span class="line">       <span class="keyword">if</span>(count==n)</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">           <span class="keyword">break</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       count=<span class="number">0</span>;<span class="comment">//每次查找之后将count归零</span></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十关：字符串输入输出"><a href="#第十关：字符串输入输出" class="headerlink" title="第十关：字符串输入输出"></a>第十关：字符串输入输出</h3><h4 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：统计一个英文句子中的单词数量。</p><h4 id="编程要求-3"><a href="#编程要求-3" class="headerlink" title="编程要求"></a>编程要求</h4><p>输入一个只由字母和空格组成的英文句子，请统计这个句子中的单词数量。句子长度<strong>不超过80个字符</strong>。<br>右侧编辑器中有一个Count函数，请在这个函数中实现功能。<br>输入数据只有一行，为一个英文句子，由学生<strong>自己读取</strong>。<br>输出数据为单词数量，占一行。详细见测试说明。</p><h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个只由字母和空格组成的英文句子</p><h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>单词个数</p><h4 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">He is one of my good friends</span><br></pre></td></tr></table></figure><h5 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="解析-3"><a href="#解析-3" class="headerlink" title="解析"></a>解析</h4><p>本题中我们要求的是一个英文句子里的单词个数，请注意的是，两个单词之间可能会含有多个空格，并且在句子的开头，可能不是字母而是空格，所以这道题并不是像所谓的植树问题那样简单。所以我们怎么判断我们在一次读取的过程中遇到了一个单词呢？应该是当上一个字符是空格而下一个字符是字母时我们便算遇到了一个单词。所以在程序中我们设置了变量word，word为0时表示读取到的字符是空格，word为1表示我们读取到了一个字母，而在word由0变为1时即表示我们遇到了一个单词。</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Count</span><span class="params">()</span></span><br><span class="line">&#123;<span class="type">int</span> count=<span class="number">0</span>,word=<span class="number">0</span>;</span><br><span class="line">    <span class="type">char</span> a[<span class="number">80</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">   gets(a);</span><br><span class="line">   <span class="type">char</span> c;</span><br><span class="line">   <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;(c=a[i])!=<span class="string">&#x27;\0&#x27;</span>;i++)<span class="comment">//当未读取结束时一直循环并且c依次保存字符数组的a[i]</span></span><br><span class="line">   &#123;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">word=<span class="number">0</span>;<span class="comment">//word置为0表示还未读取到单词</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(word==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    word=<span class="number">1</span>;</span><br><span class="line">    count++;</span><br><span class="line">&#125;<span class="comment">//若c不为空格并且上一位为空格则表示我们找到了一个单词</span></span><br><span class="line">   &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,count);</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十三关：判断回文串"><a href="#第十三关：判断回文串" class="headerlink" title="第十三关：判断回文串"></a>第十三关：判断回文串</h3><h4 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：判断一个字符串是否是回文串。<br>给定一个字符串，判断它是不是回文串。回文串指的是<strong>从前往后读</strong>和<strong>从后往前读</strong>是一样的。 注：<strong>忽略大小写</strong>。</p><h4 id="编程要求-4"><a href="#编程要求-4" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数IsPal，它有一个参数str，是一个字符串。<br>请判断这个字符串是否为回文串，是则输出Yes，否则输出No，输出占一行。<br>输入数据<strong>由评测系统读取</strong>，并传递给IsPal函数。详细见<strong>测试说明</strong>。</p><h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个字符串</p><h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>Yes或者No</p><h4 id="输入输出样例-4"><a href="#输入输出样例-4" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Abcdedcba</span><br></pre></td></tr></table></figure><h5 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h4 id="解析-4"><a href="#解析-4" class="headerlink" title="解析"></a>解析</h4><p>判断回文串的方法有很多，在后面学习指针时我们可以利用指针来写出更加简便的程序。而现在要求我们只用数组的知识来完成的话，第一步还是得先将字符串给全部转为大写字母（或者小写字母）。接着依次比较关于字符串中间位置对称的两个字符。如果从两端一直比较到中间都相等的话表示该字符串为回文串。</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">IsPal</span><span class="params">(<span class="type">char</span> str[])</span></span><br><span class="line">&#123;<span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(str);i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(str[i]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;str[i]&lt;=<span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">    str[i]=str[i]<span class="number">-32</span>;</span><br><span class="line">&#125;<span class="comment">//将字符串全部转为大写</span></span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">strlen</span>(str)%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(str)/<span class="number">2</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(str[i]==str[<span class="built_in">strlen</span>(str)<span class="number">-1</span>-i])</span><br><span class="line">       count++;<span class="comment">//若前后关于字符串对称的两个字符相等则计数</span></span><br><span class="line">   &#125;<span class="comment">//字符串长度为偶数的情况</span></span><br><span class="line">   <span class="keyword">if</span>(count==<span class="built_in">strlen</span>(str)/<span class="number">2</span>)</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(str)%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;(<span class="built_in">strlen</span>(str)<span class="number">-1</span>)/<span class="number">2</span>;i++)</span><br><span class="line">   &#123;</span><br><span class="line">       <span class="keyword">if</span>(str[i]==str[<span class="built_in">strlen</span>(str)<span class="number">-1</span>-i])</span><br><span class="line">       count++;<span class="comment">//若前后关于字符串对称的两个字符相等则计数</span></span><br><span class="line">   &#125;<span class="comment">//字符串长度为奇数的情况</span></span><br><span class="line">   <span class="keyword">if</span>(count==(<span class="built_in">strlen</span>(str)<span class="number">-1</span>)/<span class="number">2</span>)</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********   End   **********/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023.5.20 程设考试·七点钟·A卷</title>
      <link href="/2023/09/06/2023.5.20%20%E7%A8%8B%E8%AE%BE%E8%80%83%E8%AF%95%C2%B7%E4%B8%83%E7%82%B9%E9%92%9F%C2%B7A%E5%8D%B7/"/>
      <url>/2023/09/06/2023.5.20%20%E7%A8%8B%E8%AE%BE%E8%80%83%E8%AF%95%C2%B7%E4%B8%83%E7%82%B9%E9%92%9F%C2%B7A%E5%8D%B7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h2 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>使用嵌套循环输出以下图形：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">abcdedcba</span><br><span class="line"> abcdcba</span><br><span class="line">  abcba</span><br><span class="line">   aba</span><br><span class="line">    a</span><br></pre></td></tr></table></figure><h3 id="代码-无正确性保障"><a href="#代码-无正确性保障" class="headerlink" title="代码(无正确性保障)"></a>代码(无正确性保障)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">2</span>*(<span class="number">5</span>-i)<span class="number">-1</span>;j++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,<span class="string">&#x27;a&#x27;</span>+(<span class="number">4</span>-i-<span class="built_in">abs</span>(j<span class="number">-4</span>+i)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*也可以使用两个循环，先顺序，再逆序，好写一点*/</span></span><br><span class="line"><span class="comment">/*不知道需不需要 </span></span><br><span class="line"><span class="comment">for(j=0;j&lt;i;j++)&#123;</span></span><br><span class="line"><span class="comment">    printf(&quot; &quot;);</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>输入五行五列数据，求所有数据之和x。找到每一行的最小值，最小值之和为y。输出x-y的值。</p><h3 id="代码-无正确性保障-1"><a href="#代码-无正确性保障-1" class="headerlink" title="代码(无正确性保障)"></a>代码(无正确性保障)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, a[<span class="number">5</span>][<span class="number">5</span>]=&#123;<span class="number">0</span>&#125;, x=<span class="number">0</span>, y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">x=x+a[i][j];</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="type">int</span> min=a[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)&#123;</span><br><span class="line">min=(min&gt;a[i][j])?a[i][j]:min;</span><br><span class="line">&#125;</span><br><span class="line">y=y+min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,x-y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p>输入n(范围忘了)，代表数组的元素个数，再输入n个数字。输入m，求出m除去1以外的最小因子。求出该因子在数组中的位置（自1开始计算）；若没有，输出0。<br>使用函数，函数原型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int findMinFac(int m, int a[], int n);</span><br></pre></td></tr></table></figure><h3 id="代码-无正确性保障-2"><a href="#代码-无正确性保障-2" class="headerlink" title="代码(无正确性保障)"></a>代码(无正确性保障)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findmin</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">2</span>;n%i!=<span class="number">0</span>;i++);</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">findMinFac</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> a[], <span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="type">int</span> i, k=findmin(m), sub=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==k)&#123;</span><br><span class="line">sub=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sub;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">int</span> i, n, a[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,findMinFac(m,a,n));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p>输入字符串a，b（字母）（最大长度为40）。用Sort函数对a进行排序（字典顺序），用Link函数将a连在b的前面（修改b的值，假如空间足够）。输出连接后的字符串。<br>要求：</p><ol><li>使用指针。</li><li>在主函数输出</li></ol><p>函数原型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void Link(char * pa, char * pb);</span><br></pre></td></tr></table></figure><h3 id="代码-无正确性保障-3"><a href="#代码-无正确性保障-3" class="headerlink" title="代码(无正确性保障)"></a>代码(无正确性保障)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Sort</span><span class="params">(<span class="type">char</span> * p)</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, len=<span class="built_in">strlen</span>(p);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;len-i;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(p[j]&lt;p[j<span class="number">-1</span>])&#123;</span><br><span class="line"><span class="type">int</span> t=p[j];</span><br><span class="line">p[j]=p[j<span class="number">-1</span>];</span><br><span class="line">p[j<span class="number">-1</span>]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Link</span><span class="params">(<span class="type">char</span> * pa, <span class="type">char</span> * pb)</span>&#123;</span><br><span class="line"><span class="type">int</span> i, j, lena=<span class="built_in">strlen</span>(pa), lenb=<span class="built_in">strlen</span>(pb);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;lena;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=i+lenb;j&gt;i;j--)&#123;</span><br><span class="line">pb[j]=pb[j<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">pb[i]=pa[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">41</span>]=&#123;<span class="number">0</span>&#125;, b[<span class="number">82</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b);</span><br><span class="line">    Sort(a);</span><br><span class="line">    Link(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p>输入五个学生的学号（10位整数）、姓名（少于20位）、省份（少于20位）。<br>符合要求的学号组成：</p><ol><li>年份：四位，2018~2022之间（包含边界）</li><li>学院：两位，01~21之间</li><li>班级：两位，01~18之间</li><li>序号：两位</li></ol><p>例子：2020031524（符合要求）、2010334514（不符合要求）<br>输出符合要求的学生数据，假如不存在则输出”No records.”</p><p>要求：</p><ol><li>使用结构体数组</li><li>可以不用函数</li></ol><h3 id="代码-无正确性保障-4"><a href="#代码-无正确性保障-4" class="headerlink" title="代码(无正确性保障)"></a>代码(无正确性保障)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line"><span class="type">char</span> number[<span class="number">21</span>];</span><br><span class="line"><span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line"><span class="type">char</span> province[<span class="number">11</span>];</span><br><span class="line">&#125;student;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">scan</span><span class="params">(student *p)</span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s%s&quot;</span>,p[i].number,p[i].name,p[i].province);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(student p)</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s %s\n&quot;</span>,p.number,p.name, p.province);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">is_success</span><span class="params">(student p)</span>&#123;</span><br><span class="line"><span class="type">int</span> i, year=<span class="number">0</span>, school=<span class="number">0</span>, clas=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">year=year*<span class="number">10</span>+p.number[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">4</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">school=school*<span class="number">10</span>+p.number[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">6</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">clas=clas*<span class="number">10</span>+p.number[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ((<span class="number">2018</span>&lt;=year &amp;&amp; year&lt;=<span class="number">2022</span>) &amp;&amp; (<span class="number">1</span>&lt;=school &amp;&amp; school&lt;=<span class="number">21</span>) &amp;&amp; (<span class="number">1</span>&lt;=clas &amp;&amp; clas&lt;=<span class="number">18</span>))?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">student stu[<span class="number">5</span>];</span><br><span class="line">scan(stu);</span><br><span class="line"><span class="type">int</span> i, flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(is_success(stu[i]))&#123;</span><br><span class="line">print(stu[i]);</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No records.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夏秦班循环程序设计作业（部分）</title>
      <link href="/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E5%BE%AA%E7%8E%AF%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/"/>
      <url>/2023/09/06/%E5%A4%8F%E7%A7%A6%E7%8F%AD%E5%BE%AA%E7%8E%AF%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E4%BD%9C%E4%B8%9A%EF%BC%88%E9%83%A8%E5%88%86%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：Ryan</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h3 id="总览"><a href="#总览" class="headerlink" title="总览"></a>总览</h3><p>循环结构在c语言中非常重要，关于它的应用，在数学上我们可以想到级数求和，例如本次作业中我们求解e的近似值就是无穷级数的部分和。诸如此类，循环结构的应用范围是十分广泛的。而在本次作业中还有一些比较有趣的题目，例如判断凸四边形，该题虽然与循环结构无关，但是其解法需要我们多加思考，所以我也将其选了进来。</p><h3 id="第五关：结构体的简单使用"><a href="#第五关：结构体的简单使用" class="headerlink" title="第五关：结构体的简单使用"></a>第五关：结构体的简单使用</h3><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：实现二维向量的加减法。</p><h4 id="编程要求"><a href="#编程要求" class="headerlink" title="编程要求"></a>编程要求</h4><p>请写出二维向量Vector2 的结构体声明，要求它有两个成员变量 X和Y ，且均为 int类型。<br>然后写出下面的两个函数Add和Sub，它们均有两个参数a和b，代表两个二维向量。<br>在Add函数中，请补充代码，计算a,b两个向量的和 。<br>在Sub函数中，请补充代码，计算a减去b的结果。<br>注意： 对二维向量的加减法，是将其两个分量分别加减，比如：(1 ,2) + (2 ,3) = (3 ,5)。<br>评测系统会将这个两个函数的返回值按照a + b = &lt;结果&gt;，a - b = &lt;结果&gt;的格式输出。<br>输入数据由评测系统读取，并传递给这两个函数。具体见测试说明。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>输入的两行分别是a和b两个向量的值</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>输出的两行是a + b和a - b的值。</p><h4 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 5</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 8</span><br><span class="line">1 2</span><br></pre></td></tr></table></figure><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>本题就是掌握结构体的定义方法以及一些简单的计算等</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vector2</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> X;</span><br><span class="line">    <span class="type">int</span> Y;</span><br><span class="line">&#125;;<span class="comment">//结构体的定义</span></span><br><span class="line"><span class="keyword">struct</span> Vector2 <span class="title function_">Add</span><span class="params">(<span class="keyword">struct</span> Vector2 a,<span class="keyword">struct</span> Vector2 b)</span><span class="comment">//两个向量相加</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Vector2</span> <span class="title">ans</span>;</span></span><br><span class="line">    ans.X=a.X+b.X;</span><br><span class="line">        ans.Y=a.Y+b.Y;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> Vector2 <span class="title function_">Sub</span><span class="params">(<span class="keyword">struct</span> Vector2 a,<span class="keyword">struct</span> Vector2 b)</span><span class="comment">//两个向量相减</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Vector2</span> <span class="title">ans</span>;</span></span><br><span class="line">    ans.X=a.X-b.X;</span><br><span class="line">        ans.Y=a.Y-b.Y;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="第七关：计算e的近似值"><a href="#第七关：计算e的近似值" class="headerlink" title="第七关：计算e的近似值"></a>第七关：计算e的近似值</h3><h4 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：计算e的近似值。<br>e的近似值可以由以下公式求得：e=1+1/(1!)+1/(2!)+1/(3!)+⋯+1/(n!)<br>现在给定 n 的值，计算在此情况下 e 的近似值。<strong>精确到小数点后6位</strong>。</p><h4 id="编程要求-1"><a href="#编程要求-1" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个函数E，它有一个参数n，代表公式中n的值，且1 &lt;= n &lt;= 20。<br>请在此函数中计算并输出在指定的n的条件下e的近似值，输出占一行。<br>输入数据由评测系统读取，并传递给E函数。详细见测试说明。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>公式中的n</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>e的近似值</p><h4 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h5 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2.716667</span><br></pre></td></tr></table></figure><h4 id="解析-1"><a href="#解析-1" class="headerlink" title="解析"></a>解析</h4><p>本题是循环结构的一个经典应用，数学里面的级数求和便可以用循环结构来完成，我们需要掌握的便是for循环结构的书写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">E</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="type">double</span> s=<span class="number">1</span>;</span><br><span class="line">    <span class="type">double</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;<span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">        s=s;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        s=s*i;<span class="comment">//计算n！</span></span><br><span class="line">        sum=sum+<span class="number">1</span>/s;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,sum);</span><br><span class="line">&#125;·  </span><br></pre></td></tr></table></figure><h3 id="第十四关：强制类型转换"><a href="#第十四关：强制类型转换" class="headerlink" title="第十四关：强制类型转换"></a>第十四关：强制类型转换</h3><h4 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：编写一个能截取小数位数的小程序。</p><h4 id="编程要求-2"><a href="#编程要求-2" class="headerlink" title="编程要求"></a>编程要求</h4><p>右侧编辑器中有一个Cut函数，它有一个参数v，代表要进行处理的数，还有一个参数n，范围1-4，代表<strong>保留的小数位数</strong>。<br>注意，保留位数之外的直接舍弃，<strong>不用进行四舍五入</strong>。<br>请在这个函数中补充代码，将v进行截取并输出，输出占一行。<br>输入的数据由评测系统读取，并传递给Cut函数。具体见测试说明。</p><h4 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h4><p>需要处理的数以及应该截取的小数位数</p><h4 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h4><p>截取之后的数</p><h4 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.1415 1</span><br></pre></td></tr></table></figure><h5 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3.1</span><br></pre></td></tr></table></figure><h4 id="解析-2"><a href="#解析-2" class="headerlink" title="解析"></a>解析</h4><p>本题我们需要完成的事保留小数位数，所以我们首先思路可能就是想办法将整数与小数部分给分开，于是我们便利用强制类型转换提取出整数部分。接下来更根据题意我们保留的小数位数是1-4位，故我们设置一个长度为4的数组依次保存该数的四个小数位，再根据题目要求我们便可以输出整数部分c以及保留的小数部分b的和，我们便完成了该题目的要求。</p><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Cut</span><span class="params">(<span class="type">double</span> v,<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//保存数字的前四位小数</span></span><br><span class="line"><span class="type">int</span> c=v;<span class="comment">//保存整数部分</span></span><br><span class="line"><span class="type">float</span> count=<span class="number">0.1</span>;</span><br><span class="line"><span class="type">float</span> b=<span class="number">0</span>;<span class="comment">//用于保存小数部分</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;   v=<span class="number">10</span>*v;</span><br><span class="line">    a[i]=((<span class="type">int</span>)v)%<span class="number">10</span>;<span class="comment">//提取出小数位</span></span><br><span class="line">    b=b+a[i]*count;</span><br><span class="line">    count=<span class="number">0.1</span>*count;</span><br><span class="line">&#125;</span><br><span class="line">v=c+b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%g&quot;</span>,v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十七关：判断四边形"><a href="#第十七关：判断四边形" class="headerlink" title="第十七关：判断四边形"></a>第十七关：判断四边形</h3><h4 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：判断一个四边形是否为凸四边形。<br>凸四边形是指：对于四边形上任意一边所在的直线而言，四边形的整体都在直线的<strong>同一侧</strong>。<br><strong>注意</strong>：如果有两条边<strong>共线</strong>，也不算作是凸四边形。</p><h4 id="编程要求-3"><a href="#编程要求-3" class="headerlink" title="编程要求"></a>编程要求</h4><p>每一组输入占一行，包含8个整数：x1,y1,x2,y2,x3,y3,x4,y4，两两一组，代表四边形四个顶点的坐标，并且是按照<strong>顺时针顺序</strong>给出的。<br>如果指定的四边形是凸四边形，则输出Yes，否则输出No，输出占一行。<br>输入的数据由评测系统读取，并传递给Cal函数。具体见测试说明。</p><h4 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h4><p>四边形四个顶点的坐标</p><h4 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h4><p>Yes或者No</p><h4 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 0 1 1 1 1 0</span><br></pre></td></tr></table></figure><h5 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h4 id="解析-3"><a href="#解析-3" class="headerlink" title="解析"></a>解析</h4><p>对于该题目我们可以有多种思路，而最简单的思路应该就是判断角，凸四边形的角不可能大于180°，基于此我们可以想到利用叉乘来完成这个任务。我们可以通过检查两条边与这两条边所夹的对角线的叉乘是否反向来判断该四边形是否是凸四边形，如果都反向的话则是凸四边形。这也就是说我们要计算四次叉乘。</p><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Cal</span><span class="params">(<span class="type">double</span> x1,<span class="type">double</span> y1,</span></span><br><span class="line"><span class="params">         <span class="type">double</span> x2,<span class="type">double</span> y2,</span></span><br><span class="line"><span class="params">         <span class="type">double</span> x3,<span class="type">double</span> y3,</span></span><br><span class="line"><span class="params">         <span class="type">double</span> x4,<span class="type">double</span> y4)</span></span><br><span class="line">&#123;</span><br><span class="line">   <span class="type">double</span> a, b, c, d;</span><br><span class="line"> </span><br><span class="line">    a = ((x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1));</span><br><span class="line">    b = ((x4 - x1) * (y3 - y1) - (x3 - x1) * (y4 - y1));</span><br><span class="line">    c = ((x4 - x2) * (y3 - y2) - (x3 - x2) * (y4 - y2));</span><br><span class="line">    d = ((x4 - x2) * (y1 - y2) - (x1 - x2) * (y4 - y2));<span class="comment">//计算每两条线之间叉乘的结果</span></span><br><span class="line">    <span class="keyword">if</span>(c*d&lt;<span class="number">0</span>&amp;&amp;a*b&lt;<span class="number">0</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第十八关：与3无关的数"><a href="#第十八关：与3无关的数" class="headerlink" title="第十八关：与3无关的数"></a>第十八关：与3无关的数</h3><h4 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h4><p>本关任务：判断一个数是否为与3无关的数。<br>如果一个数能<strong>被3整除</strong>，或者十进制表示中<strong>某一位有3</strong>，则称其为<strong>与3有关的数</strong>。现在给你一个整数，请你判断它是不是一个与3无关的数。</p><h4 id="编程要求-4"><a href="#编程要求-4" class="headerlink" title="编程要求"></a>编程要求</h4><p>每组输入为一行，每行一个整数N,0&lt;N&lt;100。<br>请输出判断结果，如果是与3无关的数，则输出Yes，否则输出No，输出占一行。<br>输入的数据由评测系统读取，并传递给Cal函数。具体见测试说明。</p><h4 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h4><p>小于100的正整数</p><h4 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h4><p>Yes或者No</p><h4 id="输入输出样例-4"><a href="#输入输出样例-4" class="headerlink" title="输入输出样例"></a>输入输出样例</h4><h5 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h5 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br></pre></td></tr></table></figure><h4 id="解析-4"><a href="#解析-4" class="headerlink" title="解析"></a>解析</h4><p>本题我们显然可以将问题分为两部分，一是该数能否被三整除，二是该数是否含有3。对于第一个部分，我们容易解决，对于第二个部分，我们利用while循环将数的每一位都提取出来判断，如果，含有3则不是与3无关的数，否则则是与3无关的数。注意while（0）中0表示假，循环结束，借助这一点我们便可以找到跳出循环的条件——即数x的每一位都被提取完之后x应该为0,此时跳出循环。</p><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Cal</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (x % <span class="number">3</span> == <span class="number">0</span>) &#123;<span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;<span class="comment">//被3整除的数与三有关</span></span><br><span class="line">    <span class="keyword">while</span> (x)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> tmp = x % <span class="number">10</span>;<span class="comment">//提取每一位数字</span></span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span> (tmp == <span class="number">3</span>) &#123;<span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);<span class="keyword">return</span> <span class="number">0</span>;&#125;<span class="comment">//如果数字中含3该数与3有关</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**********   End   **********/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>胡怀中老师作业</title>
      <link href="/2023/09/06/%E8%83%A1%E6%80%80%E4%B8%AD%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/09/06/%E8%83%A1%E6%80%80%E4%B8%AD%E8%80%81%E5%B8%88%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">撰稿人：程设编写小组</span><br><span class="line">审核人：常益鸣</span><br><span class="line">课程时间：2023年第二学期</span><br><span class="line">更新时间：2023-09-05</span><br></pre></td></tr></table></figure><h2 id="第三章第2题"><a href="#第三章第2题" class="headerlink" title="第三章第2题"></a>第三章第2题</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>有1000元，想存5年，可按以下5种办法存：<br>（1）一次存5年期。<br>（2）先存2年期，到期后将本息再存3年期。<br>（3）先存3年期，到期后将本息再存2年期。<br>（4）存1年期，到期后将本息再存1年期，连续存5次。<br>（5）存活期存款。活期利息每一季度结算一次。<br> 2017年的银行存款利息如下：<br> 1年期定期存款利息为1.5%；<br> 2 年期定期存款利息为2.1%；<br> 3年期定期存款利息为2.75%；<br> 5年期定期存款利息为3%；<br> 活期存款利息为0.35%（活期存款每一季度结算一次利息）。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><p>本题基于存款问题展开，一次存款的本息和公式为“本息和=本金+利息=本金+本金*利率*时间”</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p1=%lf\n&quot;</span>,<span class="number">1000</span>*<span class="number">0.03</span>*<span class="number">5</span>+<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p2=%lf\n&quot;</span>,(<span class="number">1000</span>*<span class="number">0.021</span>*<span class="number">2</span>+<span class="number">1000</span>)*(<span class="number">1</span>+<span class="number">0.0275</span>*<span class="number">3</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p3=%lf\n&quot;</span>,(<span class="number">1000</span>*<span class="number">0.0275</span>*<span class="number">3</span>+<span class="number">1000</span>)*(<span class="number">1</span>+<span class="number">0.021</span>*<span class="number">2</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p4=%lf\n&quot;</span>,(<span class="number">1000</span>*<span class="number">0.015</span>*<span class="number">1</span>+<span class="number">1000</span>)*(<span class="number">1</span>+<span class="number">0.015</span>*<span class="number">1</span>)*(<span class="number">1</span>+<span class="number">0.015</span>*<span class="number">1</span>)*(<span class="number">1</span>+<span class="number">0.015</span>*<span class="number">1</span>)*(<span class="number">1</span>+<span class="number">0.015</span>*<span class="number">1</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;p5=%lf&quot;</span>,<span class="number">1000</span>*<span class="built_in">pow</span>(<span class="number">1</span>+<span class="number">0.0035</span>/<span class="number">4.0</span>,<span class="number">20</span>)); <span class="comment">//本金为1000，季度利率为0.0035/4.0，5年共结算4*5=20次</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出"><a href="#题目输出" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">p1=1150.000000</span><br><span class="line">p2=1127.965000</span><br><span class="line">p3=1127.965000</span><br><span class="line">p4=1077.284004</span><br><span class="line">p5=1017.646235</span><br></pre></td></tr></table></figure><h2 id="第三章第3题"><a href="#第三章第3题" class="headerlink" title="第三章第3题"></a>第三章第3题</h2><h3 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h3><p>购房从银行贷了一笔款d，准备每月还款额为p，月利率为r，计算多少月能还清。<br>设d为300000元，p为6000元，r为1%。对求得的月份取小数点后两位，对第2位按四舍五入处理。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">m=求得的月份。</span><br></pre></td></tr></table></figure><h3 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h3><p>本题目基于还款问题展开，还款问题分为等额本金和等额本息两种方式，本题为等额本息问题，具体公式推导可参考 <a href="https://www.bilibili.com/video/BV1Dr4y1C7y2/?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1Dr4y1C7y2/?spm_id_from=333.337.search-card.all.click</a></p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">float</span> d = <span class="number">300000</span>,p=<span class="number">6000</span>,r=<span class="number">0.01</span>,m;</span><br><span class="line">    m = <span class="built_in">log10</span>(p/(p-d*r))/<span class="built_in">log10</span>(<span class="number">1</span>+r);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;m=%.2f\n&quot;</span>,m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三章第6题"><a href="#第三章第6题" class="headerlink" title="第三章第6题"></a>第三章第6题</h2><h3 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h3><p>请编程序将“China”译成密码，密码规律使是：用原来的字母后面第4个字母代替原来的字母。<br>例如，字母“A”后面第4个字母是“E”，用“E”代替“A”。</p><h3 id="方法-2"><a href="#方法-2" class="headerlink" title="方法"></a>方法</h3><p>本题目较为简单，基于对AscII表的理解</p><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;password is %c%c%c%c%c&quot;</span>,<span class="string">&#x27;C&#x27;</span>+<span class="number">4</span>,<span class="string">&#x27;h&#x27;</span>+<span class="number">4</span>,<span class="string">&#x27;i&#x27;</span>+<span class="number">4</span>,<span class="string">&#x27;n&#x27;</span>+<span class="number">4</span>,<span class="string">&#x27;a&#x27;</span>+<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-1"><a href="#题目输出-1" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password is ...</span><br></pre></td></tr></table></figure><h2 id="第三章第7题"><a href="#第三章第7题" class="headerlink" title="第三章第7题"></a>第三章第7题</h2><h3 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定圆半径，圆柱高，求圆周长、圆面积、圆球表面积、圆球体积、圆柱体积。</p><h3 id="输入输出样例"><a href="#输入输出样例" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.5，3</span><br></pre></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">圆周长为: l= 9.42</span><br><span class="line">圆面积为: s= 7.07</span><br><span class="line">圆球表面积为: sq= 28.27</span><br><span class="line">圆球体积为: v= 14.14</span><br><span class="line">圆柱体积为: vz= 21.21</span><br><span class="line">注：“圆周长为:”后空7个空格，其余输出按使得字母对其的方式留空格。</span><br><span class="line">就是以每行输出的第一个字母左对齐，等号后按第一个数字左对齐，等号和数字间至少隔一个空格。</span><br></pre></td></tr></table></figure><h3 id="方法-3"><a href="#方法-3" class="headerlink" title="方法"></a>方法</h3><p>本题基于数学问题考察输入输出函数</p><h3 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> r, h;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入圆半径r,圆柱高h:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f,%f&quot;</span>, &amp;r, &amp;h);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆周长为:       l=  %.2f\n&quot;</span>, <span class="number">2</span> * <span class="number">3.1415</span> * r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆面积为:       s=  %.2f\n&quot;</span>, <span class="number">3.1415</span> * r * r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆球表面积为:   sq= %.2f\n&quot;</span>, <span class="number">4</span> * <span class="number">3.1415</span> * r * r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆球体积为:     v= %.2f\n&quot;</span>, <span class="number">4</span> / <span class="number">3.0</span> * <span class="number">3.1415</span> * r * r * r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;圆柱体积为:     vz= %.2f\n&quot;</span>, <span class="number">3.1415</span> * r * r * h);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章第8题"><a href="#第四章第8题" class="headerlink" title="第四章第8题"></a>第四章第8题</h2><h3 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出一百分制成绩，要求输出成绩等级’A’、’B’、’C’、’D’、’E’。90分以上为A，80<del>89分为B，70</del>79分为C，60~69分为D，60分以下为E。</p><h3 id="输入输出样例-1"><a href="#输入输出样例-1" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.0</span><br></pre></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入学生成绩:成绩是 1.0,相应的等级是E</span><br><span class="line">注：输出的成绩占六位，保留小数点后1位。</span><br></pre></td></tr></table></figure><h3 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> score;</span><br><span class="line"><span class="type">char</span> grade;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;score);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入学生成绩:成绩是 %5.1f,&quot;</span>, score); <span class="comment">//注意本题输出要求</span></span><br><span class="line"><span class="keyword">switch</span> ((<span class="type">int</span>)score / <span class="number">10</span>) <span class="comment">//需要将float型的score强制转换为int型以满足/运算的要求</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">9</span>:grade = <span class="string">&#x27;A&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">8</span>:grade = <span class="string">&#x27;B&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">7</span>:grade = <span class="string">&#x27;C&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:grade = <span class="string">&#x27;D&#x27;</span>; <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:grade = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;相应的等级是%c&quot;</span>, grade);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章第8题-1"><a href="#第四章第8题-1" class="headerlink" title="第四章第8题"></a>第四章第8题</h2><h3 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h3><p>给一个不多于5位的正整数，要求：<br>1.求出它是几位数；<br>2.分别输出每一位数字；<br>3.按逆序输出各位数字；</p><h3 id="输入输出样例-2"><a href="#输入输出样例-2" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">20</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">给一个不多于5位的正整数，要求：</span><br><span class="line">1.求出它是几位数；</span><br><span class="line">2.分别输出每一位数字；</span><br><span class="line">3.按逆序输出各位数字；</span><br></pre></td></tr></table></figure><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入一个整数(0-99999):&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> digi = <span class="built_in">log10</span>(n) + <span class="number">1</span>; <span class="comment">//利用log10运算巧妙的求出n的位数digi</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;位数:%d\n&quot;</span>, digi);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> a[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//a数组用于存放每位数字</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> m = n; <span class="comment">//保留输入整数n，m参与后续取余取模操作</span></span><br><span class="line"><span class="keyword">while</span> (m)</span><br><span class="line">&#123;</span><br><span class="line">a[i++] = m % <span class="number">10</span>;</span><br><span class="line">m = m / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//此时a中逆序存储了n的各位数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;每位数字为:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i<span class="number">-1</span>; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">&#123;<span class="comment">//逆序输出a，使得顺序输出每位数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>, a[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;反序数字为:&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (n)</span><br><span class="line">&#123;<span class="comment">//逆序输出n的每位数字</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n % <span class="number">10</span>);</span><br><span class="line">n = n / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第四章第10题"><a href="#第四章第10题" class="headerlink" title="第四章第10题"></a>第四章第10题</h2><h3 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h3><p>业发放的奖金根据利润提成。<br>利润低于或等于100000元的，奖金可提成10%；<br>利润高于100000元，低于200000元时，低于100000元的部分按10%提成，高于100000元的部分，可提成7.5%…超过1000000元的部分按1%提成。<br>从键盘输入当月利润I，求应发奖金总数。</p><h3 id="输入输出样例-3"><a href="#输入输出样例-3" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">160000</span><br></pre></td></tr></table></figure><h4 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入利润i:奖金是:14500.00</span><br></pre></td></tr></table></figure><h3 id="方法-4"><a href="#方法-4" class="headerlink" title="方法"></a>方法</h3><p>本题需要理解清楚题干中各段利润对应的提成百分比</p><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">float</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入利润i:&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(i&lt;=<span class="number">100000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=i*<span class="number">0.1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">100000</span>&amp;&amp;i&lt;=<span class="number">200000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=<span class="number">100000</span>*<span class="number">0.1</span>+(i<span class="number">-100000</span>)*<span class="number">0.075</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">200000</span>&amp;&amp;i&lt;=<span class="number">400000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=<span class="number">100000</span>*<span class="number">0.1</span>+<span class="number">100000</span>*<span class="number">0.075</span>+(i<span class="number">-200000</span>)*<span class="number">0.05</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">400000</span>&amp;&amp;i&lt;=<span class="number">600000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=<span class="number">100000</span>*<span class="number">0.1</span>+<span class="number">100000</span>*<span class="number">0.075</span>+<span class="number">200000</span>*<span class="number">0.05</span>+(i<span class="number">-400000</span>)*<span class="number">0.03</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">600000</span>&amp;&amp;i&lt;=<span class="number">1000000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=<span class="number">100000</span>*<span class="number">0.1</span>+<span class="number">100000</span>*<span class="number">0.075</span>+<span class="number">200000</span>*<span class="number">0.05</span>+<span class="number">200000</span>*<span class="number">0.03</span>+(i<span class="number">-600000</span>)*<span class="number">0.015</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(i&gt;<span class="number">1000000</span>)</span><br><span class="line">&#123;</span><br><span class="line">m=<span class="number">100000</span>*<span class="number">0.1</span>+<span class="number">100000</span>*<span class="number">0.075</span>+<span class="number">200000</span>*<span class="number">0.05</span>+<span class="number">200000</span>*<span class="number">0.03</span>+<span class="number">400000</span>*<span class="number">0.015</span>+(i<span class="number">-1000000</span>)*<span class="number">0.01</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;奖金是:%.2f&quot;</span>,m);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章第11题"><a href="#第四章第11题" class="headerlink" title="第四章第11题"></a>第四章第11题</h2><h3 id="题目描述-7"><a href="#题目描述-7" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入4个整数，要求按由小到大的顺序输出。</p><h3 id="输入输出样例-4"><a href="#输入输出样例-4" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3,4</span><br></pre></td></tr></table></figure><h4 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,3,4</span><br></pre></td></tr></table></figure><h3 id="方法-5"><a href="#方法-5" class="headerlink" title="方法"></a>方法</h3><p>本题将输入的四个数作为数组输入，并采用冒泡排序对其排序</p><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Bubble</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] &gt; a[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> tmp = a[j];</span><br><span class="line">a[j] = a[j + <span class="number">1</span>];</span><br><span class="line">a[j + <span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,&quot;</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bubble(a, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>, a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四周第12题"><a href="#第四周第12题" class="headerlink" title="第四周第12题"></a>第四周第12题</h2><h3 id="题目描述-8"><a href="#题目描述-8" class="headerlink" title="题目描述"></a>题目描述</h3><p>有4个圆塔，如课本图4.17所示，塔高10m。<br>输入一坐标，求该点的建筑高度（塔外为0）。</p><h3 id="输入输出样例-5"><a href="#输入输出样例-5" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.5,0</span><br></pre></td></tr></table></figure><h4 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请输入一个点(x,y):该点高度为0。</span><br></pre></td></tr></table></figure><h3 id="代码-8"><a href="#代码-8" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f,%f&quot;</span>,&amp;x,&amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入一个点(x,y):&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(((x+<span class="number">2</span>)*(x+<span class="number">2</span>)+(y<span class="number">-2</span>)*(y<span class="number">-2</span>))&lt;=<span class="number">1</span>||((x+<span class="number">2</span>)*(x+<span class="number">2</span>)+(y+<span class="number">2</span>)*(y+<span class="number">2</span>))&lt;=<span class="number">1</span>||((x<span class="number">-2</span>)*(x<span class="number">-2</span>)+(y<span class="number">-2</span>)*(y<span class="number">-2</span>))&lt;=<span class="number">1</span>||((x<span class="number">-2</span>)*(x<span class="number">-2</span>)+(y+<span class="number">2</span>)*(y+<span class="number">2</span>))&lt;=<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;该点高度为10&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该点高度为0&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第3题"><a href="#第五周第3题" class="headerlink" title="第五周第3题"></a>第五周第3题</h2><h3 id="题目描述-9"><a href="#题目描述-9" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入两个正整数m和n,求其最大公约数和最小公倍数。</p><h3 id="输入输出样例-6"><a href="#输入输出样例-6" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5,8</span><br></pre></td></tr></table></figure><h4 id="输出-7"><a href="#输出-7" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请输入两个正整数n,m:它们的最大公约数为:1</span><br><span class="line">它们的最小公约数为:40</span><br></pre></td></tr></table></figure><h3 id="方法-6"><a href="#方法-6" class="headerlink" title="方法"></a>方法</h3><p>求最大公约数(gcd)思路：最大公约数一定是[1,min{m,n}]之间的任一值，故初始令gcd=m(或n)，判断m和n能否同时整除gcd，若不能则gcd自减，直到m和n同时整除gcd，且此时为最大公约数。<br>求最小公倍数(lcm)思路：利用公式m*n=gcd*lcm可求得</p><h3 id="代码-9"><a href="#代码-9" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="type">int</span> gcd = n;</span><br><span class="line"><span class="keyword">while</span> (n % gcd || m % gcd)</span><br><span class="line">&#123;</span><br><span class="line">gcd--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入两个正整数n,m:它们的最大公约数为:%d\n&quot;</span>, gcd);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;它们的最小公倍数为:%d&quot;</span>, m * n / gcd);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第4题"><a href="#第五周第4题" class="headerlink" title="第五周第4题"></a>第五周第4题</h2><h3 id="题目描述-10"><a href="#题目描述-10" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一行字符，分别统计出其中英文字母、空格、数字和其他字符的个数。</p><h3 id="输入输出样例-7"><a href="#输入输出样例-7" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-7"><a href="#输入-7" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello 12</span><br></pre></td></tr></table></figure><h4 id="输出-8"><a href="#输出-8" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">英文字母5</span><br><span class="line">空格1</span><br><span class="line">数字3</span><br><span class="line">其他字符1</span><br><span class="line">注意：输入以换行符为结尾，换行符作为其他字符算入统计结果</span><br></pre></td></tr></table></figure><h3 id="方法-7"><a href="#方法-7" class="headerlink" title="方法"></a>方法</h3><p>本题采用边输入边分类的方法，while循环条件为输入限制，循环体内为分类计数。<br>当然也可将输入作为字符型数组，gets输入后for循环内分类统计。</p><h3 id="代码-10"><a href="#代码-10" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>, space = <span class="number">0</span>, word = <span class="number">0</span>, other = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> ((a = getchar()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">space++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;z&#x27;</span> || a &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">word++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">other++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字母%d\n&quot;</span>, word);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;空格%d\n&quot;</span>, space);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数字%d\n&quot;</span>, num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其他字符%d\n&quot;</span>, other);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第5题"><a href="#第五周第5题" class="headerlink" title="第五周第5题"></a>第五周第5题</h2><h3 id="题目描述-11"><a href="#题目描述-11" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入a, n, 求S = a + aa + a…a(n个a)，其中a是个整数。</p><h3 id="输入输出样例-8"><a href="#输入输出样例-8" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-8"><a href="#输入-8" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2,3</span><br></pre></td></tr></table></figure><h4 id="输出-9"><a href="#输出-9" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S = 246</span><br></pre></td></tr></table></figure><h3 id="代码-11"><a href="#代码-11" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, a;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;a, &amp;n);</span><br><span class="line"><span class="type">int</span> a0 = a; <span class="comment">//保留最初的a</span></span><br><span class="line"><span class="type">int</span> sum = a0, i = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> aa = a;</span><br><span class="line"><span class="keyword">while</span> (i&lt;=n<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">aa = a0+aa * <span class="number">10</span>;</span><br><span class="line">sum = sum + aa;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;S=%d&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第6题"><a href="#第五周第6题" class="headerlink" title="第五周第6题"></a>第五周第6题</h2><h3 id="题目描述-12"><a href="#题目描述-12" class="headerlink" title="题目描述"></a>题目描述</h3><p>求S = 1!+ 2!+ 3!+ …10!。</p><h3 id="输出-10"><a href="#输出-10" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S=4037913</span><br></pre></td></tr></table></figure><h3 id="代码-12"><a href="#代码-12" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">1</span>,i=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (i&lt;=<span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = i;</span><br><span class="line">        <span class="type">int</span> t = a;</span><br><span class="line">        <span class="keyword">while</span> (a &gt;= <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            t = t * (a - <span class="number">1</span>);</span><br><span class="line">            a--;</span><br><span class="line">        &#125;</span><br><span class="line">        sum = sum + t;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;S=%d&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第8题"><a href="#第五周第8题" class="headerlink" title="第五周第8题"></a>第五周第8题</h2><h3 id="题目描述-13"><a href="#题目描述-13" class="headerlink" title="题目描述"></a>题目描述</h3><p>输出所有的水仙花数。</p><h3 id="方法-8"><a href="#方法-8" class="headerlink" title="方法"></a>方法</h3><p>for+if结构，for外层扫描，if内层判断，满足水仙花数条件则输出。</p><h3 id="代码-13"><a href="#代码-13" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;parcissus numbers are&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">100</span>; n &lt; <span class="number">1000</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = n % <span class="number">10</span>, b = n / <span class="number">10</span> % <span class="number">10</span>, c = n / <span class="number">100</span>;</span><br><span class="line"><span class="keyword">if</span> (a* a* a + b * b * b + c * c * c == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, n);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-2"><a href="#题目输出-2" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parcissus numbers are xxx xxx xxx xxx</span><br></pre></td></tr></table></figure><h2 id="第五周第9题"><a href="#第五周第9题" class="headerlink" title="第五周第9题"></a>第五周第9题</h2><h3 id="题目描述-14"><a href="#题目描述-14" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个数如果恰好等于它的因子之和，这个数就是完数。求1000之内的所有完数并输出其因子。</p><h3 id="代码-14"><a href="#代码-14" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">88</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//从大到小存放该数的所有因子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> n = <span class="number">6</span>; n &lt;= <span class="number">1000</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>; <span class="comment">//j为计数器，用于记录因子的个数，便于从数组a中输出因子</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n<span class="number">-1</span>; i &gt;=<span class="number">1</span> ; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + i;</span><br><span class="line">a[j++] = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum==n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d ,&quot;</span>,n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Its factors are &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = j - <span class="number">1</span>; k &gt;= <span class="number">1</span>; k--)</span><br><span class="line">&#123;<span class="comment">//从小到大输出该数的所有因子</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,a[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[<span class="number">0</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-3"><a href="#题目输出-3" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6, Its factors are 1, 2, 3</span><br><span class="line">xxx, Its factors are xxx, xxx</span><br></pre></td></tr></table></figure><h2 id="第五周第11题"><a href="#第五周第11题" class="headerlink" title="第五周第11题"></a>第五周第11题</h2><h3 id="题目描述-15"><a href="#题目描述-15" class="headerlink" title="题目描述"></a>题目描述</h3><p>一个球从100m高度自由落下，每次落地反弹回原高度一半，再落地，再反弹。求它10次落地共经过多少米，第10次反弹多高。（保留6位小数）</p><h3 id="方法-9"><a href="#方法-9" class="headerlink" title="方法"></a>方法</h3><p>for循环经历的过程为第i次落地后将反弹的高度height和下一次落地经历的路程length，因此在输出length时应减去2*height</p><h3 id="代码-15"><a href="#代码-15" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HIGH 100</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="type">double</span> length = HIGH, height = HIGH;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">height = height / <span class="number">2</span>;</span><br><span class="line">length = length + <span class="number">2</span> * height;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第10次落地时共经过%.6lf米\n&quot;</span>, length - <span class="number">2</span> * height);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第10次反弹%.6lf米\n&quot;</span>, height);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-4"><a href="#题目输出-4" class="headerlink" title="题目输出"></a>题目输出</h3><p>第10次落地时共经过xxx米<br>第10次反弹xxx米</p><h2 id="第五周第13题"><a href="#第五周第13题" class="headerlink" title="第五周第13题"></a>第五周第13题</h2><h3 id="题目描述-16"><a href="#题目描述-16" class="headerlink" title="题目描述"></a>题目描述</h3><p>用迭代法求x = 根号a。</p><h3 id="输入输出样例-9"><a href="#输入输出样例-9" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-9"><a href="#输入-9" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输出-11"><a href="#输出-11" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">enter a positive number : The square root of 2.00 is 1.41421</span><br><span class="line">（注：a的输出占5位，保留小数点后两位，结果x的输出占8位，保留小数点后5位）</span><br></pre></td></tr></table></figure><h3 id="代码-16"><a href="#代码-16" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> a;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;enter a positive number:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;a);</span><br><span class="line"><span class="type">float</span> x0 = a / <span class="number">2</span>;</span><br><span class="line"><span class="type">float</span> x1 = (x0 + a / x0) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">fabs</span>(x0 - x1) &gt;= <span class="number">1e-5</span>)</span><br><span class="line">&#123;<span class="comment">//fabs为math.h头文件中的绝对值函数</span></span><br><span class="line">x0 = x1;</span><br><span class="line">x1 = (x0 + a / x0) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The square root of %5.2f is %8.5f&quot;</span>, a, x1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五周第16题"><a href="#第五周第16题" class="headerlink" title="第五周第16题"></a>第五周第16题</h2><h3 id="题目描述-17"><a href="#题目描述-17" class="headerlink" title="题目描述"></a>题目描述</h3><p>输出以下图案,图案参照课本5.16      </p><h3 id="输出-12"><a href="#输出-12" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br><span class="line"> *****</span><br><span class="line">  ***</span><br><span class="line">   *</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="方法-10"><a href="#方法-10" class="headerlink" title="方法"></a>方法</h3><p>将图案以第四行为分界线分成上下两部分，各部分通过找规律得到’*’和’ ‘数的关系</p><h3 id="代码-17"><a href="#代码-17" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span>  (i = <span class="number">0</span>; i &lt;=<span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">2</span>-i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>;k &lt;= <span class="number">2</span> * i; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>); </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt;= <span class="number">4</span><span class="number">-2</span>*i; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六周第第6题"><a href="#第六周第第6题" class="headerlink" title="第六周第第6题"></a>第六周第第6题</h2><h3 id="题目描述-18"><a href="#题目描述-18" class="headerlink" title="题目描述"></a>题目描述</h3><p>输出杨辉三角（要求输出10行）。</p><h3 id="输出-13"><a href="#输出-13" class="headerlink" title="输出"></a>输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1 1</span><br><span class="line">1 2 1</span><br><span class="line">1 3 3 1</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="代码-18"><a href="#代码-18" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 10</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[N][N] = &#123; <span class="number">0</span> &#125;; <span class="comment">//将杨辉三角当作二维数组来处理</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">&#123;<span class="comment">//杨辉三角中每行开头和对角线均为1</span></span><br><span class="line">a[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">a[i][i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; i++)</span><br><span class="line">&#123;<span class="comment">//从第三行开始，除行首和行尾外中间的数值由左上角和正上方数字作和得到(相对位置遵从示例)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j] + a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">&#123;<span class="comment">//二维数组双重for循环输出</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六周第8题"><a href="#第六周第8题" class="headerlink" title="第六周第8题"></a>第六周第8题</h2><h3 id="题目描述-19"><a href="#题目描述-19" class="headerlink" title="题目描述"></a>题目描述</h3><p>找出一个3 * 3的二维数组中的鞍点，即该位置上的元素在该行上最大，在该列上最小。</p><h3 id="输入输出样例-10"><a href="#输入输出样例-10" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-10"><a href="#输入-10" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 15 5 4 9 6 6 12 8</span><br></pre></td></tr></table></figure><h4 id="输出-14"><a href="#输出-14" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1, 1, 9</span><br><span class="line">若无鞍点，输出：</span><br><span class="line">not exist</span><br><span class="line">注：输出的前两个数字为鞍点所在的行和列，第三个数字为鞍点的值</span><br></pre></td></tr></table></figure><h3 id="代码-19"><a href="#代码-19" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;<span class="comment">//二维数组的输入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一次for循环中做了两件事：首先找到该行中的最大元，之后判断所属列中是否为最小元：若是，则输出；否则进入下一次循环，若循环结束仍未找到，则输出not exist</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//找到第i行中的最大元</span></span><br><span class="line"><span class="type">int</span> max = a[i][<span class="number">0</span>]; <span class="comment">//初始化max值为第i行行首元素值</span></span><br><span class="line"><span class="type">int</span> maxrank = <span class="number">0</span>; <span class="comment">//此时max坐标为（i，0）</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt; max)</span><br><span class="line">&#123;<span class="comment">//更新参数</span></span><br><span class="line">max = a[i][j];</span><br><span class="line">maxrank = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断是否为所属列的最小元</span></span><br><span class="line"><span class="type">int</span> min = a[i][maxrank];</span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>; <span class="comment">//用于判断是否为最小元，flag=0时表明其不是最小元</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">3</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[k][maxrank]&lt;min)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, i, maxrank, a[i][maxrank]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span> &amp;&amp; flag == <span class="number">0</span>)</span><br><span class="line">&#123;<span class="comment">//此时表明未找到该鞍点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;not exist&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六周第9题"><a href="#第六周第9题" class="headerlink" title="第六周第9题"></a>第六周第9题</h2><h3 id="题目描述-20"><a href="#题目描述-20" class="headerlink" title="题目描述"></a>题目描述</h3><p>有15个数按由小到大顺序存放在一个数组中，输入一个数，要求用折半查找法找出该数是数组中第几个元素的值。</p><h3 id="输入输出样例-11"><a href="#输入输出样例-11" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-11"><a href="#输入-11" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 3</span><br><span class="line">（前15个数字为数组，最后一个为要找的数）</span><br></pre></td></tr></table></figure><h4 id="输出-15"><a href="#输出-15" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="方法-11"><a href="#方法-11" class="headerlink" title="方法"></a>方法</h3><p>折半查找法的运用</p><h3 id="代码-20"><a href="#代码-20" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> num = a[<span class="number">15</span>];</span><br><span class="line"><span class="type">int</span> low = <span class="number">0</span>, high = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">while</span> (low &lt;= high)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (num == a[mid])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, mid + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (num &lt; a[mid])</span><br><span class="line">&#123;</span><br><span class="line">high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六周第10题"><a href="#第六周第10题" class="headerlink" title="第六周第10题"></a>第六周第10题</h2><h3 id="题目描述-21"><a href="#题目描述-21" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一篇文章，共有2行文字，每行10个字符。要求分别统计出其中英文大写字母、小写字母、数字、空格以及其他字符的个数。</p><h3 id="方法-12"><a href="#方法-12" class="headerlink" title="方法"></a>方法</h3><p>采用边输入边分类统计的方法，gets函数可以允许空格的输入</p><h3 id="代码-21"><a href="#代码-21" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> a[<span class="number">2</span>][<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> big = <span class="number">0</span>, small = <span class="number">0</span>, num = <span class="number">0</span>, space = <span class="number">0</span>, other = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; a[i][j] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a[i][j] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">space++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a[i][j] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; a[i][j] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">small++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (a[i][j] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; a[i][j] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">big++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">other++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;大写字母个数%d\n&quot;</span>, big);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;小写字母个数%d\n&quot;</span>, big);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数字个数%d\n&quot;</span>, num);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;空格个数%d\n&quot;</span>, space);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其他字符个数%d&quot;</span>, other);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-5"><a href="#题目输出-5" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">大写字母个数X</span><br><span class="line">小写字母个数X</span><br><span class="line">数字个数X</span><br><span class="line">空格个数X</span><br><span class="line">其他字符个数X</span><br></pre></td></tr></table></figure><h2 id="第六周第12题"><a href="#第六周第12题" class="headerlink" title="第六周第12题"></a>第六周第12题</h2><h3 id="题目描述-22"><a href="#题目描述-22" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一行电文，按下面规律译成密码，第1个字母变成第26个字母，第i个字母变成第（26-i+1）个字母，非字母字符不变，编程序将密码译回原文，并输出密码和原文。</p><h3 id="代码-22"><a href="#代码-22" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> in[<span class="number">88</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//密码</span></span><br><span class="line"><span class="type">char</span> tran[<span class="number">88</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//原文</span></span><br><span class="line">gets(in);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (in[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (in[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; in[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">tran[i] = <span class="string">&#x27;a&#x27;</span> + <span class="string">&#x27;z&#x27;</span> - in[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (in[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; in[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">tran[i] = <span class="string">&#x27;A&#x27;</span> + <span class="string">&#x27;Z&#x27;</span> - in[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">tran[i] = in[i];</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;密码为%s\n&quot;</span>, in);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;原文为%s&quot;</span>, tran);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-6"><a href="#题目输出-6" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">密码为</span><br><span class="line">原文为</span><br></pre></td></tr></table></figure><h2 id="第六周第13题"><a href="#第六周第13题" class="headerlink" title="第六周第13题"></a>第六周第13题</h2><h3 id="题目描述-23"><a href="#题目描述-23" class="headerlink" title="题目描述"></a>题目描述</h3><p>编一程序，将两个字符串连接起来，不要用strcat函数</p><h3 id="代码-23"><a href="#代码-23" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> in1[<span class="number">40</span>], in2[<span class="number">40</span>], newstr[<span class="number">88</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string1:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, in1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string2:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, in2);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (in1[i++]); <span class="comment">//得到in1的长度为i+1</span></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (in2[j++]); <span class="comment">//得到in2的长度为j+1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; i<span class="number">-1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">newstr[k] = in1[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i - <span class="number">1</span>; k &lt; j + i - <span class="number">2</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">newstr[k] = in2[k - i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The new string is:%s&quot;</span>, newstr);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-7"><a href="#题目输出-7" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string1 : ”</span><br><span class="line">用户在其后输入yui后输出“input string2 : ”</span><br><span class="line">用户在其后输入dh后隔行输出“The new string is : yuidh”</span><br></pre></td></tr></table></figure><h2 id="第六周第14题"><a href="#第六周第14题" class="headerlink" title="第六周第14题"></a>第六周第14题</h2><h3 id="题目描述-24"><a href="#题目描述-24" class="headerlink" title="题目描述"></a>题目描述</h3><p>编一个程序，将两个字符串s1和s2比较，若s1&gt;s2，输出一个正数；若s1=s2，输出0；若s1</p><h3 id="代码-24"><a href="#代码-24" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i, resu;</span><br><span class="line"><span class="type">char</span> s1[<span class="number">100</span>], s2[<span class="number">200</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string1:&quot;</span>);</span><br><span class="line">gets(s1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\ninput string2:&quot;</span>);</span><br><span class="line">gets(s2);</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s1[i] == s2[i])</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s1[i] == <span class="string">&#x27;\0&#x27;</span> &amp;&amp; s2[i] == <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">resu = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">resu = s1[i] - s2[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nresult:%d.&quot;</span>, resu);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-8"><a href="#题目输出-8" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string1 : ”</span><br><span class="line">用户在其后输入And后隔行输出“input string2 : ”</span><br><span class="line">用户在其后输入Aid后隔行输出“result : 5.”</span><br></pre></td></tr></table></figure><h2 id="第六周第15题"><a href="#第六周第15题" class="headerlink" title="第六周第15题"></a>第六周第15题</h2><h3 id="题目描述-25"><a href="#题目描述-25" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个程序，将字符数组s2中的全部字符复制到字符数组s1中。不用strcpy函数。复制时，’\0’也要复制进去。’\0’后面的字符不复制。</p><h3 id="代码-25"><a href="#代码-25" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> s1[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, s2[<span class="number">200</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input s2:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s2);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s1[i++]);<span class="comment">//i的位置即为&#x27;\0&#x27;的位置</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s2[j++]);<span class="comment">//j同理i</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i<span class="number">-1</span>; k &lt; i+j<span class="number">-1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">s1[k] = s2[k - i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;s1:%s\n&quot;</span>, s1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-9"><a href="#题目输出-9" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input s2 : ”</span><br><span class="line">用户在其后输入yiuh后输出“s1 : yiuh”</span><br></pre></td></tr></table></figure><h2 id="第七周第11题"><a href="#第七周第11题" class="headerlink" title="第七周第11题"></a>第七周第11题</h2><h3 id="题目描述-26"><a href="#题目描述-26" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个函数，用“起泡法”对输入的10个字符按从小到大的顺序排列。</p><h3 id="代码-26"><a href="#代码-26" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">char</span> in[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//冒泡排序</span></span><br><span class="line"><span class="type">int</span> i,j; </span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; n-i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (in[j] &lt; in[j - <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> tmp = in[j];</span><br><span class="line">in[j] = in[j - <span class="number">1</span>];</span><br><span class="line">in[j - <span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string:\n&quot;</span>);</span><br><span class="line"><span class="type">char</span> instr[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, instr);</span><br><span class="line"><span class="type">int</span> n = <span class="built_in">strlen</span>(instr);</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;string too long,input again!input string:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, instr);</span><br><span class="line">n = <span class="built_in">strlen</span>(instr);</span><br><span class="line">&#125;</span><br><span class="line">sort(instr, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;string sorted:\n%s&quot;</span>, instr);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-10"><a href="#题目输出-10" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string : ”</span><br><span class="line">用户换行输入badhiopqlr后换行输出</span><br><span class="line">“string sorted :</span><br><span class="line">abdhilopqr”</span><br><span class="line">如果用户换行输入eyiwoqssosq则换行输出“string too long, input again!input string : ”</span><br><span class="line">之后用户换行输入badhiopqlr后换行输出</span><br><span class="line">“string sorted :</span><br><span class="line">abdhilopqr”</span><br></pre></td></tr></table></figure><h2 id="第七周第13题"><a href="#第七周第13题" class="headerlink" title="第七周第13题"></a>第七周第13题</h2><h3 id="题目描述-27"><a href="#题目描述-27" class="headerlink" title="题目描述"></a>题目描述</h3><p>用递归方法求n阶勒让德多项式的值，递归公式为<br>当n = 0时Pn(x) = 1<br>当n = 1时Pn(x) = x<br>当n≥1时Pn(x) = ((2n - 1)×x - p(n - 1)(x) - (n - 1)×P(n - 2)(x)) / n<br>其中p(n - 1), P(n - 2)是符号</p><h3 id="代码-27"><a href="#代码-27" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">Legendre</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n &gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> ((<span class="number">2</span> * n - <span class="number">1</span>) * x - Legendre(n - <span class="number">1</span>, x) - (n - <span class="number">1</span>) * Legendre(n - <span class="number">2</span>, x)) / n;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input n &amp; x:&quot;</span>);</span><br><span class="line"><span class="type">int</span> n, x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d&quot;</span>, &amp;n, &amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;n=%d,x=%d\nP%d(%d)=%6.2f&quot;</span>, n, x, n, x, Legendre(n, x));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-11"><a href="#题目输出-11" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先输出“input n &amp; x:”</span><br><span class="line">用户在其后输入1，2后输出“n = 1, x = 2</span><br><span class="line">P1(2) = 2.00”</span><br><span class="line">注：Pn(x)共显示6位，保留小数点后两位</span><br></pre></td></tr></table></figure><h2 id="第七周第14题"><a href="#第七周第14题" class="headerlink" title="第七周第14题"></a>第七周第14题</h2><h3 id="题目描述-28"><a href="#题目描述-28" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入10个学生5门成绩，分别用函数实现以下功能;<br>1.计算每个学生的平均分；<br>2.计算每门课的平均分；<br>3.找出所有50个分数中最高的分数所对应的学生和课程；<br>4.计算平均分方差：<br>σ = 1 / n(Σxi ^ 2) - ((Σxi) / n) ^ 2<br>其中，xi为某一学生的平均分。</p><h3 id="代码-28"><a href="#代码-28" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">float</span> score[<span class="number">5</span>];</span><br><span class="line">&#125;Student;</span><br><span class="line"><span class="type">float</span> <span class="title function_">stuaverage</span><span class="params">(Student student[],<span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//计算每个学生的成绩平均值</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += student[n].score[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">5.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">task1average</span><span class="params">(Student student[])</span></span><br><span class="line">&#123;<span class="comment">//计算第一门学科的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + student[i].score[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">10.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">task2average</span><span class="params">(Student student[])</span></span><br><span class="line">&#123;<span class="comment">//计算第二门学科的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + student[i].score[<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">10.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">task3average</span><span class="params">(Student student[])</span></span><br><span class="line">&#123;<span class="comment">//计算第三门学科的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + student[i].score[<span class="number">2</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">10.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">task4average</span><span class="params">(Student student[])</span></span><br><span class="line">&#123;<span class="comment">//计算第四门学科的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + student[i].score[<span class="number">3</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">10.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">task5average</span><span class="params">(Student student[])</span></span><br><span class="line">&#123;<span class="comment">//计算第五门学科的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + student[i].score[<span class="number">4</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">10.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Search1</span><span class="params">(Student student[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//找到每个学生的最高成绩以及学科，并返回学科编号</span></span><br><span class="line"><span class="type">float</span> highest = student[n].score[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (student[n].score[k]&gt;highest)</span><br><span class="line">&#123;</span><br><span class="line">highest = student[n].score[k];</span><br><span class="line">i = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Search2</span><span class="params">(Student student[], <span class="type">float</span> a[][<span class="number">2</span>])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//用一个二维数组将10个学生最高成绩及对应学科录入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i][<span class="number">0</span>] = student[i].score[Search1(student, i)];</span><br><span class="line">a[i][<span class="number">1</span>] = Search1(student, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接下来从10位同学各自最高分中找最高分，并返回对应科目编号</span></span><br><span class="line"><span class="type">float</span> highest = a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[k][<span class="number">0</span>] &gt; highest)</span><br><span class="line">&#123;</span><br><span class="line">highest = a[k][<span class="number">0</span>];</span><br><span class="line">i = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Student student[<span class="number">10</span>];</span><br><span class="line"><span class="comment">//录入学生成绩</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input score of student 1:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;student[<span class="number">0</span>].score[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input score of student %d:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;student[i].score[k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input score of student10:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;student[<span class="number">9</span>].score[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//以表格的形式输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nNO.     cour1   cour2   cour3   cour4   cour5   aver\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nNO %d&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%8.2f&quot;</span>, student[i].score[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%8.2f\n&quot;</span>, stuaverage(student, i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nNO10&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%8.2f&quot;</span>, student[<span class="number">9</span>].score[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%8.2f\n&quot;</span>, stuaverage(student, <span class="number">9</span>));</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\naverage:%8.2f%8.2f%8.2f%8.2f%8.2f&quot;</span>, task1average(student), task2average(student), task3average(student), task4average(student), task5average(student));</span><br><span class="line"><span class="type">float</span> a[<span class="number">10</span>][<span class="number">2</span>];</span><br><span class="line">Search2(student,a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nhighest:%8.2f NO. %d course %d&quot;</span>, a[Search2(student, a)][<span class="number">0</span>], (<span class="type">int</span>)Search2(student, a)+<span class="number">1</span>, (<span class="type">int</span>)a[Search2(student, a)][<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line"><span class="type">float</span> sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum1 = sum1 + (stuaverage(student, i))*(stuaverage(student, i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum2 = sum2 + stuaverage(student, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nvariance%8.2f&quot;</span>, (sum1 / <span class="number">10.0</span>) - (sum2 / <span class="number">10.0</span>) * (sum2 / <span class="number">10.0</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-12"><a href="#题目输出-12" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">输出“input score of student 1:”</span><br><span class="line">用户输入87 88 92 67 78后换行输出“input score of student 2 : ”</span><br><span class="line">用户在其后输入88 86 87 98 90后换行输出“input score of student 3 : ”</span><br><span class="line">用户在其后输入76 75 65 65 78后换行输出“input score of student 4 : ”</span><br><span class="line">用户在其后输入67 87 60 90 67后换行输出“input score of student 5 : ”</span><br><span class="line">用户在其后输入77 78 85 64 56后换行输出“input score of student 6 : ” ，</span><br><span class="line">用户在其后输入76 89 94 65 76后换行输出“input score of student 7 : ”</span><br><span class="line">用户在其后输入78 75 64 67 77后换行输出“input score of student 8 : ”</span><br><span class="line">用户在其后输入77 76 56 87 85后换行输出“input score of student 9 : ” ，换行</span><br><span class="line">用户在其后输入84 67 78 76 89后换行输出“input score of student10 : ”</span><br><span class="line">用户在其后输入86 75 64 69 90后换行输出“</span><br><span class="line"></span><br><span class="line">NO.cour1 cour2 cour3 cour4 cour5 aver</span><br><span class="line"></span><br><span class="line">NO 1 87.00 88.00 92.00 67.00 78.00 82.40</span><br><span class="line"></span><br><span class="line">NO 2 88.00 86.00 87.00 98.00 90.00 89.80</span><br><span class="line"></span><br><span class="line">NO 3 76.00 75.00 65.00 65.00 78.00 71.80</span><br><span class="line"></span><br><span class="line">NO 4 67.00 87.00 60.00 90.00 67.00 74.20</span><br><span class="line"></span><br><span class="line">NO 5 77.00 78.00 85.00 64.00 56.00 72.00</span><br><span class="line"></span><br><span class="line">NO 6 76.00 89.00 94.00 65.00 76.00 80.00</span><br><span class="line"></span><br><span class="line">NO 7 78.00 75.00 64.00 67.00 77.00 72.20</span><br><span class="line"></span><br><span class="line">NO 8 77.00 76.00 56.00 87.00 85.00 76.20</span><br><span class="line"></span><br><span class="line">NO 9 84.00 67.00 78.00 76.00 89.00 78.80</span><br><span class="line"></span><br><span class="line">NO10 86.00 75.00 64.00 69.00 90.00 76.80</span><br><span class="line"></span><br><span class="line">average: 79.60 79.60 74.50 74.80 78.60</span><br><span class="line">highest : 98.00 NO. 2 course 4</span><br><span class="line">variance 28.71</span><br><span class="line">注：</span><br><span class="line">(1)表头NO.那一行，NO.后五个空格，其他空三格</span><br><span class="line">(2)NO后的数字设为两位，所有成绩为8位并保留小数点后两位</span><br><span class="line">(3)显示最高成绩那一行，各参数之间空一格，NO.和course后的数字占两位</span><br></pre></td></tr></table></figure><h2 id="第七周第15题"><a href="#第七周第15题" class="headerlink" title="第七周第15题"></a>第七周第15题</h2><h3 id="题目描述-29"><a href="#题目描述-29" class="headerlink" title="题目描述"></a>题目描述</h3><p>写几个函数：<br>①输入10个职工的姓名和职工号；<br>②按职工号由小到大顺序排序，宗明顺序也随之调整；<br>③要求输入一个职工号，用折半查找法找出改职工的姓名，从主函数输入要查找的职工号，输出该职工姓名。</p><h3 id="方法-13"><a href="#方法-13" class="headerlink" title="方法"></a>方法</h3><p>本题综合性较强，在结构体中使用了冒泡排序和折半查找对数据进行处理</p><h3 id="代码-29"><a href="#代码-29" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">worker</span></span></span><br><span class="line"><span class="class">&#123;</span><span class="comment">//定义Worker结构体</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line">&#125;Worker;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Bubble</span><span class="params">(Worker worker[])</span></span><br><span class="line">&#123;<span class="comment">//冒泡排序调整职工顺序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>-i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (worker[j + <span class="number">1</span>].num &lt; worker[j].num)</span><br><span class="line">&#123;</span><br><span class="line">Worker tmp = worker[j];</span><br><span class="line">worker[j] = worker[j + <span class="number">1</span>];</span><br><span class="line">worker[j + <span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Search</span><span class="params">(Worker worker[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//折半查找</span></span><br><span class="line"><span class="type">int</span> low = <span class="number">0</span>, high = <span class="number">9</span>;</span><br><span class="line"><span class="keyword">while</span> (low &lt;= high)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = (low + high) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (worker[mid].num == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (worker[mid].num &gt; n)</span><br><span class="line">&#123;</span><br><span class="line">high = mid - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">low = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Worker worker[<span class="number">10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input NO. and name:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>, &amp;worker[<span class="number">0</span>].num, worker[<span class="number">0</span>].name);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input NO. and name:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s&quot;</span>, &amp;worker[i].num, worker[i].name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Bubble(worker);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nresult:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%5d%10s&quot;</span>, worker[k].num, worker[k].name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\ninput number to look for:&quot;</span>);</span><br><span class="line"><span class="type">int</span> searchnum;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;searchnum);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nNO. %d , his name is %s.&quot;</span>, worker[Search(worker, searchnum)].num, worker[Search(worker, searchnum)].name);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-13"><a href="#题目输出-13" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">先输出“input NO. and name:”换行</span><br><span class="line">用户输入3 Li后输出“input NO. and name:”</span><br><span class="line">如此类推输入十次后点击回车后空一行换行输出“</span><br><span class="line">result:</span><br><span class="line">1 Zhang</span><br><span class="line">2 Wang</span><br><span class="line">3 Li</span><br><span class="line">6 Zhao</span><br><span class="line">7 Qian</span><br><span class="line">8 Sun</span><br><span class="line">12 Jiang</span><br><span class="line">23 Shen</span><br><span class="line">26 Han</span><br><span class="line">27 Yang</span><br><span class="line">input number to look for:”，换行</span><br><span class="line">用户在其后输入3后换行输出“NO. 3 , his name is Li.</span><br><span class="line">注：result后的输出结果，职工号占5位，姓占10位</span><br></pre></td></tr></table></figure><h2 id="第七周第16题"><a href="#第七周第16题" class="headerlink" title="第七周第16题"></a>第七周第16题</h2><h3 id="题目描述-30"><a href="#题目描述-30" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个函数，输入一个十六进制数，输出相应的十进制数。</p><h3 id="代码-30"><a href="#代码-30" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">Conversion</span><span class="params">(<span class="type">char</span> str[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;<span class="comment">//转换函数的思路为“边转换边计算”，即对16进制数先逐位转换为10进制数字，同时与其位数匹配</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, sum = <span class="number">0</span>;;</span><br><span class="line"><span class="keyword">while</span> (str[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//转换为10进制数字</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num = str[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num = str[i] - <span class="string">&#x27;a&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>  <span class="keyword">if</span> (str[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; str[i] &lt;= <span class="string">&#x27;F&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">num = str[i] - <span class="string">&#x27;A&#x27;</span> + <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//与位数匹配</span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">num = num * <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += num;</span><br><span class="line">i++;</span><br><span class="line">len--; <span class="comment">//每转换完一位，需更新len，以保证后续位数匹配正常工作</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input a HEX number:&quot;</span>);</span><br><span class="line"><span class="type">char</span> str[<span class="number">30</span>];</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(str);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;decimal number %d&quot;</span>, Conversion(str, len));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-14"><a href="#题目输出-14" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input a HEX number:”</span><br><span class="line">用户在其后输入10后输出“decimal number 16</span><br></pre></td></tr></table></figure><h2 id="第七周第18题"><a href="#第七周第18题" class="headerlink" title="第七周第18题"></a>第七周第18题</h2><h3 id="题目描述-31"><a href="#题目描述-31" class="headerlink" title="题目描述"></a>题目描述</h3><p>给出年、月、日，计算该日是该年的第几天。</p><h3 id="代码-31"><a href="#代码-31" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsLeapYear</span><span class="params">(<span class="type">int</span> year)</span></span><br><span class="line">&#123;<span class="comment">//判断闰年的条件：闰年是4的倍数但不是100的倍数，或者是400的倍数</span></span><br><span class="line"><span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> year, month, day, days = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input date(year,month,day):&quot;</span>);</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;year, &amp;month, &amp;day);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> day_tab[<span class="number">13</span>] = &#123; <span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; month; i++)</span><br><span class="line">&#123;</span><br><span class="line">days += day_tab[i];</span><br><span class="line">&#125;</span><br><span class="line">days += day;</span><br><span class="line"><span class="keyword">if</span> (IsLeapYear(year) &amp;&amp; month &gt;= <span class="number">3</span>)</span><br><span class="line">&#123;<span class="comment">//注意判断闰年时应当在month&gt;=3的时候进行，因为若month==1或month==2，是否为闰年无影响！</span></span><br><span class="line">days = days + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d/%d/%d is the %dth day in this year.&quot;</span>, year, month, day, days);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-15"><a href="#题目输出-15" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input date(year,month,day):”</span><br><span class="line">用户在其后输入2008,8,8后换行输出“2008/8/8 is the 221th day in this year.”</span><br></pre></td></tr></table></figure><h2 id="第八周第1题"><a href="#第八周第1题" class="headerlink" title="第八周第1题"></a>第八周第1题</h2><h3 id="题目描述-32"><a href="#题目描述-32" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入3个整数，按从小到大的顺序输出。</p><h3 id="代码-32"><a href="#代码-32" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">swap</span><span class="params">(<span class="type">int</span>* p1, <span class="type">int</span>* p2)</span></span><br><span class="line">&#123;<span class="comment">//swap函数中传入的是p1和p2指针，亦即需要交换的两个数的地址。而函数内部的交换则是将指针指向的变量值进行了交换。</span></span><br><span class="line"><span class="type">int</span> p;</span><br><span class="line">p = *p1; </span><br><span class="line">*p1 = *p2; </span><br><span class="line">*p2 = p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input three integer n1,n2,n3:&quot;</span>);</span><br><span class="line"><span class="type">int</span> n1, n2, n3;</span><br><span class="line"><span class="type">int</span>* p1 = &amp;n1, * p2 = &amp;n2, * p3 = &amp;n3;</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;n1, &amp;n2, &amp;n3);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (n1 &gt; n2)</span><br><span class="line">swap(p1, p2);</span><br><span class="line"><span class="keyword">if</span> (n1 &gt; n3)</span><br><span class="line">swap(p1, p3);</span><br><span class="line"><span class="keyword">if</span> (n2 &gt; n3)</span><br><span class="line">swap(p2, p3);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now,the order is:%d,%d,%d\n&quot;</span>, *p1, *p2, *p3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目输出-16"><a href="#题目输出-16" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">先输出“input three integer n1,n2,n3:”</span><br><span class="line">用户在其后输入34,21,25后换行输出“Now,the order is:21,25,34”</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="第八周第3题"><a href="#第八周第3题" class="headerlink" title="第八周第3题"></a>第八周第3题</h2><h3 id="题目描述-33"><a href="#题目描述-33" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入10个整数，将其中最小的数与第一个数对换，把最大的数与最后一个数对换。<br>写3个函数：①输入10个数；②进行处理；③输出10个数。</p><h3 id="代码-33"><a href="#代码-33" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input 10 numbers:&quot;</span>);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;inputnum[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exchange</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始化min和max指针，均指向inputnum数组的首元</span></span><br><span class="line"><span class="type">int</span> *min = inputnum;</span><br><span class="line"><span class="type">int</span> *max = inputnum;</span><br><span class="line"><span class="comment">//寻找inputnum数组中的最小元</span></span><br><span class="line"><span class="type">int</span>* p;</span><br><span class="line"><span class="keyword">for</span> (p = inputnum + <span class="number">1</span>; p &lt; inputnum + <span class="number">10</span>; p++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*min &gt; *p)</span><br><span class="line">&#123;</span><br><span class="line">min = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//寻找inputnum数组中的最大元</span></span><br><span class="line"><span class="type">int</span>* q;</span><br><span class="line"><span class="keyword">for</span> (q = inputnum + <span class="number">1</span>; q &lt; inputnum + <span class="number">10</span>; q++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*max &lt; *q)</span><br><span class="line">&#123;</span><br><span class="line">max = q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//交换:注意此时max和min均指向的是数组inputnum中最大值和最小值对应的地址，因此为了将inputnum数组值交换，需要应用“*”运算将max和min指向的值取出。</span></span><br><span class="line"><span class="type">int</span> tmp1 = *min;</span><br><span class="line">*min = inputnum[<span class="number">0</span>];</span><br><span class="line">inputnum[<span class="number">0</span>] = tmp1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tmp2 = *max;</span><br><span class="line">*max = inputnum[<span class="number">9</span>];</span><br><span class="line">inputnum[<span class="number">9</span>] = tmp2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now,they are:&quot;</span>);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,inputnum[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, inputnum[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> inputnum[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">input(inputnum);</span><br><span class="line">exchange(inputnum);</span><br><span class="line">output(inputnum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-17"><a href="#题目输出-17" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input 10 numbers:”</span><br><span class="line">用户在其后输入:32 24 56 78 1 98 36 44 29 6后输出“Now,they are: 1 24 56 78 32 6 36 44 29 98”</span><br></pre></td></tr></table></figure><h2 id="第八周第4题"><a href="#第八周第4题" class="headerlink" title="第八周第4题"></a>第八周第4题</h2><h3 id="题目描述-34"><a href="#题目描述-34" class="headerlink" title="题目描述"></a>题目描述</h3><p>有n个数，使前面各数顺序向后移m个位置，最后m个数变成最前面m个数，见图8.43.写一函数实现以上功能，在主函数中输入n个整数和输出调整后的n个数。</p><h3 id="代码-34"><a href="#代码-34" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">move</span><span class="params">(<span class="type">int</span>* num,<span class="type">int</span> n,<span class="type">int</span> m)</span></span><br><span class="line">&#123;<span class="comment">//数组内部移动问题</span></span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;<span class="comment">//外层for循环控制移动次数</span></span><br><span class="line"><span class="type">int</span> tmp = num[n - <span class="number">1</span>];<span class="comment">//将此时最后一位元素临时保存</span></span><br><span class="line"><span class="keyword">for</span> (j = n<span class="number">-1</span>; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">&#123;<span class="comment">//内层for循环控制每一次的移动</span></span><br><span class="line">num[j] = num[j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">num[<span class="number">0</span>] = tmp;<span class="comment">//将平移前的最后一位元素放于首位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;how many numbers?&quot;</span>);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input %d numbers:&quot;</span>,n);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>* num = (<span class="type">int</span>*)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nhow many place you want move?&quot;</span>);</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now,they are:\n&quot;</span>);</span><br><span class="line">move(num, n, m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, num[<span class="number">0</span>]);</span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  %d&quot;</span>, num[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//交换:注意此时max和min均指向的是数组inputnum中最大值和最小值对应的地址，因此为了将inputnum数组值交换，需要应用“*”运算将max和min指向的值取出。</span></span><br><span class="line"><span class="type">int</span> tmp1 = *min;</span><br><span class="line">*min = inputnum[<span class="number">0</span>];</span><br><span class="line">inputnum[<span class="number">0</span>] = tmp1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tmp2 = *max;</span><br><span class="line">*max = inputnum[<span class="number">9</span>];</span><br><span class="line">inputnum[<span class="number">9</span>] = tmp2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now,they are:&quot;</span>);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,inputnum[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, inputnum[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> inputnum[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">input(inputnum);</span><br><span class="line">exchange(inputnum);</span><br><span class="line">output(inputnum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-18"><a href="#题目输出-18" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">先输出“how many numbers?”</span><br><span class="line">用户在其后输入8后输出“input 8 numbers:”</span><br><span class="line">用户换行输入12 43 65 67 8 2 7 11后换行输出“how many place you want move?”</span><br><span class="line">用户在其后输入4后换行输出“Now,they are:</span><br><span class="line">8 2 7 11 12 43 65 67”(每个数字之间空两格)</span><br></pre></td></tr></table></figure><h2 id="第八周第5题"><a href="#第八周第5题" class="headerlink" title="第八周第5题"></a>第八周第5题</h2><h3 id="题目描述-35"><a href="#题目描述-35" class="headerlink" title="题目描述"></a>题目描述</h3><p>有n个人围成一圈，顺序排号。从第1个人开始报数（从1到3报数），凡报到3的人退出圈子，问最后留下的是原来第几号的那位。</p><h3 id="代码-35"><a href="#代码-35" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">hoop</span><span class="params">(<span class="type">int</span>* stu, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//给所有学生编号</span></span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">stu[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> y = <span class="number">1</span>;<span class="comment">//y为出圈人数</span></span><br><span class="line"><span class="type">int</span> x = <span class="number">-1</span>;<span class="comment">//n为报数学生在数组中的位置，初始化为-1便于while循环中进行更新</span></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">3</span>;)</span><br><span class="line">&#123;</span><br><span class="line">x = (x + <span class="number">1</span>) % n;<span class="comment">//成环想到取余数</span></span><br><span class="line"><span class="keyword">if</span> (stu[x] != <span class="number">0</span>)</span><br><span class="line">&#123;<span class="comment">//若该位置的人还在圈中，则参与报数</span></span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (y == n)</span><br><span class="line">&#123;<span class="comment">//此时表明圈内仅剩1人（因为y从1开始计数而非0开始）</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//越过后面的两句，保护了仅剩的stu[x]</span></span><br><span class="line">&#125;</span><br><span class="line">stu[x] = <span class="number">0</span>;</span><br><span class="line">y++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> stu[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input number of person: n=&quot;</span>);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* stu = (<span class="type">int</span>*)<span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The last one is NO.%d&quot;</span>, hoop(stu, n));</span><br><span class="line"><span class="built_in">free</span>(stu);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-19"><a href="#题目输出-19" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input number of person: n=”</span><br><span class="line">用户在其后输入8后换行输出“The last one is NO.7</span><br></pre></td></tr></table></figure><h2 id="第八周第6题"><a href="#第八周第6题" class="headerlink" title="第八周第6题"></a>第八周第6题</h2><h3 id="题目描述-36"><a href="#题目描述-36" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个函数，求一个字符串的长度。在main函数中输入字符串，并输出其长度。</p><h3 id="代码-36"><a href="#代码-36" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">length</span><span class="params">(<span class="type">char</span> instr[])</span></span><br><span class="line">&#123;<span class="comment">//由于用户在输入字符串后，机器会自动加上&#x27;\0&#x27;，因此，我们只需在非\0的条件下执行while即可 </span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (instr[i]!=<span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string:&quot;</span>);</span><br><span class="line"><span class="type">char</span> instr[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, instr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The length of string is %d.&quot;</span>, length(instr));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-20"><a href="#题目输出-20" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string:”</span><br><span class="line">用户在其后输入China后换行输出“The length of string is 5.”</span><br></pre></td></tr></table></figure><h2 id="第八周第7题"><a href="#第八周第7题" class="headerlink" title="第八周第7题"></a>第八周第7题</h2><h3 id="题目描述-37"><a href="#题目描述-37" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一字符串，包含n个字符。写一函数，将此字符串中从第m个字符开始的全部字符复制成为另一个字符串。</p><h3 id="代码-37"><a href="#代码-37" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">copy</span><span class="params">(<span class="type">char</span>* instr,<span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//copy函数实则是将instr数组的指针从instr[0]指向了要求的n-1的位置!</span></span><br><span class="line"><span class="type">int</span> len = <span class="built_in">strlen</span>(instr);</span><br><span class="line"><span class="keyword">if</span> (n &gt; len)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input error!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">instr = instr + n - <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;result:%s&quot;</span>, instr);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string:&quot;</span>);</span><br><span class="line"><span class="type">char</span> instr[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, instr);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;which character that begin to copy?&quot;</span>);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">copy(instr, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-21"><a href="#题目输出-21" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string:”</span><br><span class="line">用户在其后输入reading_room后换行输出“which character that begin to copy?”</span><br><span class="line">用户在其后输入9后换行输出“result:room</span><br><span class="line">如果用户输入的数字大于字符串的长度则输出“input error!”</span><br></pre></td></tr></table></figure><h2 id="第八周第8题"><a href="#第八周第8题" class="headerlink" title="第八周第8题"></a>第八周第8题</h2><h3 id="题目描述-38"><a href="#题目描述-38" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一行文字，找出其中大写字母、小写字母、空格、数字以及其他字符各有多少。</p><h3 id="代码-38"><a href="#代码-38" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> select[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input string:  &quot;</span>);</span><br><span class="line"><span class="type">char</span> instr[<span class="number">30</span>];</span><br><span class="line">gets(instr);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (instr[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;<span class="comment">//while控制输入</span></span><br><span class="line"><span class="keyword">if</span> (instr[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; instr[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">select[<span class="number">0</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (instr[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; instr[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">select[<span class="number">1</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (instr[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">select[<span class="number">2</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (instr[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; instr[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">select[<span class="number">3</span>]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">select[<span class="number">4</span>]++;</span><br><span class="line">&#125;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;upper case:%d     lower case:%d     space:%d     digit:%d     other:%d&quot;</span>, select[<span class="number">0</span>], select[<span class="number">1</span>], select[<span class="number">2</span>], select[<span class="number">3</span>], select[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-22"><a href="#题目输出-22" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input string: ”冒号后空两格</span><br><span class="line">用户在其后输入Today is 2008/8/8后换行输出“upper case:1 lower case:6 space:2 digit:6 other:2”（各个参数显示后面间隔5个空格）</span><br></pre></td></tr></table></figure><h2 id="第八周第11题"><a href="#第八周第11题" class="headerlink" title="第八周第11题"></a>第八周第11题</h2><h3 id="题目描述-39"><a href="#题目描述-39" class="headerlink" title="题目描述"></a>题目描述</h3><p>在主函数中输入10个等长的字符串。用另一函数对它们排序。然后在主函数输出这10个已排好的字符串。</p><h3 id="输入输出样例-12"><a href="#输入输出样例-12" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-12"><a href="#输入-12" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">as</span><br><span class="line">bs</span><br><span class="line">qw</span><br><span class="line">df</span><br><span class="line">yh</span><br><span class="line">kl</span><br><span class="line">ju</span><br><span class="line">lo</span><br><span class="line">tr</span><br><span class="line">mf</span><br></pre></td></tr></table></figure><h4 id="输出-16"><a href="#输出-16" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">as</span><br><span class="line">bs</span><br><span class="line">df</span><br><span class="line">ju</span><br><span class="line">kl</span><br><span class="line">lo</span><br><span class="line">mf</span><br><span class="line">qw</span><br><span class="line">tr</span><br><span class="line">yh</span><br></pre></td></tr></table></figure><h3 id="代码-39"><a href="#代码-39" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble</span><span class="params">(<span class="type">char</span> str[][<span class="number">6</span>])</span></span><br><span class="line">&#123;<span class="comment">//注意在调用二维数组时至少需注明第二个参数长度</span></span><br><span class="line"><span class="type">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">9</span> ; j &gt; <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(str[j], str[j - <span class="number">1</span>]) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;<span class="comment">//注意对字符串的赋值需用到strcpy进行整体赋值</span></span><br><span class="line"><span class="type">char</span> p[<span class="number">6</span>];</span><br><span class="line"><span class="built_in">strcpy</span>(p, str[j]);</span><br><span class="line"><span class="built_in">strcpy</span>(str[j], str[j - <span class="number">1</span>]);</span><br><span class="line"><span class="built_in">strcpy</span>(str[j - <span class="number">1</span>], p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> str[<span class="number">10</span>][<span class="number">6</span>];</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">(<span class="type">void</span>)<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str[i]);</span><br><span class="line">&#125;</span><br><span class="line">bubble(str);</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第八周第15题"><a href="#第八周第15题" class="headerlink" title="第八周第15题"></a>第八周第15题</h2><h3 id="题目描述-40"><a href="#题目描述-40" class="headerlink" title="题目描述"></a>题目描述</h3><p>有一个班4个学生，5门课程。</p><ol><li>求第一门课程的平均分；</li><li>找出有两门以上课程不及格的学生，输出他们的学号和全部课程成绩及平均成绩；</li><li>找出平均成绩在90分以上或全部课程成绩在85分以上的学生。分别编三个函数实现以上三个要求。</li></ol><h3 id="代码-40"><a href="#代码-40" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="type">float</span> score[<span class="number">5</span>];</span><br><span class="line">&#125;Stu;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">score1_average</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;<span class="comment">//求第一门课程的平均分</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += stu[i].score[<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">4.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">stu_average</span><span class="params">(Stu* stu, <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//求第n名同学的平均成绩</span></span><br><span class="line"><span class="type">float</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum = sum + stu[n].score[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum / <span class="number">5.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">search1</span><span class="params">(Stu* stu, <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//该函数返回第n名同学不及格的学科数</span></span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>, i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[n].score[i] &lt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">search2</span><span class="params">(Stu* stu, <span class="type">int</span> n)</span></span><br><span class="line">&#123;<span class="comment">//该函数用于判断第n名学生所有成绩是否均高于85分。返回值为1，则均高于85分，返回值为0，则至少有一科小于等于85分</span></span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[n].score[i] &lt;= <span class="number">85</span>)</span><br><span class="line">&#123;<span class="comment">//一旦有一门课程小于等于85分，则退出循环</span></span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//输入5门课程名称</span></span><br><span class="line"><span class="type">char</span> task_name[<span class="number">5</span>][<span class="number">20</span>];</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, task_name[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Stu stu[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//输入4名学生的信息</span></span><br><span class="line"><span class="type">int</span> j;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu[j].id);</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;stu[j].score[k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>, score1_average(stu));</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m &lt; <span class="number">4</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (search1(stu, m) &gt; <span class="number">2</span>)</span><br><span class="line">&#123;<span class="comment">//若该名同学不及格课程数大于2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, stu[m].id);</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">for</span> (n = <span class="number">0</span>; n &lt; <span class="number">5</span>; n++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %.2f&quot;</span>, stu[m].score[n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %.2f\n&quot;</span>, stu_average(stu, m));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> b;</span><br><span class="line"><span class="keyword">for</span> (b = <span class="number">0</span>; b &lt; <span class="number">4</span>; b++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu_average(stu, b) &gt; <span class="number">90</span> || search2(stu,b) == <span class="number">1</span>)</span><br><span class="line">&#123;<span class="comment">//若该名学生平均成绩在90分以上或全部课程成绩在85分以上</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, stu[b].id);</span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"><span class="keyword">for</span> (c = <span class="number">0</span>; c &lt; <span class="number">5</span>; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %.2f&quot;</span>, stu[b].score[c]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %.2f\n&quot;</span>, stu_average(stu, b));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目输出-23"><a href="#题目输出-23" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">分别隔行输入五门课程名称。</span><br><span class="line">换行之后输入学号，第一门成绩，第二门成绩。第三门成绩，第四门成绩，第五门成绩顺序依次输入信息，不同信息之间以空格隔开。每输入完成一名同学信息，换行后输入下一位同学信息。紧接着（不空行）系统输出第一门课程平均分。（保留两位小数）</span><br><span class="line">换行输出第2问中的学生信息，换行输出第3问中的学生信息。（首先输出学号，然后空格，之后间隔分别输出五门课程成绩，空格后输出对应平均成绩），成绩保留两位小数。</span><br></pre></td></tr></table></figure><h2 id="第八周第16题"><a href="#第八周第16题" class="headerlink" title="第八周第16题"></a>第八周第16题</h2><h3 id="题目描述-41"><a href="#题目描述-41" class="headerlink" title="题目描述"></a>题目描述</h3><p>输入一个字符串，内有数字和非数字字符，例如：<br>A123x456 17960? 302tab5876<br>将其中连续的数字作为一个整数，依次存放到一数组a中。例如，123放在a[0]，456放在a[1]…统计共有多少个整数，并输出这些数。</p><h3 id="代码-41"><a href="#代码-41" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input 10 numbers:&quot;</span>);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;inputnum[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">exchange</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始化min和max指针，均指向inputnum数组的首元</span></span><br><span class="line"><span class="type">int</span> *min = inputnum;</span><br><span class="line"><span class="type">int</span> *max = inputnum;</span><br><span class="line"><span class="comment">//寻找inputnum数组中的最小元</span></span><br><span class="line"><span class="type">int</span>* p;</span><br><span class="line"><span class="keyword">for</span> (p = inputnum + <span class="number">1</span>; p &lt; inputnum + <span class="number">10</span>; p++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*min &gt; *p)</span><br><span class="line">&#123;</span><br><span class="line">min = p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//寻找inputnum数组中的最大元</span></span><br><span class="line"><span class="type">int</span>* q;</span><br><span class="line"><span class="keyword">for</span> (q = inputnum + <span class="number">1</span>; q &lt; inputnum + <span class="number">10</span>; q++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*max &lt; *q)</span><br><span class="line">&#123;</span><br><span class="line">max = q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//交换:注意此时max和min均指向的是数组inputnum中最大值和最小值对应的地址，因此为了将inputnum数组值交换，需要应用“*”运算将max和min指向的值取出。</span></span><br><span class="line"><span class="type">int</span> tmp1 = *min;</span><br><span class="line">*min = inputnum[<span class="number">0</span>];</span><br><span class="line">inputnum[<span class="number">0</span>] = tmp1;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> tmp2 = *max;</span><br><span class="line">*max = inputnum[<span class="number">9</span>];</span><br><span class="line">inputnum[<span class="number">9</span>] = tmp2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="type">int</span>* inputnum)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Now,they are:&quot;</span>);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,inputnum[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, inputnum[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> inputnum[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">input(inputnum);</span><br><span class="line">exchange(inputnum);</span><br><span class="line">output(inputnum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目输出-24"><a href="#题目输出-24" class="headerlink" title="题目输出"></a>题目输出</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先输出“input 10 numbers:”</span><br><span class="line">用户在其后输入:32 24 56 78 1 98 36 44 29 6后输出“Now,they are: 1 24 56 78 32 6 36 44 29 98”</span><br></pre></td></tr></table></figure><h2 id="第八周第17题"><a href="#第八周第17题" class="headerlink" title="第八周第17题"></a>第八周第17题</h2><h3 id="题目描述-42"><a href="#题目描述-42" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一函数，实现两个字符串比较。即自己写一个strcmp函数，函数原型为<br>int strcmp(char * p1,char * p2);<br>设p1指向字符串s1,设p2指向字符串s2。要求当s1=s2时，返回值为0；若s1不等于s2，返回它们二者第一个不同字符的ASCII码差值（如”BOY”与”BAD”，第2个字母不同，O与A之差为79-65=14。）如果s1&gt;s2,则输出正值；如果s1</p><h3 id="输入输出样例-13"><a href="#输入输出样例-13" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-13"><a href="#输入-13" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">asdfgh</span><br><span class="line">asdfgh</span><br></pre></td></tr></table></figure><h4 id="输出-17"><a href="#输出-17" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="代码-42"><a href="#代码-42" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">strcmp</span><span class="params">(<span class="type">char</span>* p1, <span class="type">char</span>* p2)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p1[i] != <span class="string">&#x27;\0&#x27;</span> &amp;&amp; p2[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;<span class="comment">//当p1和p2均未截止时</span></span><br><span class="line"><span class="keyword">if</span> (p1[i] == p2[i])</span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//此时第i位出现了差异，故直接返回二者AscII码的差值</span></span><br><span class="line"><span class="keyword">return</span> (p1[i] - p2[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当有一数组截止或两数组均截止时，返回该位的差值即可</span></span><br><span class="line"><span class="keyword">return</span> (p1[i] - p2[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> p1[<span class="number">30</span>], p2[<span class="number">30</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, p1, p2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, <span class="built_in">strcmp</span>(p1, p2));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九周第1题"><a href="#第九周第1题" class="headerlink" title="第九周第1题"></a>第九周第1题</h2><h3 id="题目描述-43"><a href="#题目描述-43" class="headerlink" title="题目描述"></a>题目描述</h3><p>定义一个结构体变量（包括年、月、日）。计算该日在本年中是第几天，注意闰年问题。</p><h3 id="输入输出样例-14"><a href="#输入输出样例-14" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-14"><a href="#输入-14" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018,10,10</span><br></pre></td></tr></table></figure><h4 id="输出-18"><a href="#输出-18" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">input year,month,day:10/10 is the 283th day in 2018.</span><br></pre></td></tr></table></figure><h3 id="代码-43"><a href="#代码-43" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">calender</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;Calender;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isleapyear</span><span class="params">(<span class="type">int</span> year)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">calculate</span><span class="params">(Calender input,<span class="type">int</span> days[])</span></span><br><span class="line">&#123;<span class="comment">//计算天数</span></span><br><span class="line"><span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; input.month; i++)</span><br><span class="line">&#123;</span><br><span class="line">day = day + days[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (isleapyear(input.year) &amp;&amp; input.month &gt;= <span class="number">3</span>) <span class="comment">//注意input.month &gt;= 3的要求</span></span><br><span class="line">    day = day + input.day + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    day = day + input.day;</span><br><span class="line"><span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Calender input = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;input.year, &amp;input.month, &amp;input.day);</span><br><span class="line"><span class="type">int</span> days[<span class="number">13</span>] = &#123; <span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input year,month,day:%d/%d is the %dth day in %d.&quot;</span>, input.month, input.day, calculate(input, days), input.year);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九周第2题"><a href="#第九周第2题" class="headerlink" title="第九周第2题"></a>第九周第2题</h2><h3 id="题目描述-44"><a href="#题目描述-44" class="headerlink" title="题目描述"></a>题目描述</h3><p>写一个函数days，实现上题的计算。由主函数将年、月、日传递给函数days，计算后将日子数传回主函数输出。</p><h3 id="输入输出样例-15"><a href="#输入输出样例-15" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-15"><a href="#输入-15" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2018,5,28</span><br></pre></td></tr></table></figure><h4 id="输出-19"><a href="#输出-19" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5/28 is the 148th day in 2018.</span><br></pre></td></tr></table></figure><h3 id="代码-44"><a href="#代码-44" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">calender</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;Calender;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">isleapyear</span><span class="params">(<span class="type">int</span> year)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || year % <span class="number">400</span> == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">days</span><span class="params">(Calender input,<span class="type">int</span> dayss[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> day = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; input.month; i++)</span><br><span class="line">&#123;</span><br><span class="line">day = day + dayss[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(isleapyear(input.year) &amp;&amp; input.month &gt;= <span class="number">3</span>)</span><br><span class="line">    day = day + input.day + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    day = day + input.day;</span><br><span class="line"><span class="keyword">return</span> day;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Calender input = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d,%d,%d&quot;</span>, &amp;input.year, &amp;input.month, &amp;input.day);</span><br><span class="line"><span class="type">int</span> dayss[<span class="number">13</span>] = &#123; <span class="number">0</span>,<span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d/%d is the %dth day in %d.&quot;</span>, input.month, input.day, days(input, dayss), input.year);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九周第3题"><a href="#第九周第3题" class="headerlink" title="第九周第3题"></a>第九周第3题</h2><h3 id="题目描述-45"><a href="#题目描述-45" class="headerlink" title="题目描述"></a>题目描述</h3><p>编写一个函数，打印一个学生的成绩数组，该数组中有5个学生的数据记录，每个记录包括num,name,score，用主函数输入这些记录，用print函数输出这些记录。</p><h3 id="输入输出样例-16"><a href="#输入输出样例-16" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-16"><a href="#输入-16" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Zhangsan 90 90 90</span><br><span class="line">2 lisi 90 80 80</span><br></pre></td></tr></table></figure><h4 id="输出-20"><a href="#输出-20" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 Zhangsan 90 90 90</span><br><span class="line">2 lisi 90 80 80</span><br></pre></td></tr></table></figure><h3 id="代码-45"><a href="#代码-45" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> id[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> score1;</span><br><span class="line"><span class="type">int</span> score2;</span><br><span class="line"><span class="type">int</span> score3;</span><br><span class="line">&#125;Stu;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %s %d %d %d&quot;</span>, stu[<span class="number">0</span>].num, stu[<span class="number">0</span>].id, stu[<span class="number">0</span>].score1, stu[<span class="number">0</span>].score2, stu[<span class="number">0</span>].score3);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d %s %d %d %d&quot;</span>, stu[i].num, stu[i].id, stu[i].score1, stu[i].score2, stu[i].score3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Stu stu[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%d%d%d&quot;</span>, &amp;stu[k].num, stu[k].id, &amp;stu[k].score1, &amp;stu[k].score2, &amp;stu[k].score3);</span><br><span class="line">&#125;</span><br><span class="line">print(stu);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九周第4题"><a href="#第九周第4题" class="headerlink" title="第九周第4题"></a>第九周第4题</h2><h3 id="题目描述-46"><a href="#题目描述-46" class="headerlink" title="题目描述"></a>题目描述</h3><p>在上题基础上，编写一个input函数，用来输入5个学生的成绩。</p><h3 id="输入输出样例-17"><a href="#输入输出样例-17" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><h4 id="输入-17"><a href="#输入-17" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 Zhangsan 90 90 80 2 Lisi 80 70 60 3 Liufei 96 95 94</span><br></pre></td></tr></table></figure><h4 id="输出-21"><a href="#输出-21" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 Zhangsan 90 90 80</span><br><span class="line">2 Lisi 80 70 60</span><br><span class="line">3 Liufei 96 95 94</span><br></pre></td></tr></table></figure><h3 id="代码-46"><a href="#代码-46" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> id[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> score1;</span><br><span class="line"><span class="type">int</span> score2;</span><br><span class="line"><span class="type">int</span> score3;</span><br><span class="line">&#125;Stu;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">5</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%d%d%d&quot;</span>, &amp;stu[k].num, stu[k].id, &amp;stu[k].score1, &amp;stu[k].score2, &amp;stu[k].score3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">print</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %s %d %d %d&quot;</span>, stu[<span class="number">0</span>].num, stu[<span class="number">0</span>].id, stu[<span class="number">0</span>].score1, stu[<span class="number">0</span>].score2, stu[<span class="number">0</span>].score3);</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d %s %d %d %d&quot;</span>, stu[i].num, stu[i].id, stu[i].score1, stu[i].score2, stu[i].score3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Stu stu[<span class="number">5</span>];</span><br><span class="line">input(stu);</span><br><span class="line">print(stu);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第九周第5题"><a href="#第九周第5题" class="headerlink" title="第九周第5题"></a>第九周第5题</h2><h3 id="题目描述-47"><a href="#题目描述-47" class="headerlink" title="题目描述"></a>题目描述</h3><p>有10个学生，每个学生的数据包括学号、姓名、3门课程的成绩，从键盘输入10个学生数据，要求输出3门课程总平均成绩，以及最高分学生的数据（包括学号、姓名、3门课程成绩、平均分数，保留小数点后两位）。</p><h3 id="输入输出样例-18"><a href="#输入输出样例-18" class="headerlink" title="输入输出样例"></a>输入输出样例</h3><p>以5个学生为例</p><h4 id="输入-18"><a href="#输入-18" class="headerlink" title="输入"></a>输入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 Zhangsan 89 67 78 2 Lisi 69 78 77 3 Liufei 98 96 95 4 Liming 87 96 85 5 Hanxue 90 87 93</span><br></pre></td></tr></table></figure><h4 id="输出-22"><a href="#输出-22" class="headerlink" title="输出"></a>输出</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">总平均成绩为85.67</span><br><span class="line">最高分学生为3 Liufei 98.00 96.00 95.00 96.33</span><br></pre></td></tr></table></figure><h3 id="代码-47"><a href="#代码-47" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> num;</span><br><span class="line"><span class="type">char</span> id[<span class="number">10</span>];</span><br><span class="line"><span class="type">float</span> score1;</span><br><span class="line"><span class="type">float</span> score2;</span><br><span class="line"><span class="type">float</span> score3;</span><br><span class="line">&#125;Stu;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%s%f%f%f&quot;</span>, &amp;stu[k].num, stu[k].id, &amp;stu[k].score1, &amp;stu[k].score2, &amp;stu[k].score3);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> <span class="title function_">average</span><span class="params">(Stu* stu, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (stu[n].score1 + stu[n].score2 + stu[n].score3) / <span class="number">3.0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">maxstu</span><span class="params">(Stu* stu)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">float</span> max = average(stu, <span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> numm = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (max&lt; average(stu, k))</span><br><span class="line">&#123;</span><br><span class="line">max = average(stu, k);</span><br><span class="line">numm = k;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> numm;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Stu stu[<span class="number">10</span>];</span><br><span class="line">input(stu);</span><br><span class="line">maxstu(stu);</span><br><span class="line"><span class="type">float</span> Average = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> l;</span><br><span class="line"><span class="keyword">for</span> ( l = <span class="number">0</span>; l &lt; <span class="number">10</span>; l++)</span><br><span class="line">&#123;</span><br><span class="line">Average += average(stu, l);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;总平均成绩为%.2f\n&quot;</span>, Average / <span class="number">10.0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最高分学生为%d %s %.2f %.2f %.2f %.2f&quot;</span>, stu[maxstu(stu)].num, stu[maxstu(stu)].id, stu[maxstu(stu)].score1, stu[maxstu(stu)].score2, stu[maxstu(stu)].score3, average(stu, maxstu(stu)));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> PKSTU </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>README</title>
      <link href="/2023/08/24/README/"/>
      <url>/2023/08/24/README/</url>
      
        <content type="html"><![CDATA[<h2 id="这是一个正在经营的博客网站"><a href="#这是一个正在经营的博客网站" class="headerlink" title="这是一个正在经营的博客网站~"></a>这是一个正在经营的博客网站~</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><blockquote><p>学得太杂了，需要整理知识，以备查阅与复习。</p></blockquote><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><blockquote><p>目前打算做的:</p><ol><li>更新深度学习和CV方向笔记</li><li>更新算法学习笔记</li><li>更新校内课程笔记(如果有的话)</li><li>……</li></ol></blockquote><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><blockquote><p>博客仍在经营，目前不考虑挂靠任何搜索引擎，不过依然可以通过收藏网址的方式直接访问。</p><p>博客驱动为Hexo，主题为melody。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
